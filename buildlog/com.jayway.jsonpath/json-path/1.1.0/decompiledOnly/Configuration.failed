sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/JsonSmartJsonProvider.java:22: error: package net.minidev.json.mapper does not exist
import net.minidev.json.mapper.AMapper;
                              ^
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/JsonSmartJsonProvider.java:23: error: package net.minidev.json.mapper does not exist
import net.minidev.json.mapper.DefaultMapperOrdered;
                              ^
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/AbstractJsonProvider.java:19: error: package org.slf4j does not exist
import org.slf4j.Logger;
                ^
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/AbstractJsonProvider.java:20: error: package org.slf4j does not exist
import org.slf4j.LoggerFactory;
                ^
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/JsonSmartJsonProvider.java:37: error: cannot find symbol
    private final static AMapper<?> orderedMapper = DefaultMapperOrdered.DEFAULT;
                         ^
  symbol:   class AMapper
  location: class JsonSmartJsonProvider
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/AbstractJsonProvider.java:28: error: cannot find symbol
    private static final Logger logger = LoggerFactory.getLogger(AbstractJsonProvider.class);
                         ^
  symbol:   class Logger
  location: class AbstractJsonProvider
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/mapper/DefaultMappingProvider.java:19: error: package org.slf4j does not exist
import org.slf4j.Logger;
                ^
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/mapper/DefaultMappingProvider.java:20: error: package org.slf4j does not exist
import org.slf4j.LoggerFactory;
                ^
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/mapper/DefaultMappingProvider.java:26: error: cannot find symbol
    private static final Logger logger = LoggerFactory.getLogger(DefaultMappingProvider.class);
                         ^
  symbol:   class Logger
  location: class DefaultMappingProvider
sources/structure/com.jayway.jsonpath/json-path/1.1.0/Decompiled/com/jayway/jsonpath/Configuration.java:56: error: incompatible types: Collection<CAP#1> cannot be converted to Collection<? extends Option>
        opts.addAll((Collection<?>)this.options);
                    ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/com.jayway.jsonpath/json-path/1.1.0/Decompiled/com/jayway/jsonpath/Configuration.java:57: error: incompatible types: Collection<CAP#1> cannot be converted to Collection<? extends Option>
        opts.addAll((Collection<?>)Arrays.asList(options));
                    ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/com.jayway.jsonpath/json-path/1.1.0/Decompiled/com/jayway/jsonpath/Configuration.java:124: error: incompatible types: Collection<CAP#1> cannot be converted to Collection<? extends Option>
                this.options.addAll((Collection<?>)Arrays.asList(flags));
                                    ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/com.jayway.jsonpath/json-path/1.1.0/Decompiled/com/jayway/jsonpath/Configuration.java:130: error: incompatible types: Collection<CAP#1> cannot be converted to Collection<? extends Option>
            this.options.addAll((Collection<?>)options);
                                ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/com.jayway.jsonpath/json-path/1.1.0/Decompiled/com/jayway/jsonpath/Configuration.java:141: error: constructor Configuration in class Configuration cannot be applied to given types;
            return new Configuration(this.jsonProvider, this.mappingProvider, this.options, null);
                   ^
  required: JsonProvider,MappingProvider,EnumSet<Option>
  found: JsonProvider,MappingProvider,EnumSet<Option>,<null>
  reason: actual and formal argument lists differ in length
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/AbstractJsonProvider.java:28: error: cannot find symbol
    private static final Logger logger = LoggerFactory.getLogger(AbstractJsonProvider.class);
                                         ^
  symbol:   variable LoggerFactory
  location: class AbstractJsonProvider
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/json/JsonSmartJsonProvider.java:37: error: cannot find symbol
    private final static AMapper<?> orderedMapper = DefaultMapperOrdered.DEFAULT;
                                                    ^
  symbol:   variable DefaultMapperOrdered
  location: class JsonSmartJsonProvider
sources/structure/com.jayway.jsonpath/json-path/1.1.0/extractedSources/com/jayway/jsonpath/internal/spi/mapper/DefaultMappingProvider.java:26: error: cannot find symbol
    private static final Logger logger = LoggerFactory.getLogger(DefaultMappingProvider.class);
                                         ^
  symbol:   variable LoggerFactory
  location: class DefaultMappingProvider
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
17 errors
