sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:7: error: cannot find symbol
import com.google.common.collect.LinkedHashMultiset;
                                ^
  symbol:   class LinkedHashMultiset
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:8: error: cannot find symbol
import com.google.common.collect.Multisets;
                                ^
  symbol:   class Multisets
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:9: error: package com.google.common.base does not exist
import com.google.common.base.Equivalence;
                             ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:10: error: package com.google.common.base does not exist
import com.google.common.base.Function;
                             ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:11: error: cannot find symbol
import com.google.common.collect.ImmutableList;
                                ^
  symbol:   class ImmutableList
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:13: error: cannot find symbol
import com.google.common.collect.Iterables;
                                ^
  symbol:   class Iterables
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:14: error: cannot find symbol
import com.google.common.collect.SetMultimap;
                                ^
  symbol:   class SetMultimap
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:15: error: package com.google.common.base does not exist
import com.google.common.base.Objects;
                             ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:16: error: cannot find symbol
import com.google.common.collect.Lists;
                                ^
  symbol:   class Lists
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:17: error: cannot find symbol
import com.google.common.collect.HashMultimap;
                                ^
  symbol:   class HashMultimap
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:18: error: package com.google.common.base does not exist
import com.google.common.base.Optional;
                             ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:19: error: package com.google.common.base does not exist
import com.google.common.base.Strings;
                             ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:20: error: cannot find symbol
import com.google.common.collect.Multiset;
                                ^
  symbol:   class Multiset
  location: package com.google.common.collect
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:67: error: package Multiset does not exist
    static String entryString(final Multiset.Entry<?> entry) {
                                            ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:139: error: cannot find symbol
    private static Optional<String> getHomogeneousTypeName(final Iterable<?> items) {
                   ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:198: error: cannot find symbol
    static <E> ImmutableList<E> concat(final Iterable<? extends E>... inputs) {
               ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:202: error: cannot find symbol
    static <E> ImmutableList<E> append(final E[] array, final E object) {
               ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:206: error: cannot find symbol
    static <E> ImmutableList<E> append(final ImmutableList<? extends E> list, final E object) {
                                             ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:206: error: cannot find symbol
    static <E> ImmutableList<E> append(final ImmutableList<? extends E> list, final E object) {
               ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:210: error: cannot find symbol
    static <E> ImmutableList<E> sandwich(final E first, final E[] array, final E last) {
               ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:279: error: cannot find symbol
        final Optional<String> homogeneousTypeToDisplay;
              ^
  symbol:   class Optional
  location: class DuplicateGroupedAndTyped
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:281: error: cannot find symbol
        DuplicateGroupedAndTyped(final NonHashingMultiset<?> valuesAndMaybeTypes, final Optional<String> homogeneousTypeToDisplay) {
                                                                                        ^
  symbol:   class Optional
  location: class DuplicateGroupedAndTyped
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:294: error: package Multiset does not exist
        Iterable<Multiset.Entry<?>> entrySet() {
                         ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:216: error: cannot find symbol
        private final Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>> unwrapKey;
                      ^
  symbol:   class Function
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:216: error: package Multiset does not exist
        private final Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>> unwrapKey;
                                       ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:216: error: package Equivalence does not exist
        private final Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>> unwrapKey;
                                                         ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:216: error: package Multiset does not exist
        private final Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>> unwrapKey;
                                                                               ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:217: error: cannot find symbol
        private final Multiset<Equivalence.Wrapper<E>> contents;
                      ^
  symbol:   class Multiset
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:217: error: package Equivalence does not exist
        private final Multiset<Equivalence.Wrapper<E>> contents;
                                          ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:218: error: cannot find symbol
        private static final Equivalence<Object> EQUALITY_WITHOUT_USING_HASH_CODE;
                             ^
  symbol:   class Equivalence
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:245: error: package Multiset does not exist
        Iterable<Multiset.Entry<?>> entrySet() {
                         ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:83: error: cannot find symbol
        final Optional<String> homogeneousTypeName = getHomogeneousTypeName(items);
              ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:84: error: cannot find symbol
        return homogeneousTypeName.isPresent() ? Strings.lenientFormat("%s (%s)", new Object[] { countDuplicates(items), homogeneousTypeName.get() }) : countDuplicates(addTypeInfoToEveryItem(items));
                                                 ^
  symbol:   variable Strings
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:90: error: cannot find symbol
            final Optional<String> homogeneousTypeName = getHomogeneousTypeName(items);
                  ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:94: error: cannot find symbol
        return new DuplicateGroupedAndTyped(countDuplicatesToMultiset(itemsIterable), (Optional<String>)Optional.absent());
                                                                                       ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:94: error: cannot find symbol
        return new DuplicateGroupedAndTyped(countDuplicatesToMultiset(itemsIterable), (Optional<String>)Optional.absent());
                                                                                                        ^
  symbol:   variable Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:99: error: cannot find symbol
        final Optional<String> homogeneousTypeName = getHomogeneousTypeName(items);
              ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:101: error: cannot find symbol
            return Strings.lenientFormat("%s (%s)", new Object[] { items, homogeneousTypeName.get() });
                   ^
  symbol:   variable Strings
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:107: error: cannot find symbol
        final SetMultimap<String, Object> stringValueToItemsToCheck = (SetMultimap<String, Object>)HashMultimap.create();
              ^
  symbol:   class SetMultimap
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:107: error: cannot find symbol
        final SetMultimap<String, Object> stringValueToItemsToCheck = (SetMultimap<String, Object>)HashMultimap.create();
                                                                       ^
  symbol:   class SetMultimap
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:107: error: cannot find symbol
        final SetMultimap<String, Object> stringValueToItemsToCheck = (SetMultimap<String, Object>)HashMultimap.create();
                                                                                                   ^
  symbol:   variable HashMultimap
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:111: error: cannot find symbol
        final List<Object> result = (List<Object>)Lists.newArrayList();
                                                  ^
  symbol:   variable Lists
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:114: error: cannot find symbol
                if (!Objects.equal(itemToCheck2, item)) {
                     ^
  symbol:   variable Objects
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:124: error: cannot find symbol
        return !Iterables.isEmpty((Iterable)items1) && !Iterables.isEmpty((Iterable)items2) && !retainMatchingToString(items1, items2).isEmpty();
                ^
  symbol:   variable Iterables
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:124: error: cannot find symbol
        return !Iterables.isEmpty((Iterable)items1) && !Iterables.isEmpty((Iterable)items2) && !retainMatchingToString(items1, items2).isEmpty();
                                                        ^
  symbol:   variable Iterables
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:134: error: cannot find symbol
            return Strings.lenientFormat("Map.Entry<%s, %s>", new Object[] { objectToTypeName(entry.getKey()), valueTypeName });
                   ^
  symbol:   variable Strings
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:140: error: cannot find symbol
        Optional<String> homogeneousTypeName = (Optional<String>)Optional.absent();
        ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:140: error: cannot find symbol
        Optional<String> homogeneousTypeName = (Optional<String>)Optional.absent();
                                                ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:140: error: cannot find symbol
        Optional<String> homogeneousTypeName = (Optional<String>)Optional.absent();
                                                                 ^
  symbol:   variable Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:143: error: cannot find symbol
                return (Optional<String>)Optional.absent();
                        ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:143: error: cannot find symbol
                return (Optional<String>)Optional.absent();
                                         ^
  symbol:   variable Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:146: error: cannot find symbol
                homogeneousTypeName = (Optional<String>)Optional.of((Object)objectToTypeName(item));
                                       ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:146: error: cannot find symbol
                homogeneousTypeName = (Optional<String>)Optional.of((Object)objectToTypeName(item));
                                                        ^
  symbol:   variable Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:150: error: cannot find symbol
                    return (Optional<String>)Optional.absent();
                            ^
  symbol:   class Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:150: error: cannot find symbol
                    return (Optional<String>)Optional.absent();
                                             ^
  symbol:   variable Optional
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:159: error: cannot find symbol
        final List<String> itemsWithTypeInfo = (List<String>)Lists.newArrayList();
                                                             ^
  symbol:   variable Lists
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:161: error: cannot find symbol
            itemsWithTypeInfo.add(Strings.lenientFormat("%s (%s)", new Object[] { item, objectToTypeName(item) }));
                                  ^
  symbol:   variable Strings
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:170: error: cannot find symbol
        return (Collection<T>)Lists.newArrayList((Iterable)iterable);
                              ^
  symbol:   variable Lists
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:177: error: cannot find symbol
        return (List<T>)Lists.newArrayList((Iterable)iterable);
                        ^
  symbol:   variable Lists
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:181: error: cannot find symbol
        if (Iterables.contains((Iterable)items, (Object)"")) {
            ^
  symbol:   variable Iterables
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:182: error: cannot find symbol
            final List<T> annotatedItems = (List<T>)Lists.newArrayList();
                                                    ^
  symbol:   variable Lists
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:184: error: cannot find symbol
                if (Objects.equal((Object)item, (Object)"")) {
                    ^
  symbol:   variable Objects
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:199: error: cannot find symbol
        return (ImmutableList<E>)ImmutableList.copyOf(Iterables.concat((Iterable[])inputs));
                ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:199: error: cannot find symbol
        return (ImmutableList<E>)ImmutableList.copyOf(Iterables.concat((Iterable[])inputs));
                                 ^
  symbol:   variable ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:199: error: cannot find symbol
        return (ImmutableList<E>)ImmutableList.copyOf(Iterables.concat((Iterable[])inputs));
                                                      ^
  symbol:   variable Iterables
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:203: error: cannot find symbol
        return (ImmutableList<E>)new ImmutableList.Builder().add((Object[])array).add((Object)object).build();
                ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:203: error: package ImmutableList does not exist
        return (ImmutableList<E>)new ImmutableList.Builder().add((Object[])array).add((Object)object).build();
                                                  ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:207: error: cannot find symbol
        return (ImmutableList<E>)new ImmutableList.Builder().addAll((Iterable)list).add((Object)object).build();
                ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:207: error: package ImmutableList does not exist
        return (ImmutableList<E>)new ImmutableList.Builder().addAll((Iterable)list).add((Object)object).build();
                                                  ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:211: error: cannot find symbol
        return (ImmutableList<E>)new ImmutableList.Builder().add((Object)first).add((Object[])array).add((Object)last).build();
                ^
  symbol:   class ImmutableList
  location: class SubjectUtils
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:211: error: package ImmutableList does not exist
        return (ImmutableList<E>)new ImmutableList.Builder().add((Object)first).add((Object[])array).add((Object)last).build();
                                                  ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: cannot find symbol
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                              ^
  symbol:   class Function
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: package Multiset does not exist
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                               ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: package Equivalence does not exist
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                                                 ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: package Multiset does not exist
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                                                                       ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: cannot find symbol
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                                                                                      ^
  symbol:   class Function
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: package Multiset does not exist
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                                                                                                       ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: package Equivalence does not exist
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                                                                                                                         ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:221: error: package Multiset does not exist
            this.unwrapKey = (Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>)new Function<Multiset.Entry<Equivalence.Wrapper<E>>, Multiset.Entry<?>>() {
                                                                                                                                                               ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:222: error: package Multiset does not exist
                public Multiset.Entry<?> apply(final Multiset.Entry<Equivalence.Wrapper<E>> input) {
                                                             ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:222: error: package Equivalence does not exist
                public Multiset.Entry<?> apply(final Multiset.Entry<Equivalence.Wrapper<E>> input) {
                                                                               ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:222: error: package Multiset does not exist
                public Multiset.Entry<?> apply(final Multiset.Entry<Equivalence.Wrapper<E>> input) {
                               ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:223: error: package Multiset does not exist
                    return (Multiset.Entry<?>)Multisets.immutableEntry(((Equivalence.Wrapper)input.getElement()).get(), input.getCount());
                                    ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:223: error: cannot find symbol
                    return (Multiset.Entry<?>)Multisets.immutableEntry(((Equivalence.Wrapper)input.getElement()).get(), input.getCount());
                                              ^
  symbol: variable Multisets
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:223: error: package Equivalence does not exist
                    return (Multiset.Entry<?>)Multisets.immutableEntry(((Equivalence.Wrapper)input.getElement()).get(), input.getCount());
                                                                                    ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:226: error: cannot find symbol
            this.contents = (Multiset<Equivalence.Wrapper<E>>)LinkedHashMultiset.create();
                             ^
  symbol:   class Multiset
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:226: error: package Equivalence does not exist
            this.contents = (Multiset<Equivalence.Wrapper<E>>)LinkedHashMultiset.create();
                                                 ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:226: error: cannot find symbol
            this.contents = (Multiset<Equivalence.Wrapper<E>>)LinkedHashMultiset.create();
                                                              ^
  symbol:   variable LinkedHashMultiset
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:246: error: package Multiset does not exist
            return (Iterable<Multiset.Entry<?>>)Iterables.transform((Iterable)this.contents.entrySet(), (Function)this.unwrapKey);
                                     ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:246: error: cannot find symbol
            return (Iterable<Multiset.Entry<?>>)Iterables.transform((Iterable)this.contents.entrySet(), (Function)this.unwrapKey);
                                                                                                         ^
  symbol:   class Function
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:246: error: cannot find symbol
            return (Iterable<Multiset.Entry<?>>)Iterables.transform((Iterable)this.contents.entrySet(), (Function)this.unwrapKey);
                                                ^
  symbol:   variable Iterables
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:251: error: package Multiset does not exist
            for (final Multiset.Entry<?> entry : this.entrySet()) {
                               ^
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:264: error: cannot find symbol
            EQUALITY_WITHOUT_USING_HASH_CODE = new Equivalence<Object>() {
                                                   ^
  symbol:   class Equivalence
  location: class NonHashingMultiset<E>
  where E is a type-variable:
    E extends Object declared in class NonHashingMultiset
sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java:266: error: cannot find symbol
                    return Objects.equal(a, b);
                           ^
  symbol: variable Objects
Note: sources/structure/com.google.truth/truth/1.1.3/Decompiled/com/google/common/truth/SubjectUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
94 errors
