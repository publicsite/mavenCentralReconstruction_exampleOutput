hybrids/org.hamcrest/hamcrest-all/1.3/Matchers.java:234: warning: [dep-ann] deprecated item is not annotated with @Deprecated
  public static <T> org.hamcrest.Matcher<T> is(java.lang.Class<T> type) {
                                            ^
hybrids/org.hamcrest/hamcrest-all/1.3/Matchers.java:936: warning: [dep-ann] deprecated item is not annotated with @Deprecated
  public static <E> org.hamcrest.Matcher<java.lang.Iterable<? extends E>> containsInAnyOrder(org.hamcrest.Matcher<? super E> itemMatcher) {
                                                                          ^
sources/structure/org.hamcrest/hamcrest-all/1.3/extractedSources/org/hamcrest/collection/IsArrayContainingInOrder.java:72: error: incompatible types: inference variable E#1 has incompatible bounds
        return arrayContaining(asList(itemMatchers));
                              ^
    equality constraints: E#2
    lower bounds: List<T>
  where E#1,E#2,T are type-variables:
    E#1 extends Object declared in method <E#1>arrayContaining(E#1...)
    E#2 extends Object declared in method <E#2>arrayContaining(Matcher<? super E#2>...)
    T extends Object declared in method <T>asList(T...)
sources/structure/org.hamcrest/hamcrest-all/1.3/extractedSources/org/hamcrest/collection/IsIterableContainingInOrder.java:141: error: incompatible types: inference variable E#1 has incompatible bounds
        return contains(asList(itemMatchers));
                       ^
    equality constraints: E#2
    lower bounds: List<T>
  where E#1,E#2,T are type-variables:
    E#1 extends Object declared in method <E#1>contains(E#1...)
    E#2 extends Object declared in method <E#2>contains(Matcher<? super E#2>...)
    T extends Object declared in method <T>asList(T...)
sources/structure/org.hamcrest/hamcrest-all/1.3/extractedSources/org/hamcrest/collection/IsIterableContainingInAnyOrder.java:125: error: incompatible types: inference variable T#1 has incompatible bounds
        return containsInAnyOrder(Arrays.asList(itemMatchers));
                                 ^
    equality constraints: T#2
    lower bounds: List<T#3>
  where T#1,T#2,T#3 are type-variables:
    T#1 extends Object declared in method <T#1>containsInAnyOrder(T#1...)
    T#2 extends Object declared in method <T#2>containsInAnyOrder(Matcher<? super T#2>...)
    T#3 extends Object declared in method <T#3>asList(T#3...)
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 errors
2 warnings
