sources/structure/org.hamcrest/hamcrest/2.2-rc1/Decompiled/org/hamcrest/collection/IsArrayContainingInAnyOrder.java:48: error: incompatible types: Collection<Matcher<? super E>> cannot be converted to Collection<Matcher<? super Object>>
        return (Matcher<E[]>)new IsArrayContainingInAnyOrder((Collection<Matcher<? super Object>>)itemMatchers);
                                                                                                  ^
  where E is a type-variable:
    E extends Object declared in method <E>arrayContainingInAnyOrder(Collection<Matcher<? super E>>)
sources/structure/org.hamcrest/hamcrest/2.2-rc1/Decompiled/org/hamcrest/collection/IsArrayContainingInAnyOrder.java:57: error: incompatible types: List<Matcher<? super E>> cannot be converted to Collection<Matcher<? super Object>>
        return (Matcher<E[]>)new IsArrayContainingInAnyOrder((Collection<Matcher<? super Object>>)matchers);
                                                                                                  ^
  where E is a type-variable:
    E extends Object declared in method <E>arrayContainingInAnyOrder(E...)
sources/structure/org.hamcrest/hamcrest/2.2-rc1/extractedSources/org/hamcrest/collection/IsIterableContainingInAnyOrder.java:101: error: incompatible types: inference variable T#1 has incompatible bounds
        return containsInAnyOrder(Arrays.asList(itemMatchers));
                                 ^
    equality constraints: T#2
    lower bounds: List<T#3>
  where T#1,T#2,T#3 are type-variables:
    T#1 extends Object declared in method <T#1>containsInAnyOrder(T#1...)
    T#2 extends Object declared in method <T#2>containsInAnyOrder(Matcher<? super T#2>...)
    T#3 extends Object declared in method <T#3>asList(T#3...)
Note: sources/structure/org.hamcrest/hamcrest/2.2-rc1/Decompiled/org/hamcrest/collection/IsArrayContainingInAnyOrder.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 errors
