sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:35: error: package exists in another module: java.base
package java.math;
^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:63: error: no suitable constructor found for BigDecimal(int,int)
  public static final BigDecimal ONE = new BigDecimal(1, 0);
                                       ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:134: error: no suitable constructor found for BigDecimal(int,int)
  public static final BigDecimal TEN = new BigDecimal(10, 0);
                                       ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:139: error: no suitable constructor found for BigDecimal(int,int)
  public static final BigDecimal ZERO = new BigDecimal(0, 0);
                                        ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:222: error: no suitable constructor found for BigDecimal(int,int)
      BI_SCALED_BY_ZERO[i] = new BigDecimal(i, 0);
                             ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:223: error: no suitable constructor found for BigDecimal(int,int)
      ZERO_SCALED_BY[i] = new BigDecimal(0, i);
                          ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:238: error: cannot find symbol
    TEN_POW = Multiplication.bigTenPows;
              ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:239: error: cannot find symbol
    FIVE_POW = Multiplication.bigFivePows;
               ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:279: error: no suitable constructor found for BigDecimal(long,int)
    return new BigDecimal(unscaledVal, 0);
           ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; long cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; long cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; long cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; long cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; possible lossy conversion from long to int)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:300: error: no suitable constructor found for BigDecimal(long,int)
    return new BigDecimal(unscaledVal, scale);
           ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; long cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; long cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; long cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; long cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; possible lossy conversion from long to int)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:306: error: cannot find symbol
        && Math.max(thisValue.bitLength, augend.bitLength
                             ^
  symbol:   variable bitLength
  location: variable thisValue of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:306: error: cannot find symbol
        && Math.max(thisValue.bitLength, augend.bitLength
                                               ^
  symbol:   variable bitLength
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:309: error: cannot find symbol
      return valueOf(thisValue.smallValue + augend.smallValue
                              ^
  symbol:   variable smallValue
  location: variable thisValue of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:309: error: cannot find symbol
      return valueOf(thisValue.smallValue + augend.smallValue
                                                  ^
  symbol:   variable smallValue
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:310: error: scale has private access in BigDecimal
          * DOUBLE_TEN_POW[(int) diffScale], thisValue.scale);
                                                      ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:314: error: scale has private access in BigDecimal
            (int) diffScale)), thisValue.scale);
                                        ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:312: error: cannot find symbol
    return new BigDecimal(thisValue.getUnscaledValue().add(
                                   ^
  symbol:   method getUnscaledValue()
  location: variable thisValue of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:313: error: cannot find symbol
        Multiplication.multiplyByTenPow(augend.getUnscaledValue(),
        ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:313: error: cannot find symbol
        Multiplication.multiplyByTenPow(augend.getUnscaledValue(),
                                              ^
  symbol:   method getUnscaledValue()
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:368: error: cannot find symbol
      compRem = remainder.abs().shiftLeftOneBit().compareTo(scaledDivisor.abs());
                               ^
  symbol:   method shiftLeftOneBit()
  location: class BigInteger
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:510: error: no suitable constructor found for BigDecimal(double,double)
    return new BigDecimal(smallValue, scale);
           ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; double cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; double cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; double cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; double cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; double cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; possible lossy conversion from double to int)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; possible lossy conversion from double to long)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:529: error: no suitable constructor found for BigDecimal(int,int)
      return new BigDecimal(0, Integer.MAX_VALUE);
             ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:531: error: no suitable constructor found for BigDecimal(int,int)
    return new BigDecimal(0, Integer.MIN_VALUE);
           ^
    constructor BigDecimal.BigDecimal(char[],MathContext) is not applicable
      (argument mismatch; int cannot be converted to char[])
    constructor BigDecimal.BigDecimal(String,MathContext) is not applicable
      (argument mismatch; int cannot be converted to String)
    constructor BigDecimal.BigDecimal(double,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(BigInteger,MathContext) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(BigInteger,int) is not applicable
      (argument mismatch; int cannot be converted to BigInteger)
    constructor BigDecimal.BigDecimal(int,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
    constructor BigDecimal.BigDecimal(long,MathContext) is not applicable
      (argument mismatch; int cannot be converted to MathContext)
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:857: error: incompatible types: bad type in conditional expression
    return ((signum() < 0) ? negate() : this);
                                        ^
    java.math.BigDecimal cannot be converted to java.math.BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:881: error: scale has private access in BigDecimal
    double diffScale = this.scale - augend.scale;
                                          ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:887: error: cannot find symbol
      if (augend.isZero()) {
                ^
  symbol:   method isZero()
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:888: error: incompatible types: java.math.BigDecimal cannot be converted to java.math.BigDecimal
        return this;
               ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:890: error: cannot find symbol
    } else if (augend.isZero()) {
                     ^
  symbol:   method isZero()
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:892: error: incompatible types: java.math.BigDecimal cannot be converted to java.math.BigDecimal
        return this;
               ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:898: error: cannot find symbol
      if (Math.max(this.bitLength, augend.bitLength) + 1 < SMALL_VALUE_BITS) {
                                         ^
  symbol:   variable bitLength
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:899: error: cannot find symbol
        return valueOf(this.smallValue + augend.smallValue, this.scale);
                                               ^
  symbol:   variable smallValue
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:902: error: cannot find symbol
          augend.getUnscaledValue()), this.scale);
                ^
  symbol:   method getUnscaledValue()
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:905: error: incompatible types: java.math.BigDecimal cannot be converted to java.math.BigDecimal
      return addAndMult10(this, augend, diffScale);
                          ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:908: error: incompatible types: java.math.BigDecimal cannot be converted to java.math.BigDecimal
      return addAndMult10(augend, this, -diffScale);
                                  ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:926: error: scale has private access in BigDecimal
    double diffScale = this.scale - augend.scale;
                                          ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:929: error: cannot find symbol
    if ((augend.isZero()) || (this.isZero()) || (mc.getPrecision() == 0)) {
               ^
  symbol:   method isZero()
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:935: error: incompatible types: java.math.BigDecimal cannot be converted to java.math.BigDecimal
      smaller = this;
                ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:936: error: cannot find symbol
    } else if (augend.approxPrecision() < -diffScale - 1) {
                     ^
  symbol:   method approxPrecision()
  location: variable augend of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:937: error: incompatible types: java.math.BigDecimal cannot be converted to java.math.BigDecimal
      larger = this;
               ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:943: error: cannot find symbol
    if (mc.getPrecision() >= larger.approxPrecision()) {
                                   ^
  symbol:   method approxPrecision()
  location: variable larger of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:951: error: cannot find symbol
      tempBI = Multiplication.multiplyByPositiveInt(larger.getUnscaledValue(),
               ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:951: error: cannot find symbol
      tempBI = Multiplication.multiplyByPositiveInt(larger.getUnscaledValue(),
                                                          ^
  symbol:   method getUnscaledValue()
  location: variable larger of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:954: error: cannot find symbol
      tempBI = larger.getUnscaledValue().subtract(
                     ^
  symbol:   method getUnscaledValue()
  location: variable larger of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:956: error: cannot find symbol
      tempBI = Multiplication.multiplyByPositiveInt(tempBI, 10).add(
               ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:960: error: scale has private access in BigDecimal
    larger = new BigDecimal(tempBI, larger.scale + 1);
                                          ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:997: error: scale has private access in BigDecimal
      if (this.scale == val.scale && this.bitLength < SMALL_VALUE_BITS
                           ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:998: error: cannot find symbol
          && val.bitLength < SMALL_VALUE_BITS) {
                ^
  symbol:   variable bitLength
  location: variable val of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:999: error: cannot find symbol
        return (smallValue < val.smallValue) ? -1
                                ^
  symbol:   variable smallValue
  location: variable val of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1000: error: cannot find symbol
            : (smallValue > val.smallValue) ? 1 : 0;
                               ^
  symbol:   variable smallValue
  location: variable val of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1002: error: scale has private access in BigDecimal
      double diffScale = this.scale - val.scale;
                                         ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1003: error: cannot find symbol
      double diffPrecision = this.approxPrecision() - val.approxPrecision();
                                                         ^
  symbol:   method approxPrecision()
  location: variable val of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1011: error: cannot find symbol
        BigInteger valUnscaled = val.getUnscaledValue();
                                    ^
  symbol:   method getUnscaledValue()
  location: variable val of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1014: error: cannot find symbol
          thisUnscaled = thisUnscaled.multiply(Multiplication.powerOf10(-diffScale));
                                               ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1016: error: cannot find symbol
          valUnscaled = valUnscaled.multiply(Multiplication.powerOf10(diffScale));
                                             ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1042: error: cannot find symbol
    BigInteger q = divisor.getUnscaledValue();
                          ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1045: error: scale has private access in BigDecimal
    double diffScale = scale - divisor.scale;
                                      ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1052: error: cannot find symbol
    if (divisor.isZero()) {
               ^
  symbol:   method isZero()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1098: error: cannot find symbol
    p = (i > 0) ? Multiplication.multiplyByFivePow(p, i) : p.shiftLeft(-i);
                  ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1167: error: cannot find symbol
    if (divisor.isZero()) {
               ^
  symbol:   method isZero()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1172: error: scale has private access in BigDecimal
    double diffScale = this.scale - divisor.scale - scale;
                                           ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1174: error: cannot find symbol
        && divisor.bitLength < SMALL_VALUE_BITS) {
                  ^
  symbol:   variable bitLength
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1176: error: cannot find symbol
        return dividePrimitiveDoubles(this.smallValue, divisor.smallValue,
                                                              ^
  symbol:   variable smallValue
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1180: error: cannot find symbol
            && divisor.bitLength + DOUBLE_TEN_POW_BIT_LENGTH[
                      ^
  symbol:   variable bitLength
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1182: error: cannot find symbol
          return dividePrimitiveDoubles(this.smallValue, divisor.smallValue
                                                                ^
  symbol:   variable smallValue
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1190: error: cannot find symbol
              * DOUBLE_TEN_POW[(int) -diffScale], divisor.smallValue, scale,
                                                         ^
  symbol:   variable smallValue
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1197: error: cannot find symbol
    BigInteger scaledDivisor = divisor.getUnscaledValue(); // for scaling of
                                      ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1202: error: cannot find symbol
      scaledDivisor = Multiplication.multiplyByTenPow(scaledDivisor,
                      ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1206: error: cannot find symbol
      scaledDividend = Multiplication.multiplyByTenPow(scaledDividend,
                       ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1232: error: cannot find symbol
    double traillingZeros = mc.getPrecision() + 2L + divisor.approxPrecision()
                                                            ^
  symbol:   method approxPrecision()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1234: error: scale has private access in BigDecimal
    double diffScale = scale - divisor.scale;
                                      ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1242: error: cannot find symbol
    if ((mc.getPrecision() == 0) || (this.isZero()) || (divisor.isZero())) {
                                                               ^
  symbol:   method isZero()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1248: error: cannot find symbol
          Multiplication.powerOf10(traillingZeros));
          ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1251: error: cannot find symbol
    quotAndRem = quotAndRem[0].divideAndRemainder(divisor.getUnscaledValue());
                                                         ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1256: error: cannot find symbol
      compRem = quotAndRem[1].shiftLeftOneBit().compareTo(
                             ^
  symbol:   method shiftLeftOneBit()
  location: class BigInteger
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1257: error: cannot find symbol
          divisor.getUnscaledValue());
                 ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1366: error: scale has private access in BigDecimal
    double newScale = this.scale - divisor.scale;
                                          ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1371: error: cannot find symbol
    if (divisor.isZero()) {
               ^
  symbol:   method isZero()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1375: error: cannot find symbol
    if ((divisor.approxPrecision() + newScale > this.approxPrecision() + 1L)
                ^
  symbol:   method approxPrecision()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1383: error: cannot find symbol
      integralValue = getUnscaledValue().divide(divisor.getUnscaledValue());
                                                       ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1385: error: cannot find symbol
      powerOfTen = Multiplication.powerOf10(newScale);
                   ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1387: error: cannot find symbol
          divisor.getUnscaledValue().multiply(powerOfTen));
                 ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1391: error: cannot find symbol
      powerOfTen = Multiplication.powerOf10(-newScale);
                   ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1393: error: cannot find symbol
          divisor.getUnscaledValue());
                 ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1437: error: scale has private access in BigDecimal
    double diffScale = this.scale - divisor.scale;
                                           ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1442: error: cannot find symbol
    if ((mcPrecision == 0) || (this.isZero()) || (divisor.isZero())) {
                                                         ^
  symbol:   method isZero()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1450: error: cannot find symbol
      quotAndRem[0] = this.getUnscaledValue().divide(divisor.getUnscaledValue());
                                                            ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1454: error: cannot find symbol
          divisor.getUnscaledValue().multiply(
                 ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1455: error: cannot find symbol
              Multiplication.powerOf10(diffScale)));
              ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1461: error: cannot find symbol
      quotAndRem[0] = quotAndRem[0].multiply(Multiplication.powerOf10(newScale));
                                             ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1473: error: cannot find symbol
          Multiplication.powerOf10(exp)).divideAndRemainder(
          ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1474: error: cannot find symbol
          divisor.getUnscaledValue());
                 ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1484: error: cannot find symbol
          quotAndRem[1] = quotAndRem[1].multiply(Multiplication.powerOf10(exp)).divide(
                                                 ^
  symbol:   variable Multiplication
  location: class BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1485: error: cannot find symbol
              divisor.getUnscaledValue());
                     ^
  symbol:   method getUnscaledValue()
  location: variable divisor of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1526: error: scale has private access in BigDecimal
    integralValue.scale = toIntScale(newScale);
                 ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1527: error: cannot find symbol
    integralValue.setUnscaledValue(strippedBI);
                 ^
  symbol:   method setUnscaledValue(BigInteger)
  location: variable integralValue of type BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1572: error: scale has private access in BigDecimal
      return (this.scale == x1.scale && this.compareTo(x1) == 0);
                              ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1704: error: incompatible types: bad type in conditional expression
    return ((compareTo(val) >= 0) ? this : val);
                                    ^
    java.math.BigDecimal cannot be converted to java.math.BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1715: error: incompatible types: bad type in conditional expression
    return ((compareTo(val) <= 0) ? this : val);
                                    ^
    java.math.BigDecimal cannot be converted to java.math.BigDecimal
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1765: error: scale has private access in BigDecimal
    double newScale = this.scale + multiplicand.scale;
                                               ^
sources/structure/com.google.gwt/gwt-user/2.9.0-RC1/extractedSources/com/google/gwt/emul/java/math/BigDecimal.java:1767: error: cannot find symbol
    if ((this.isZero()) || (multiplicand.isZero())) {
                                        ^
  symbol:   method isZero()
  location: variable multiplicand of type BigDecimal
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
