sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:7: error: package javax.persistence.spi does not exist
import javax.persistence.spi.ClassTransformer;
                            ^
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:11: error: package com.sun.enterprise.loader does not exist
import com.sun.enterprise.loader.InstrumentableClassLoader;
                                ^
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:16: error: cannot find symbol
    private final InstrumentableClassLoader classLoader;
                  ^
  symbol:   class InstrumentableClassLoader
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:31: error: cannot find symbol
    protected InstrumentableClassLoader determineClassLoader(final ClassLoader classLoader) {
              ^
  symbol:   class InstrumentableClassLoader
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:24: error: cannot find symbol
        final InstrumentableClassLoader icl = this.determineClassLoader(classLoader);
              ^
  symbol:   class InstrumentableClassLoader
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:26: error: cannot find symbol
            throw new IllegalArgumentException(classLoader + " and its parents are not suitable ClassLoaders: " + "An [" + InstrumentableClassLoader.class.getName() + "] implementation is required.");
                                                                                                                           ^
  symbol:   class InstrumentableClassLoader
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:33: error: cannot find symbol
            if (cl instanceof InstrumentableClassLoader) {
                              ^
  symbol:   class InstrumentableClassLoader
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:34: error: cannot find symbol
                return (InstrumentableClassLoader)cl;
                        ^
  symbol:   class InstrumentableClassLoader
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/instrument/classloading/glassfish/GlassFishLoadTimeWeaver.java:41: error: cannot find symbol
        this.classLoader.addTransformer((ClassTransformer)new ClassTransformerAdapter(transformer));
                                         ^
  symbol:   class ClassTransformer
  location: class GlassFishLoadTimeWeaver
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/instrument/classloading/glassfish/ClassTransformerAdapter.java:23: error: package javax.persistence.spi does not exist
import javax.persistence.spi.ClassTransformer;
                            ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/instrument/classloading/glassfish/ClassTransformerAdapter.java:33: error: cannot find symbol
class ClassTransformerAdapter implements ClassTransformer {
                                         ^
  symbol: class ClassTransformer
11 errors
