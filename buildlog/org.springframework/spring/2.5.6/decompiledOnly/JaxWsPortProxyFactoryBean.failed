sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean.java:8: error: package javax.xml.ws does not exist
import javax.xml.ws.BindingProvider;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:25: error: package javax.xml.ws does not exist
import javax.xml.ws.BindingProvider;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:26: error: package javax.xml.ws does not exist
import javax.xml.ws.ProtocolException;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:27: error: package javax.xml.ws does not exist
import javax.xml.ws.Service;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:28: error: package javax.xml.ws does not exist
import javax.xml.ws.WebServiceException;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:29: error: package javax.xml.ws.soap does not exist
import javax.xml.ws.soap.SOAPFaultException;
                        ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:23: error: package javax.xml.ws does not exist
import javax.xml.ws.Service;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:24: error: package javax.xml.ws.handler does not exist
import javax.xml.ws.handler.HandlerResolver;
                           ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:60: error: cannot find symbol
	private Service jaxWsService;
	        ^
  symbol:   class Service
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:98: error: cannot find symbol
	public void setJaxWsService(Service jaxWsService) {
	                            ^
  symbol:   class Service
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:105: error: cannot find symbol
	public Service getJaxWsService() {
	       ^
  symbol:   class Service
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:53: error: cannot find symbol
	private HandlerResolver handlerResolver;
	        ^
  symbol:   class HandlerResolver
  location: class LocalJaxWsServiceFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:123: error: cannot find symbol
	public void setHandlerResolver(HandlerResolver handlerResolver) {
	                               ^
  symbol:   class HandlerResolver
  location: class LocalJaxWsServiceFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:133: error: cannot find symbol
	public Service createJaxWsService() {
	       ^
  symbol:   class Service
  location: class LocalJaxWsServiceFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:362: error: cannot find symbol
			extends edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap
			                                                      ^
  symbol:   class ConcurrentHashMap
  location: package edu.emory.mathcs.backport.java.util.concurrent
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:134: error: cannot find symbol
		Service service = (this.wsdlDocumentUrl != null ?
		^
  symbol:   class Service
  location: class LocalJaxWsServiceFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:135: error: cannot find symbol
				Service.create(this.wsdlDocumentUrl, getQName(this.serviceName)) :
				^
  symbol:   variable Service
  location: class LocalJaxWsServiceFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.java:136: error: cannot find symbol
				Service.create(getQName(this.serviceName)));
				^
  symbol:   variable Service
  location: class LocalJaxWsServiceFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:286: error: cannot find symbol
		Service serviceToUse = getJaxWsService();
		^
  symbol:   class Service
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:330: error: cannot find symbol
			stubProperties.put(BindingProvider.USERNAME_PROPERTY, username);
			                   ^
  symbol:   variable BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:334: error: cannot find symbol
			stubProperties.put(BindingProvider.PASSWORD_PROPERTY, password);
			                   ^
  symbol:   variable BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:338: error: cannot find symbol
			stubProperties.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, endpointAddress);
			                   ^
  symbol:   variable BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:341: error: cannot find symbol
			stubProperties.put(BindingProvider.SESSION_MAINTAIN_PROPERTY, Boolean.TRUE);
			                   ^
  symbol:   variable BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:344: error: cannot find symbol
			stubProperties.put(BindingProvider.SOAPACTION_USE_PROPERTY, Boolean.TRUE);
			                   ^
  symbol:   variable BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:348: error: cannot find symbol
			stubProperties.put(BindingProvider.SOAPACTION_URI_PROPERTY, soapActionUri);
			                   ^
  symbol:   variable BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:352: error: cannot find symbol
			if (!(stub instanceof BindingProvider)) {
			                      ^
  symbol:   class BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:356: error: cannot find symbol
			((BindingProvider) stub).getRequestContext().putAll(stubProperties);
			  ^
  symbol:   class BindingProvider
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:394: error: cannot find symbol
		catch (SOAPFaultException ex) {
		       ^
  symbol:   class SOAPFaultException
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsSoapFaultException.java:20: error: package javax.xml.soap does not exist
import javax.xml.soap.SOAPFault;
                     ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsSoapFaultException.java:21: error: package javax.xml.ws.soap does not exist
import javax.xml.ws.soap.SOAPFaultException;
                        ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsSoapFaultException.java:38: error: cannot find symbol
	public JaxWsSoapFaultException(SOAPFaultException original) {
	                               ^
  symbol:   class SOAPFaultException
  location: class JaxWsSoapFaultException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsSoapFaultException.java:45: error: cannot find symbol
	public final SOAPFault getFault() {
	             ^
  symbol:   class SOAPFault
  location: class JaxWsSoapFaultException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:397: error: cannot find symbol
		catch (ProtocolException ex) {
		       ^
  symbol:   class ProtocolException
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.java:400: error: cannot find symbol
		catch (WebServiceException ex) {
		       ^
  symbol:   class WebServiceException
  location: class JaxWsPortClientInterceptor
sources/structure/org.springframework/spring/2.5.6/Decompiled/org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean.java:32: error: cannot find symbol
        pf.addInterface(BindingProvider.class);
                        ^
  symbol:   class BindingProvider
  location: class JaxWsPortProxyFactoryBean
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:110: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Set createLinkedSetIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:147: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Map createLinkedMapIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:179: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Map createIdentityMapIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:342: error: cannot find symbol
			return new edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap(initialCapacity);
			                                                         ^
  symbol:   class ConcurrentHashMap
  location: package edu.emory.mathcs.backport.java.util.concurrent
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:361: error: BackportConcurrentHashMap is not abstract and does not override abstract method replace(Object,Object) in ConcurrentMap
	private static class BackportConcurrentHashMap
	               ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/remoting/jaxws/JaxWsSoapFaultException.java:46: error: cannot find symbol
		return ((SOAPFaultException) getCause()).getFault();
		         ^
  symbol:   class SOAPFaultException
  location: class JaxWsSoapFaultException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:32: error: cannot find symbol
import net.sf.cglib.proxy.Enhancer;
                         ^
  symbol:   class Enhancer
  location: package net.sf.cglib.proxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:34: error: cannot find symbol
import net.sf.cglib.proxy.MethodInterceptor;
                         ^
  symbol:   class MethodInterceptor
  location: package net.sf.cglib.proxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:35: error: cannot find symbol
import net.sf.cglib.proxy.MethodProxy;
                         ^
  symbol:   class MethodProxy
  location: package net.sf.cglib.proxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:37: error: cannot find symbol
import net.sf.cglib.transform.impl.UndeclaredThrowableStrategy;
                                  ^
  symbol:   class UndeclaredThrowableStrategy
  location: package net.sf.cglib.transform.impl
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:228: error: cannot find symbol
	protected Enhancer createEnhancer() {
	          ^
  symbol:   class Enhancer
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:379: error: cannot find symbol
	private static class StaticUnadvisedInterceptor implements MethodInterceptor, Serializable {
	                                                           ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:387: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class StaticUnadvisedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:398: error: cannot find symbol
	private static class StaticUnadvisedExposedInterceptor implements MethodInterceptor, Serializable {
	                                                                  ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:406: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class StaticUnadvisedExposedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:425: error: cannot find symbol
	private static class DynamicUnadvisedInterceptor implements MethodInterceptor, Serializable {
	                                                            ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:433: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class DynamicUnadvisedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:449: error: cannot find symbol
	private static class DynamicUnadvisedExposedInterceptor implements MethodInterceptor, Serializable {
	                                                                   ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:457: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class DynamicUnadvisedExposedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:513: error: cannot find symbol
	private static class EqualsInterceptor implements MethodInterceptor, Serializable {
	                                                  ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:521: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) {
		                                                                    ^
  symbol:   class MethodProxy
  location: class EqualsInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:546: error: cannot find symbol
	private static class HashCodeInterceptor implements MethodInterceptor, Serializable {
	                                                    ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:554: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) {
		                                                                    ^
  symbol:   class MethodProxy
  location: class HashCodeInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:563: error: cannot find symbol
	private static class FixedChainStaticTargetInterceptor implements MethodInterceptor, Serializable {
	                                                                  ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:577: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class FixedChainStaticTargetInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:593: error: cannot find symbol
	private static class DynamicAdvisedInterceptor implements MethodInterceptor, Serializable {
	                                                          ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:601: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class DynamicAdvisedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:680: error: cannot find symbol
		private final MethodProxy methodProxy;
		              ^
  symbol:   class MethodProxy
  location: class CglibMethodInvocation
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:685: error: cannot find symbol
				Class targetClass, List interceptorsAndDynamicMethodMatchers, MethodProxy methodProxy) {
				                                                              ^
  symbol:   class MethodProxy
  location: class CglibMethodInvocation
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:171: error: cannot find symbol
			Enhancer enhancer = createEnhancer();
			^
  symbol:   class Enhancer
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:180: error: cannot find symbol
			enhancer.setStrategy(new UndeclaredThrowableStrategy(UndeclaredThrowableException.class));
			                         ^
  symbol:   class UndeclaredThrowableStrategy
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:229: error: cannot find symbol
		return new Enhancer();
		           ^
  symbol:   class Enhancer
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:269: error: incompatible types: DynamicAdvisedInterceptor cannot be converted to Callback
		Callback aopInterceptor = new DynamicAdvisedInterceptor(this.advised);
		                          ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:296: error: incompatible types: EqualsInterceptor cannot be converted to Callback
			new EqualsInterceptor(this.advised),
			^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:297: error: incompatible types: HashCodeInterceptor cannot be converted to Callback
			new HashCodeInterceptor(this.advised)
			^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:314: error: incompatible types: FixedChainStaticTargetInterceptor cannot be converted to Callback
				fixedCallbacks[x] = new FixedChainStaticTargetInterceptor(
				                    ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/AopProxyUtils.java:47: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Class getTargetClass(Object candidate) {
	                    ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
68 errors
4 warnings
