sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.java:22: error: cannot find symbol
import org.objectweb.asm.ClassReader;
                        ^
  symbol:   class ClassReader
  location: package org.objectweb.asm
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:362: error: cannot find symbol
			extends edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap
			                                                      ^
  symbol:   class ConcurrentHashMap
  location: package edu.emory.mathcs.backport.java.util.concurrent
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/SimpleMetadataReader.java:19: error: cannot find symbol
import org.objectweb.asm.ClassReader;
                        ^
  symbol:   class ClassReader
  location: package org.objectweb.asm
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/SimpleMetadataReader.java:36: error: cannot find symbol
	private final ClassReader classReader;
	              ^
  symbol:   class ClassReader
  location: class SimpleMetadataReader
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/SimpleMetadataReader.java:41: error: cannot find symbol
	public SimpleMetadataReader(ClassReader classReader, ClassLoader classLoader) {
	                            ^
  symbol:   class ClassReader
  location: class SimpleMetadataReader
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.java:76: error: cannot find symbol
			return new SimpleMetadataReader(new ClassReader(is), this.resourceLoader.getClassLoader());
			                                    ^
  symbol:   class ClassReader
  location: class SimpleMetadataReaderFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:38: error: package javax.annotation does not exist
import javax.annotation.PostConstruct;
                       ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:39: error: package javax.annotation does not exist
import javax.annotation.PreDestroy;
                       ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:40: error: package javax.annotation does not exist
import javax.annotation.Resource;
                       ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:41: error: package javax.ejb does not exist
import javax.ejb.EJB;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:43: error: package javax.xml.ws does not exist
import javax.xml.ws.Service;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:44: error: package javax.xml.ws does not exist
import javax.xml.ws.WebServiceClient;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:45: error: package javax.xml.ws does not exist
import javax.xml.ws.WebServiceRef;
                   ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:110: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Set createLinkedSetIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:147: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Map createLinkedMapIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:179: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Map createIdentityMapIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:342: error: cannot find symbol
			return new edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap(initialCapacity);
			                                                         ^
  symbol:   class ConcurrentHashMap
  location: package edu.emory.mathcs.backport.java.util.concurrent
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:361: error: BackportConcurrentHashMap is not abstract and does not override abstract method replace(Object,Object) in ConcurrentMap
	private static class BackportConcurrentHashMap
	               ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/ClassMetadataReadingVisitor.java:20: error: cannot find symbol
import org.objectweb.asm.commons.EmptyVisitor;
                                ^
  symbol:   class EmptyVisitor
  location: package org.objectweb.asm.commons
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/ClassMetadataReadingVisitor.java:36: error: cannot find symbol
class ClassMetadataReadingVisitor extends EmptyVisitor implements ClassMetadata {
                                          ^
  symbol: class EmptyVisitor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor.java:28: error: cannot find symbol
import org.objectweb.asm.Type;
                        ^
  symbol:   class Type
  location: package org.objectweb.asm
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor.java:29: error: cannot find symbol
import org.objectweb.asm.commons.EmptyVisitor;
                                ^
  symbol:   class EmptyVisitor
  location: package org.objectweb.asm.commons
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:185: error: cannot find symbol
		setInitAnnotationType(PostConstruct.class);
		                      ^
  symbol:   class PostConstruct
  location: class CommonAnnotationBeanPostProcessor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:186: error: cannot find symbol
		setDestroyAnnotationType(PreDestroy.class);
		                         ^
  symbol:   class PreDestroy
  location: class CommonAnnotationBeanPostProcessor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:333: error: cannot find symbol
							else if (field.isAnnotationPresent(Resource.class)) {
							                                   ^
  symbol: class Resource
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:367: error: cannot find symbol
							else if (method.isAnnotationPresent(Resource.class) &&
							                                    ^
  symbol: class Resource
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:512: error: cannot find symbol
			Resource resource = ae.getAnnotation(Resource.class);
			^
  symbol:   class Resource
  location: class CommonAnnotationBeanPostProcessor.ResourceElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:512: error: cannot find symbol
			Resource resource = ae.getAnnotation(Resource.class);
			                                     ^
  symbol:   class Resource
  location: class CommonAnnotationBeanPostProcessor.ResourceElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:557: error: cannot find symbol
			WebServiceRef resource = ae.getAnnotation(WebServiceRef.class);
			^
  symbol:   class WebServiceRef
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:557: error: cannot find symbol
			WebServiceRef resource = ae.getAnnotation(WebServiceRef.class);
			                                          ^
  symbol:   class WebServiceRef
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:576: error: cannot find symbol
			if (Service.class.isAssignableFrom(resourceType)) {
			    ^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:580: error: cannot find symbol
				this.lookupType = (!Object.class.equals(resource.value()) ? resource.value() : Service.class);
				                                                                               ^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:588: error: cannot find symbol
			Service service = null;
			^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:590: error: cannot find symbol
				service = (Service) getResource(this, requestingBeanName);
				           ^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:594: error: cannot find symbol
				if (Service.class.equals(this.lookupType)) {
				    ^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:603: error: cannot find symbol
						WebServiceClient clientAnn = this.lookupType.getAnnotation(WebServiceClient.class);
						^
  symbol:   class WebServiceClient
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:603: error: cannot find symbol
						WebServiceClient clientAnn = this.lookupType.getAnnotation(WebServiceClient.class);
						                                                           ^
  symbol:   class WebServiceClient
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:608: error: cannot find symbol
						service = (Service) BeanUtils.instantiateClass(ctor,
						           ^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:622: error: cannot find symbol
					service = (Service) BeanUtils.instantiateClass(this.lookupType);
					           ^
  symbol:   class Service
  location: class CommonAnnotationBeanPostProcessor.WebServiceRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:643: error: cannot find symbol
			EJB resource = ae.getAnnotation(EJB.class);
			^
  symbol:   class EJB
  location: class CommonAnnotationBeanPostProcessor.EjbRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java:643: error: cannot find symbol
			EJB resource = ae.getAnnotation(EJB.class);
			                                ^
  symbol:   class EJB
  location: class CommonAnnotationBeanPostProcessor.EjbRefElement
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:32: error: cannot find symbol
import net.sf.cglib.proxy.Enhancer;
                         ^
  symbol:   class Enhancer
  location: package net.sf.cglib.proxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:34: error: cannot find symbol
import net.sf.cglib.proxy.MethodInterceptor;
                         ^
  symbol:   class MethodInterceptor
  location: package net.sf.cglib.proxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:35: error: cannot find symbol
import net.sf.cglib.proxy.MethodProxy;
                         ^
  symbol:   class MethodProxy
  location: package net.sf.cglib.proxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:37: error: cannot find symbol
import net.sf.cglib.transform.impl.UndeclaredThrowableStrategy;
                                  ^
  symbol:   class UndeclaredThrowableStrategy
  location: package net.sf.cglib.transform.impl
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:228: error: cannot find symbol
	protected Enhancer createEnhancer() {
	          ^
  symbol:   class Enhancer
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:379: error: cannot find symbol
	private static class StaticUnadvisedInterceptor implements MethodInterceptor, Serializable {
	                                                           ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:387: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class StaticUnadvisedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:398: error: cannot find symbol
	private static class StaticUnadvisedExposedInterceptor implements MethodInterceptor, Serializable {
	                                                                  ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:406: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class StaticUnadvisedExposedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:425: error: cannot find symbol
	private static class DynamicUnadvisedInterceptor implements MethodInterceptor, Serializable {
	                                                            ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:433: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class DynamicUnadvisedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:449: error: cannot find symbol
	private static class DynamicUnadvisedExposedInterceptor implements MethodInterceptor, Serializable {
	                                                                   ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:457: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class DynamicUnadvisedExposedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:513: error: cannot find symbol
	private static class EqualsInterceptor implements MethodInterceptor, Serializable {
	                                                  ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:521: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) {
		                                                                    ^
  symbol:   class MethodProxy
  location: class EqualsInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:546: error: cannot find symbol
	private static class HashCodeInterceptor implements MethodInterceptor, Serializable {
	                                                    ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:554: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) {
		                                                                    ^
  symbol:   class MethodProxy
  location: class HashCodeInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:563: error: cannot find symbol
	private static class FixedChainStaticTargetInterceptor implements MethodInterceptor, Serializable {
	                                                                  ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:577: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class FixedChainStaticTargetInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:593: error: cannot find symbol
	private static class DynamicAdvisedInterceptor implements MethodInterceptor, Serializable {
	                                                          ^
  symbol:   class MethodInterceptor
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:601: error: cannot find symbol
		public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
		                                                                    ^
  symbol:   class MethodProxy
  location: class DynamicAdvisedInterceptor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:680: error: cannot find symbol
		private final MethodProxy methodProxy;
		              ^
  symbol:   class MethodProxy
  location: class CglibMethodInvocation
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:685: error: cannot find symbol
				Class targetClass, List interceptorsAndDynamicMethodMatchers, MethodProxy methodProxy) {
				                                                              ^
  symbol:   class MethodProxy
  location: class CglibMethodInvocation
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor.java:58: error: cannot find symbol
		final String className = Type.getType(desc).getClassName();
		                         ^
  symbol:   variable Type
  location: class AnnotationMetadataReadingVisitor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor.java:60: error: cannot find symbol
		return new EmptyVisitor() {
		           ^
  symbol:   class EmptyVisitor
  location: class AnnotationMetadataReadingVisitor
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:171: error: cannot find symbol
			Enhancer enhancer = createEnhancer();
			^
  symbol:   class Enhancer
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:180: error: cannot find symbol
			enhancer.setStrategy(new UndeclaredThrowableStrategy(UndeclaredThrowableException.class));
			                         ^
  symbol:   class UndeclaredThrowableStrategy
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:229: error: cannot find symbol
		return new Enhancer();
		           ^
  symbol:   class Enhancer
  location: class Cglib2AopProxy
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:269: error: incompatible types: DynamicAdvisedInterceptor cannot be converted to Callback
		Callback aopInterceptor = new DynamicAdvisedInterceptor(this.advised);
		                          ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:296: error: incompatible types: EqualsInterceptor cannot be converted to Callback
			new EqualsInterceptor(this.advised),
			^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:297: error: incompatible types: HashCodeInterceptor cannot be converted to Callback
			new HashCodeInterceptor(this.advised)
			^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/Cglib2AopProxy.java:314: error: incompatible types: FixedChainStaticTargetInterceptor cannot be converted to Callback
				fixedCallbacks[x] = new FixedChainStaticTargetInterceptor(
				                    ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/aop/framework/AopProxyUtils.java:47: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Class getTargetClass(Object candidate) {
	                    ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
70 errors
4 warnings
