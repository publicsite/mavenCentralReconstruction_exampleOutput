sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:21: error: package javax.jms does not exist
import javax.jms.JMSException;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:22: error: package javax.jms does not exist
import javax.jms.Queue;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:23: error: package javax.jms does not exist
import javax.jms.Session;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:24: error: package javax.jms does not exist
import javax.jms.Topic;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:25: error: package javax.resource.spi does not exist
import javax.resource.spi.ActivationSpec;
                         ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:26: error: package javax.resource.spi does not exist
import javax.resource.spi.ResourceAdapter;
                         ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.java:19: error: package javax.resource.spi does not exist
import javax.resource.spi.ActivationSpec;
                         ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.java:20: error: package javax.resource.spi does not exist
import javax.resource.spi.ResourceAdapter;
                         ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/support/destination/DestinationResolver.java:19: error: package javax.jms does not exist
import javax.jms.Destination;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/support/destination/DestinationResolver.java:20: error: package javax.jms does not exist
import javax.jms.JMSException;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/support/destination/DestinationResolver.java:21: error: package javax.jms does not exist
import javax.jms.Session;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:95: error: cannot find symbol
	public ActivationSpec createActivationSpec(ResourceAdapter adapter, JmsActivationSpecConfig config) {
	                                           ^
  symbol:   class ResourceAdapter
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:95: error: cannot find symbol
	public ActivationSpec createActivationSpec(ResourceAdapter adapter, JmsActivationSpecConfig config) {
	       ^
  symbol:   class ActivationSpec
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:121: error: cannot find symbol
	protected Class determineActivationSpecClass(ResourceAdapter adapter) {
	                                             ^
  symbol:   class ResourceAdapter
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/support/destination/DestinationResolver.java:54: error: cannot find symbol
	Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)
	                                   ^
  symbol:   class Session
  location: interface DestinationResolver
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/support/destination/DestinationResolver.java:54: error: cannot find symbol
	Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)
	^
  symbol:   class Destination
  location: interface DestinationResolver
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/support/destination/DestinationResolver.java:55: error: cannot find symbol
			throws JMSException;
			       ^
  symbol:   class JMSException
  location: interface DestinationResolver
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.java:47: error: cannot find symbol
	ActivationSpec createActivationSpec(ResourceAdapter adapter, JmsActivationSpecConfig config);
	                                    ^
  symbol:   class ResourceAdapter
  location: interface JmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.java:47: error: cannot find symbol
	ActivationSpec createActivationSpec(ResourceAdapter adapter, JmsActivationSpecConfig config);
	^
  symbol:   class ActivationSpec
  location: interface JmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/JmsException.java:19: error: package javax.jms does not exist
import javax.jms.JMSException;
                ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:104: error: cannot find symbol
		ActivationSpec spec = (ActivationSpec) BeanUtils.instantiateClass(activationSpecClassToUse);
		^
  symbol:   class ActivationSpec
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:104: error: cannot find symbol
		ActivationSpec spec = (ActivationSpec) BeanUtils.instantiateClass(activationSpecClassToUse);
		                       ^
  symbol:   class ActivationSpec
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:141: error: cannot find symbol
			catch (JMSException ex) {
			       ^
  symbol:   class JMSException
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:146: error: cannot find symbol
		bw.setPropertyValue("destinationType", pubSubDomain ? Topic.class.getName() : Queue.class.getName());
		                                                      ^
  symbol:   class Topic
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:146: error: cannot find symbol
		bw.setPropertyValue("destinationType", pubSubDomain ? Topic.class.getName() : Queue.class.getName());
		                                                                              ^
  symbol:   class Queue
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:185: error: cannot find symbol
		if (ackMode == Session.SESSION_TRANSACTED) {
		               ^
  symbol:   variable Session
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:189: error: cannot find symbol
		else if (ackMode == Session.CLIENT_ACKNOWLEDGE) {
		                    ^
  symbol:   variable Session
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:195: error: cannot find symbol
					ackMode == Session.DUPS_OK_ACKNOWLEDGE ? "Dups-ok-acknowledge" : "Auto-acknowledge");
					           ^
  symbol:   variable Session
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java:197: error: cannot find symbol
		else if (ackMode == Session.DUPS_OK_ACKNOWLEDGE) {
		                    ^
  symbol:   variable Session
  location: class StandardJmsActivationSpecFactory
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:362: error: cannot find symbol
			extends edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap
			                                                      ^
  symbol:   class ConcurrentHashMap
  location: package edu.emory.mathcs.backport.java.util.concurrent
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/JmsException.java:71: error: cannot find symbol
		if (cause instanceof JMSException) {
		                     ^
  symbol:   class JMSException
  location: class JmsException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/JmsException.java:72: error: cannot find symbol
			return ((JMSException) cause).getErrorCode();
			         ^
  symbol:   class JMSException
  location: class JmsException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/JmsException.java:85: error: cannot find symbol
		if (cause instanceof JMSException) {
		                     ^
  symbol:   class JMSException
  location: class JmsException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/jms/JmsException.java:86: error: cannot find symbol
			Exception linkedEx = ((JMSException) cause).getLinkedException();
			                       ^
  symbol:   class JMSException
  location: class JmsException
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/beans/BeanWrapperImpl.java:355: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public Object doTypeConversionIfNecessary(Object value, Class requiredType) throws TypeMismatchException {
	              ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:110: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Set createLinkedSetIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:147: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Map createLinkedMapIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:179: warning: [dep-ann] deprecated item is not annotated with @Deprecated
	public static Map createIdentityMapIfPossible(int initialCapacity) {
	                  ^
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:342: error: cannot find symbol
			return new edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap(initialCapacity);
			                                                         ^
  symbol:   class ConcurrentHashMap
  location: package edu.emory.mathcs.backport.java.util.concurrent
sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/core/CollectionFactory.java:361: error: BackportConcurrentHashMap is not abstract and does not override abstract method replace(Object,Object) in ConcurrentMap
	private static class BackportConcurrentHashMap
	               ^
Note: sources/structure/org.springframework/spring/2.5.6/extractedSources/org/springframework/beans/BeanWrapperImpl.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
36 errors
4 warnings
