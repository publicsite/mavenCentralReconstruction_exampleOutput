sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:7: error: cannot find symbol
import org.easymock.cglib.core.CodeEmitter;
                              ^
  symbol:   class CodeEmitter
  location: package org.easymock.cglib.core
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:9: error: cannot find symbol
import org.easymock.cglib.core.Constants;
                              ^
  symbol:   class Constants
  location: package org.easymock.cglib.core
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:10: error: cannot find symbol
import org.easymock.cglib.core.TypeUtils;
                              ^
  symbol:   class TypeUtils
  location: package org.easymock.cglib.core
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:12: error: cannot find symbol
import org.easymock.cglib.transform.ClassEmitterTransformer;
                                   ^
  symbol:   class ClassEmitterTransformer
  location: package org.easymock.cglib.transform
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:14: error: cannot find symbol
public class AccessFieldTransformer extends ClassEmitterTransformer
                                            ^
  symbol: class ClassEmitterTransformer
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:22: error: method does not override or implement a method from a supertype
    @Override
    ^
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:24: error: cannot find symbol
        super.declare_field(access, name, type, value);
        ^
  symbol:   variable super
  location: class AccessFieldTransformer
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:25: error: cannot find symbol
        final String property = TypeUtils.upperFirst(this.callback.getPropertyName(this.getClassType(), name));
                                ^
  symbol:   variable TypeUtils
  location: class AccessFieldTransformer
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:25: error: cannot find symbol
        final String property = TypeUtils.upperFirst(this.callback.getPropertyName(this.getClassType(), name));
                                                                                       ^
  symbol: method getClassType()
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:27: error: cannot find symbol
            CodeEmitter e = this.begin_method(1, new Signature("get" + property, type, Constants.TYPES_EMPTY), null);
            ^
  symbol:   class CodeEmitter
  location: class AccessFieldTransformer
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:27: error: cannot find symbol
            CodeEmitter e = this.begin_method(1, new Signature("get" + property, type, Constants.TYPES_EMPTY), null);
                                                                                       ^
  symbol:   variable Constants
  location: class AccessFieldTransformer
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:27: error: cannot find symbol
            CodeEmitter e = this.begin_method(1, new Signature("get" + property, type, Constants.TYPES_EMPTY), null);
                                ^
  symbol: method begin_method(int,Signature,<null>)
sources/structure/org.easymock/easymock/4.2/Decompiled/org/easymock/cglib/transform/impl/AccessFieldTransformer.java:32: error: cannot find symbol
            e = this.begin_method(1, new Signature("set" + property, Type.VOID_TYPE, new Type[] { type }), null);
                    ^
  symbol: method begin_method(int,Signature,<null>)
13 errors
