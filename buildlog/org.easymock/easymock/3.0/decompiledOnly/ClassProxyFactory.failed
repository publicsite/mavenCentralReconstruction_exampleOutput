sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:14: error: cannot find symbol
import net.sf.cglib.proxy.MethodProxy;
                         ^
  symbol:   class MethodProxy
  location: package net.sf.cglib.proxy
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:23: error: cannot find symbol
import net.sf.cglib.core.VisibilityPredicate;
                        ^
  symbol:   class VisibilityPredicate
  location: package net.sf.cglib.core
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:27: error: cannot find symbol
import net.sf.cglib.proxy.MethodInterceptor;
                         ^
  symbol:   class MethodInterceptor
  location: package net.sf.cglib.proxy
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:30: error: cannot find symbol
import net.sf.cglib.proxy.Enhancer;
                         ^
  symbol:   class Enhancer
  location: package net.sf.cglib.proxy
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:97: error: cannot find symbol
    private Enhancer createEnhancer(final Class<T> toMock) {
            ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:144: error: cannot find symbol
    public static class MockMethodInterceptor implements MethodInterceptor, Serializable
                                                         ^
  symbol:   class MethodInterceptor
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:154: error: cannot find symbol
        public Object intercept(final Object obj, final Method method, final Object[] args, final MethodProxy proxy) throws Throwable {
                                                                                                  ^
  symbol:   class MethodProxy
  location: class MockMethodInterceptor
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:49: error: cannot find symbol
        final Enhancer enhancer = this.createEnhancer(toMock);
              ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:50: error: cannot find symbol
        final MethodInterceptor interceptor = (MethodInterceptor)new MockMethodInterceptor(handler);
              ^
  symbol:   class MethodInterceptor
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:50: error: cannot find symbol
        final MethodInterceptor interceptor = (MethodInterceptor)new MockMethodInterceptor(handler);
                                               ^
  symbol:   class MethodInterceptor
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:60: error: cannot find symbol
        Enhancer.registerCallbacks(mockClass, new Callback[] { (Callback)interceptor });
        ^
  symbol:   variable Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassExtensionHelper.java:21: error: cannot find symbol
import net.sf.cglib.proxy.Enhancer;
                         ^
  symbol:   class Enhancer
  location: package net.sf.cglib.proxy
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:73: error: incompatible types: Object cannot be converted to T
                mock = cstr.newInstance(args.getInitArgs());
                                       ^
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:98: error: cannot find symbol
        final Enhancer enhancer = new Enhancer() {
              ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:98: error: cannot find symbol
        final Enhancer enhancer = new Enhancer() {
                                      ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java:100: error: cannot find symbol
                CollectionUtils.filter((Collection)constructors, (Predicate)new VisibilityPredicate(sc, true));
                                                                                ^
  symbol: class VisibilityPredicate
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassExtensionHelper.java:57: error: cannot find symbol
            if (Enhancer.isEnhanced(mock.getClass())) {
                ^
  symbol:   variable Enhancer
  location: class ClassExtensionHelper
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1884: error: name clash: capture(Capture<Boolean>) and <T>capture(Capture<T>) have the same erasure
    public static boolean capture(final Capture<Boolean> captured) {
                          ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1896: error: name clash: capture(Capture<Integer>) and <T>capture(Capture<T>) have the same erasure
    public static int capture(final Capture<Integer> captured) {
                      ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1908: error: name clash: capture(Capture<Long>) and <T>capture(Capture<T>) have the same erasure
    public static long capture(final Capture<Long> captured) {
                       ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1920: error: name clash: capture(Capture<Float>) and <T>capture(Capture<T>) have the same erasure
    public static float capture(final Capture<Float> captured) {
                        ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1932: error: name clash: capture(Capture<Double>) and <T>capture(Capture<T>) have the same erasure
    public static double capture(final Capture<Double> captured) {
                         ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1944: error: name clash: capture(Capture<Byte>) and <T>capture(Capture<T>) have the same erasure
    public static byte capture(final Capture<Byte> captured) {
                       ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1956: error: name clash: capture(Capture<Character>) and <T>capture(Capture<T>) have the same erasure
    public static char capture(final Capture<Character> captured) {
                       ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: sources/structure/org.easymock/easymock/3.0/Decompiled/org/easymock/internal/ClassProxyFactory.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
24 errors
