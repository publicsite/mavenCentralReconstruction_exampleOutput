sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1884: error: name clash: capture(Capture<Boolean>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static boolean capture(final Capture<Boolean> captured) {
                          ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1896: error: name clash: capture(Capture<Integer>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static int capture(final Capture<Integer> captured) {
                      ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1908: error: name clash: capture(Capture<Long>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static long capture(final Capture<Long> captured) {
                       ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1920: error: name clash: capture(Capture<Float>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static float capture(final Capture<Float> captured) {
                        ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1932: error: name clash: capture(Capture<Double>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static double capture(final Capture<Double> captured) {
                         ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1944: error: name clash: capture(Capture<Byte>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static byte capture(final Capture<Byte> captured) {
                       ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/EasyMock.java:1956: error: name clash: capture(Capture<Character>) in EasyMock and <T>capture(Capture<T>) in EasyMock have the same erasure, yet neither hides the other
    public static char capture(final Capture<Character> captured) {
                       ^
  where T is a type-variable:
    T extends Object declared in method <T>capture(Capture<T>)
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:174: error: cannot find symbol
        final Enhancer enhancer = createEnhancer(toMock);
              ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:176: error: cannot find symbol
        final MethodInterceptor interceptor = new MockMethodInterceptor(handler);
              ^
  symbol:   class MethodInterceptor
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:194: error: cannot find symbol
        Enhancer.registerCallbacks(mockClass, new Callback[] { interceptor });
        ^
  symbol:   variable Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:259: error: cannot find symbol
        final Enhancer enhancer = new Enhancer() {
              ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:259: error: cannot find symbol
        final Enhancer enhancer = new Enhancer() {
                                      ^
  symbol:   class Enhancer
  location: class ClassProxyFactory<T>
  where T is a type-variable:
    T extends Object declared in class ClassProxyFactory
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:265: error: method does not override or implement a method from a supertype
            @Override
            ^
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassProxyFactory.java:267: error: cannot find symbol
                CollectionUtils.filter(constructors, new VisibilityPredicate(sc, true));
                                                         ^
  symbol: class VisibilityPredicate
sources/structure/org.easymock/easymock/3.0/extractedSources/org/easymock/internal/ClassExtensionHelper.java:57: error: cannot find symbol
            if (Enhancer.isEnhanced(mock.getClass())) {
                ^
  symbol:   variable Enhancer
  location: class ClassExtensionHelper
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
15 errors
