sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:13: error: cannot find symbol
public class JsonLexer implements Iterator<JsonToken>
                                           ^
  symbol: class JsonToken
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:25: error: cannot find symbol
    private JsonToken currentToken;
            ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:36: error: cannot find symbol
    public JsonToken nextToken() {
           ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:113: error: cannot find symbol
    private void throwJsonException(final String content, final JsonTokenType type) {
                                                                ^
  symbol:   class JsonTokenType
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:121: error: cannot find symbol
    private JsonToken readingConstant(final JsonTokenType type, final JsonToken token) {
                                            ^
  symbol:   class JsonTokenType
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:121: error: cannot find symbol
    private JsonToken readingConstant(final JsonTokenType type, final JsonToken token) {
                                                                      ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:121: error: cannot find symbol
    private JsonToken readingConstant(final JsonTokenType type, final JsonToken token) {
            ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:162: error: cannot find symbol
    public JsonToken next() {
           ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:43: error: cannot find symbol
            final JsonTokenType possibleTokenType = JsonTokenType.startingWith((char)firstIntRead);
                  ^
  symbol:   class JsonTokenType
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:43: error: cannot find symbol
            final JsonTokenType possibleTokenType = JsonTokenType.startingWith((char)firstIntRead);
                                                    ^
  symbol:   variable JsonTokenType
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:50: error: cannot find symbol
            final JsonToken token = new JsonToken();
                  ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:50: error: cannot find symbol
            final JsonToken token = new JsonToken();
                                        ^
  symbol:   class JsonToken
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:57: error: package JsonTokenType does not exist
            if (possibleTokenType.ordinal() >= JsonTokenType.OPEN_CURLY.ordinal() && possibleTokenType.ordinal() <= JsonTokenType.FALSE.ordinal()) {
                                                            ^
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:57: error: package JsonTokenType does not exist
            if (possibleTokenType.ordinal() >= JsonTokenType.OPEN_CURLY.ordinal() && possibleTokenType.ordinal() <= JsonTokenType.FALSE.ordinal()) {
                                                                                                                                 ^
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:60: error: cannot find symbol
            if (possibleTokenType != JsonTokenType.STRING) {
                                     ^
  symbol:   variable JsonTokenType
  location: class JsonLexer
sources/structure/org.codehaus.groovy/groovy-all/2.3.9/Decompiled/groovy/json/JsonLexer.java:61: error: cannot find symbol
                if (possibleTokenType == JsonTokenType.NUMBER) {
                                         ^
  symbol:   variable JsonTokenType
  location: class JsonLexer
16 errors
