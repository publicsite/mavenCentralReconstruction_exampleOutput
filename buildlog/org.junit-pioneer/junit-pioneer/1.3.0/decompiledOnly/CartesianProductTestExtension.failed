sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:9: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ParameterResolutionException;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:13: error: package org.junit.jupiter.params.provider does not exist
import org.junit.jupiter.params.provider.Arguments;
                                        ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:14: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.ReflectionSupport;
                                         ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:15: error: package org.junit.platform.commons does not exist
import org.junit.platform.commons.PreconditionViolationException;
                                 ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:16: error: package org.junit.jupiter.params.provider does not exist
import org.junit.jupiter.params.provider.ArgumentsProvider;
                                        ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:25: error: package org.junit.jupiter.params.provider does not exist
import org.junit.jupiter.params.provider.ArgumentsSource;
                                        ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:26: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionConfigurationException;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:29: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.TestTemplateInvocationContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:31: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.AnnotationSupport;
                                         ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:32: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:33: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.TestTemplateInvocationContextProvider;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:35: error: cannot find symbol
class CartesianProductTestExtension implements TestTemplateInvocationContextProvider
                                               ^
  symbol: class TestTemplateInvocationContextProvider
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:37: error: cannot find symbol
    public boolean supportsTestTemplate(final ExtensionContext context) {
                                              ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:41: error: cannot find symbol
    public Stream<TestTemplateInvocationContext> provideTestTemplateInvocationContexts(final ExtensionContext context) {
                                                                                             ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:41: error: cannot find symbol
    public Stream<TestTemplateInvocationContext> provideTestTemplateInvocationContexts(final ExtensionContext context) {
                  ^
  symbol:   class TestTemplateInvocationContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:47: error: cannot find symbol
    private CartesianProductTestNameFormatter createNameFormatter(final ExtensionContext context) {
                                                                        ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:14: error: package org.junit.jupiter.params does not exist
import static org.junit.jupiter.params.ParameterizedTest.ARGUMENTS_PLACEHOLDER;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:14: error: static import only from classes and interfaces
import static org.junit.jupiter.params.ParameterizedTest.ARGUMENTS_PLACEHOLDER;
^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:15: error: package org.junit.jupiter.params does not exist
import static org.junit.jupiter.params.ParameterizedTest.DISPLAY_NAME_PLACEHOLDER;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:15: error: static import only from classes and interfaces
import static org.junit.jupiter.params.ParameterizedTest.DISPLAY_NAME_PLACEHOLDER;
^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:16: error: package org.junit.jupiter.params does not exist
import static org.junit.jupiter.params.ParameterizedTest.INDEX_PLACEHOLDER;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:16: error: static import only from classes and interfaces
import static org.junit.jupiter.params.ParameterizedTest.INDEX_PLACEHOLDER;
^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:22: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionConfigurationException;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:57: error: cannot find symbol
    private List<List<?>> computeSets(final ExtensionContext context) {
                                            ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTest.java:26: error: package org.junit.jupiter.api does not exist
import org.junit.jupiter.api.TestTemplate;
                            ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTest.java:27: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtendWith;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTest.java:54: error: cannot find symbol
@TestTemplate
 ^
  symbol: class TestTemplate
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTest.java:55: error: cannot find symbol
@ExtendWith(CartesianProductTestExtension.class)
 ^
  symbol: class ExtendWith
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:89: error: cannot find symbol
    private List<List<?>> getSetsFromArgumentsSources(final List<? extends Annotation> argumentsSources, final ExtensionContext context) {
                                                                                                               ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:97: error: cannot find symbol
    private List<Object> getSetFromAnnotation(final ExtensionContext context, final Annotation source) {
                                                    ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:107: error: cannot find symbol
    private ArgumentsProvider initializeArgumentsProvider(final Annotation source) {
            ^
  symbol:   class ArgumentsProvider
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:116: error: cannot find symbol
    private List<Object> provideArguments(final ExtensionContext context, final Annotation source, final ArgumentsProvider provider) throws Exception {
                                                ^
  symbol:   class ExtensionContext
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:116: error: cannot find symbol
    private List<Object> provideArguments(final ExtensionContext context, final Annotation source, final ArgumentsProvider provider) throws Exception {
                                                                                                         ^
  symbol:   class ArgumentsProvider
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerUtils.java:13: error: package org.junit.platform.commons.support does not exist
import static org.junit.platform.commons.support.ReflectionSupport.findMethod;
                                                ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerUtils.java:13: error: static import only from classes and interfaces
import static org.junit.platform.commons.support.ReflectionSupport.findMethod;
^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:25: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:26: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.AnnotationSupport;
                                         ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:58: error: cannot find symbol
	public static boolean isAnyAnnotationPresent(ExtensionContext context,
	                                             ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:73: error: cannot find symbol
	public static boolean isAnyRepeatableAnnotationPresent(ExtensionContext context,
	                                                       ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:88: error: cannot find symbol
	public static <A extends Annotation> Optional<A> findClosestEnclosingAnnotation(ExtensionContext context,
	                                                                                ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:99: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findAllEnclosingAnnotations(ExtensionContext context,
	                                                                           ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:110: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findClosestEnclosingRepeatableAnnotations(ExtensionContext context,
	                                                                                         ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:121: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findAllEnclosingRepeatableAnnotations(ExtensionContext context,
	                                                                                     ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:173: error: cannot find symbol
	static <A extends Annotation> Stream<A> findAnnotations(ExtensionContext context, Class<A> annotationType,
	                                                        ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:38: error: cannot find symbol
        return AnnotationSupport.findAnnotation(context.getTestMethod(), (Class)CartesianProductTest.class).isPresent();
               ^
  symbol:   variable AnnotationSupport
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestInvocationContext.java:16: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.Extension;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestInvocationContext.java:17: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.TestTemplateInvocationContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestInvocationContext.java:19: error: cannot find symbol
class CartesianProductTestInvocationContext implements TestTemplateInvocationContext {
                                                       ^
  symbol: class TestTemplateInvocationContext
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestInvocationContext.java:35: error: cannot find symbol
	public List<Extension> getAdditionalExtensions() {
	            ^
  symbol:   class Extension
  location: class CartesianProductTestInvocationContext
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:48: error: cannot find symbol
        final CartesianProductTest annotation = AnnotationSupport.findAnnotation((AnnotatedElement)context.getRequiredTestMethod(), (Class)CartesianProductTest.class).orElseThrow(() -> new ExtensionConfigurationException("@CartesianProductTest not found."));
                                                ^
  symbol:   variable AnnotationSupport
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:48: error: cannot find symbol
        final CartesianProductTest annotation = AnnotationSupport.findAnnotation((AnnotatedElement)context.getRequiredTestMethod(), (Class)CartesianProductTest.class).orElseThrow(() -> new ExtensionConfigurationException("@CartesianProductTest not found."));
                                                                                                                                                                                             ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:51: error: cannot find symbol
            throw new ExtensionConfigurationException("CartesianProductTest can not have a non-empty display name.");
                      ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:59: error: cannot find symbol
        final CartesianProductTest annotation = AnnotationSupport.findAnnotation((AnnotatedElement)testMethod, (Class)CartesianProductTest.class).orElseThrow(() -> new ExtensionConfigurationException("@CartesianProductTest not found."));
                                                ^
  symbol:   variable AnnotationSupport
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:59: error: cannot find symbol
        final CartesianProductTest annotation = AnnotationSupport.findAnnotation((AnnotatedElement)testMethod, (Class)CartesianProductTest.class).orElseThrow(() -> new ExtensionConfigurationException("@CartesianProductTest not found."));
                                                                                                                                                                        ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:60: error: cannot find symbol
        final List<? extends Annotation> argumentsSources = PioneerAnnotationUtils.findAnnotatedAnnotations(testMethod, ArgumentsSource.class);
                                                                                                                        ^
  symbol:   class ArgumentsSource
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:76: error: cannot find symbol
            throw new ExtensionConfigurationException("CartesianProductTest can only take exactly one type of arguments source.");
                      ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:82: error: incompatible types: Collector<Object,CAP#1,List<Object>> cannot be converted to Collector<? super String,?,List<String>>
        final List<String> strings = Arrays.stream(annotation.value()).distinct().collect((Collector<? super String, ?, List<String>>)Collectors.toList());
                                                                                                                                                       ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:99: error: cannot find symbol
            final ArgumentsProvider provider = this.initializeArgumentsProvider(source);
                  ^
  symbol:   class ArgumentsProvider
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:103: error: cannot find symbol
            throw new ExtensionConfigurationException("Could not provide arguments because of exception.", (Throwable)ex);
                      ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:108: error: cannot find symbol
        final PreconditionViolationException ex;
              ^
  symbol:   class PreconditionViolationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:109: error: cannot find symbol
        final ArgumentsSource providerAnnotation = AnnotationSupport.findAnnotation((AnnotatedElement)source.annotationType(), (Class)ArgumentsSource.class).orElseThrow(() -> {
              ^
  symbol:   class ArgumentsSource
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:109: error: cannot find symbol
        final ArgumentsSource providerAnnotation = AnnotationSupport.findAnnotation((AnnotatedElement)source.annotationType(), (Class)ArgumentsSource.class).orElseThrow(() -> {
                                                                                                                                      ^
  symbol:   class ArgumentsSource
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:109: error: cannot find symbol
        final ArgumentsSource providerAnnotation = AnnotationSupport.findAnnotation((AnnotatedElement)source.annotationType(), (Class)ArgumentsSource.class).orElseThrow(() -> {
                                                   ^
  symbol:   variable AnnotationSupport
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:110: error: cannot find symbol
            new PreconditionViolationException(String.format("%s was not annotated with @ArgumentsSource but should have been.", source.annotationType()));
                ^
  symbol:   class PreconditionViolationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:113: error: cannot find symbol
        return (ArgumentsProvider)ReflectionSupport.newInstance(providerAnnotation.value(), new Object[0]);
                ^
  symbol:   class ArgumentsProvider
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:113: error: cannot find symbol
        return (ArgumentsProvider)ReflectionSupport.newInstance(providerAnnotation.value(), new Object[0]);
                                  ^
  symbol:   variable ReflectionSupport
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:119: error: incompatible types: invalid method reference
            return provider.provideArguments(context).map(Arguments::get).flatMap((Function<? super Object, ? extends Stream<?>>)Arrays::stream).distinct().collect((Collector<? super Object, ?, List<Object>>)Collectors.toList());
                                                                                                                                 ^
    no suitable method found for stream(Object)
        method Arrays.<T#1>stream(T#1[]) is not applicable
          (cannot infer type-variable(s) T#1
            (argument mismatch; Object cannot be converted to T#1[]))
        method Arrays.<T#2>stream(T#2[],int,int) is not applicable
          (cannot infer type-variable(s) T#2
            (actual and formal argument lists differ in length))
        method Arrays.stream(int[]) is not applicable
          (argument mismatch; Object cannot be converted to int[])
        method Arrays.stream(long[]) is not applicable
          (argument mismatch; Object cannot be converted to long[])
        method Arrays.stream(double[]) is not applicable
          (argument mismatch; Object cannot be converted to double[])
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in method <T#1>stream(T#1[])
    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:119: error: cannot find symbol
            return provider.provideArguments(context).map(Arguments::get).flatMap((Function<? super Object, ? extends Stream<?>>)Arrays::stream).distinct().collect((Collector<? super Object, ?, List<Object>>)Collectors.toList());
                                                          ^
  symbol:   variable Arguments
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:121: error: cannot find symbol
        throw new PreconditionViolationException(String.format("%s does not implement the CartesianAnnotationConsumer<T> interface.", provider.getClass()));
                  ^
  symbol:   class PreconditionViolationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:140: error: method orElseThrow in class Optional<T> cannot be applied to given types;
        final Method factory = PioneerUtils.findMethodCurrentOrEnclosing(declaringClass, factoryMethodName, (Class<?>[])new Class[0]).orElseThrow(() -> {
                                                                                                                                     ^
  required: Supplier<? extends X>
  found: ()->{ new [...] o; }
  reason: inference variable X has incompatible bounds
    lower bounds: Object,Throwable
    lower bounds: Object
  where X,T are type-variables:
    X extends Throwable declared in method <X>orElseThrow(Supplier<? extends X>)
    T extends Object declared in class Optional
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:141: error: cannot find symbol
            new ExtensionConfigurationException("Method `CartesianProductTest.Sets " + factoryMethodName + "()` not found in " + obj + "or any enclosing class.");
                ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:146: error: cannot find symbol
            throw new ExtensionConfigurationException(method + " must be static.");
                      ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:149: error: cannot find symbol
            throw new ExtensionConfigurationException(method + " must return `CartesianProductTest.Sets`.");
                      ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:155: error: cannot find symbol
        final CartesianProductTest.Sets sets = (CartesianProductTest.Sets)ReflectionSupport.invokeMethod(factory, (Object)null, new Object[0]);
                                                                          ^
  symbol:   variable ReflectionSupport
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/jupiter/CartesianProductTestExtension.java:157: error: cannot find symbol
            throw new ParameterResolutionException(String.format("Method `%s` must register values for each parameter exactly once. Expected [%d] parameter sets, but got [%d].", factory, testMethod.getParameterCount(), sets.getSets().size()));
                      ^
  symbol:   class ParameterResolutionException
  location: class CartesianProductTestExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:42: error: cannot find symbol
			throw new ExtensionConfigurationException(message, ex);
			          ^
  symbol:   class ExtensionConfigurationException
  location: class CartesianProductTestNameFormatter
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:56: error: cannot find symbol
				.replace(INDEX_PLACEHOLDER, String.valueOf(invocationIndex));
				         ^
  symbol:   variable INDEX_PLACEHOLDER
  location: class CartesianProductTestNameFormatter
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:55: error: cannot find symbol
				.replace(DISPLAY_NAME_PLACEHOLDER, this.displayName)//
				         ^
  symbol:   variable DISPLAY_NAME_PLACEHOLDER
  location: class CartesianProductTestNameFormatter
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:58: error: cannot find symbol
		if (result.contains(ARGUMENTS_PLACEHOLDER)) {
		                    ^
  symbol:   variable ARGUMENTS_PLACEHOLDER
  location: class CartesianProductTestNameFormatter
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestNameFormatter.java:63: error: cannot find symbol
			result = result.replace(ARGUMENTS_PLACEHOLDER, replacement);
			                        ^
  symbol:   variable ARGUMENTS_PLACEHOLDER
  location: class CartesianProductTestNameFormatter
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerUtils.java:76: error: cannot find symbol
			method = findMethod(current, methodName, parameterTypes);
			         ^
  symbol:   method findMethod(Class<CAP#1>,String,Class<?>[])
  location: class PioneerUtils
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:64: error: incompatible types: invalid method reference
				.anyMatch(Optional::isPresent);
				          ^
    method isPresent in class Optional<T> cannot be applied to given types
      required: no arguments
      found: Object
      reason: actual and formal argument lists differ in length
  where T is a type-variable:
    T extends Object declared in class Optional
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:199: error: cannot find symbol
			return AnnotationSupport.findRepeatableAnnotations(element, annotationType);
			       ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:201: error: cannot find symbol
			return AnnotationSupport
			       ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestInvocationContext.java:29: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductTestInvocationContext.java:34: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:17: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:18: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ParameterContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:19: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ParameterResolver;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:21: error: cannot find symbol
class CartesianProductResolver implements ParameterResolver {
                                          ^
  symbol: class ParameterResolver
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:30: error: cannot find symbol
	public boolean supportsParameter(ParameterContext parameterContext, ExtensionContext extensionContext) {
	                                 ^
  symbol:   class ParameterContext
  location: class CartesianProductResolver
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:30: error: cannot find symbol
	public boolean supportsParameter(ParameterContext parameterContext, ExtensionContext extensionContext) {
	                                                                    ^
  symbol:   class ExtensionContext
  location: class CartesianProductResolver
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:48: error: cannot find symbol
	public Object resolveParameter(ParameterContext parameterContext, ExtensionContext extensionContext) {
	                               ^
  symbol:   class ParameterContext
  location: class CartesianProductResolver
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:48: error: cannot find symbol
	public Object resolveParameter(ParameterContext parameterContext, ExtensionContext extensionContext) {
	                                                                  ^
  symbol:   class ExtensionContext
  location: class CartesianProductResolver
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:29: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/CartesianProductResolver.java:47: error: method does not override or implement a method from a supertype
	@Override
	^
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
96 errors
