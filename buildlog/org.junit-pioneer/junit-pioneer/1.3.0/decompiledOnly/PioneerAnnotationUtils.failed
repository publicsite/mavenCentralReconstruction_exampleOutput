sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:7: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.AnnotationSupport;
                                         ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:21: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:28: error: cannot find symbol
    public static boolean isAnyAnnotationPresent(final ExtensionContext context, final Class<? extends Annotation>... annotationTypes) {
                                                       ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:32: error: cannot find symbol
    public static boolean isAnyRepeatableAnnotationPresent(final ExtensionContext context, final Class<? extends Annotation>... annotationTypes) {
                                                                 ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:36: error: cannot find symbol
    public static <A extends Annotation> Optional<A> findClosestEnclosingAnnotation(final ExtensionContext context, final Class<A> annotationType) {
                                                                                          ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:40: error: cannot find symbol
    public static <A extends Annotation> Stream<A> findAllEnclosingAnnotations(final ExtensionContext context, final Class<A> annotationType) {
                                                                                     ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:44: error: cannot find symbol
    public static <A extends Annotation> Stream<A> findClosestEnclosingRepeatableAnnotations(final ExtensionContext context, final Class<A> annotationType) {
                                                                                                   ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:48: error: cannot find symbol
    public static <A extends Annotation> Stream<A> findAllEnclosingRepeatableAnnotations(final ExtensionContext context, final Class<A> annotationType) {
                                                                                               ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:90: error: cannot find symbol
    static <A extends Annotation> Stream<A> findAnnotations(final ExtensionContext context, final Class<A> annotationType, final boolean findRepeated, final boolean findAllEnclosing) {
                                                                  ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:29: error: incompatible types: invalid method reference
        return Stream.of(annotationTypes).map(annotationType -> findClosestEnclosingAnnotation(context, annotationType)).anyMatch(Optional::isPresent);
                                                                                                                                  ^
    method isPresent in class Optional<T> cannot be applied to given types
      required: no arguments
      found: Object
      reason: actual and formal argument lists differ in length
  where T is a type-variable:
    T extends Object declared in class Optional
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:53: error: incompatible types: Collector<Object,CAP#1,List<Object>> cannot be converted to Collector<? super Object,?,List<Annotation>>
        return Arrays.stream(element.getDeclaredAnnotations()).flatMap((Function<? super Annotation, ? extends Stream<?>>)PioneerAnnotationUtils::flatten).filter(a -> !findOnElement(a.annotationType(), annotation, true).isEmpty()).collect((Collector<? super Object, ?, List<Annotation>>)Collectors.toList());
                                                                                                                                                                                                                                                                                                                ^
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:53: error: cannot find symbol
        return Arrays.stream(element.getDeclaredAnnotations()).flatMap((Function<? super Annotation, ? extends Stream<?>>)PioneerAnnotationUtils::flatten).filter(a -> !findOnElement(a.annotationType(), annotation, true).isEmpty()).collect((Collector<? super Object, ?, List<Annotation>>)Collectors.toList());
                                                                                                                                                                                       ^
  symbol:   method annotationType()
  location: variable a of type Object
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:101: error: cannot find symbol
            return (List<A>)AnnotationSupport.findRepeatableAnnotations(element, (Class)annotationType);
                            ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java:103: error: cannot find symbol
        return AnnotationSupport.findAnnotation(element, (Class)annotationType).map(Collections::singletonList).orElse(Collections.emptyList());
               ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
Note: sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/Decompiled/org/junitpioneer/internal/PioneerAnnotationUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
14 errors
