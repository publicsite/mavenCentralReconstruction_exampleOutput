hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:14: error: package org.junit.platform.commons.support does not exist
import static org.junit.platform.commons.support.AnnotationSupport.findAnnotation;
                                                ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:14: error: static import only from classes and interfaces
import static org.junit.platform.commons.support.AnnotationSupport.findAnnotation;
^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:18: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.AfterTestExecutionCallback;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:19: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:20: error: package org.junit.jupiter.api.extension.ExtensionContext does not exist
import org.junit.jupiter.api.extension.ExtensionContext.Namespace;
                                                       ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:21: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.TestExecutionExceptionHandler;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:22: error: package org.opentest4j does not exist
import org.opentest4j.AssertionFailedError;
                     ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:28: error: cannot find symbol
class ExpectedExceptionExtension implements TestExecutionExceptionHandler, AfterTestExecutionCallback {
                                            ^
  symbol: class TestExecutionExceptionHandler
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:28: error: cannot find symbol
class ExpectedExceptionExtension implements TestExecutionExceptionHandler, AfterTestExecutionCallback {
                                                                           ^
  symbol: class AfterTestExecutionCallback
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:38: error: cannot find symbol
	private static final Namespace NAMESPACE = Namespace.create(ExpectedExceptionExtension.class);
	                     ^
  symbol:   class Namespace
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:42: error: cannot find symbol
	public void handleTestExecutionException(ExtensionContext context, Throwable throwable) throws Throwable {
	                                         ^
  symbol:   class ExtensionContext
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:61: error: cannot find symbol
	public void afterTestExecution(ExtensionContext context) throws Exception {
	                               ^
  symbol:   class ExtensionContext
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:83: error: cannot find symbol
	private static Optional<? extends Class<? extends Throwable>> expectedException(ExtensionContext context) {
	                                                                                ^
  symbol:   class ExtensionContext
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:89: error: cannot find symbol
	private static void storeExceptionStatus(ExtensionContext context, EXCEPTION thrown) {
	                                         ^
  symbol:   class ExtensionContext
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:93: error: cannot find symbol
	private static EXCEPTION loadExceptionStatus(ExtensionContext context) {
	                                             ^
  symbol:   class ExtensionContext
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:38: error: cannot find symbol
	private static final Namespace NAMESPACE = Namespace.create(ExpectedExceptionExtension.class);
	                                           ^
  symbol:   variable Namespace
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:41: error: method does not override or implement a method from a supertype
	@Override
	^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:60: error: method does not override or implement a method from a supertype
	@Override
	^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:63: error: cannot find symbol
			case WAS_NOT_THROWN:
			     ^
  symbol:   variable WAS_NOT_THROWN
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:65: error: cannot find symbol
						.map(expected -> new AssertionFailedError(format(EXPECTED_EXCEPTION_WAS_NOT_THROWN, expected)))
						                     ^
  symbol:   class AssertionFailedError
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:69: error: cannot find symbol
			case WAS_THROWN_AS_EXPECTED:
			     ^
  symbol:   variable WAS_THROWN_AS_EXPECTED
  location: class ExpectedExceptionExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/ExpectedExceptionExtension.java:72: error: cannot find symbol
			case WAS_THROWN_NOT_AS_EXPECTED:
			     ^
  symbol:   variable WAS_THROWN_NOT_AS_EXPECTED
  location: class ExpectedExceptionExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/vintage/TimeoutExtension.java:38: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/vintage/TimeoutExtension.java:50: error: cannot find symbol
			throw new ExtensionConfigurationException("Timeout for vintage @Test must be positive.");
			          ^
  symbol:   class ExtensionConfigurationException
  location: class TimeoutExtension
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
24 errors
