hybrids/org.junit-pioneer/junit-pioneer/1.3.0/Issue.java:18: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtendWith;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/Issue.java:40: error: cannot find symbol
@ExtendWith(IssueExtension.class)
 ^
  symbol: class ExtendWith
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:15: error: package org.junit.platform.engine does not exist
import static org.junit.platform.engine.TestExecutionResult.Status;
                                       ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:15: error: static import only from classes and interfaces
import static org.junit.platform.engine.TestExecutionResult.Status;
^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:26: error: package org.junit.platform.engine does not exist
import org.junit.platform.engine.TestExecutionResult;
                                ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:27: error: package org.junit.platform.engine.reporting does not exist
import org.junit.platform.engine.reporting.ReportEntry;
                                          ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:28: error: package org.junit.platform.launcher does not exist
import org.junit.platform.launcher.TestExecutionListener;
                                  ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:29: error: package org.junit.platform.launcher does not exist
import org.junit.platform.launcher.TestIdentifier;
                                  ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:30: error: package org.junit.platform.launcher does not exist
import org.junit.platform.launcher.TestPlan;
                                  ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueExtension.java:15: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.BeforeEachCallback;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueExtension.java:16: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueExtension.java:24: error: cannot find symbol
class IssueExtension implements BeforeEachCallback {
                                ^
  symbol: class BeforeEachCallback
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:38: error: cannot find symbol
public class IssueExtensionExecutionListener implements TestExecutionListener {
                                                        ^
  symbol: class TestExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueExtension.java:27: error: cannot find symbol
	public void beforeEach(ExtensionContext context) {
	                       ^
  symbol:   class ExtensionContext
  location: class IssueExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueTestCaseBuilder.java:13: error: package org.junit.platform.engine.TestExecutionResult does not exist
import org.junit.platform.engine.TestExecutionResult.Status;
                                                    ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:56: error: cannot find symbol
	public void reportingEntryPublished(TestIdentifier testIdentifier, ReportEntry entry) {
	                                    ^
  symbol:   class TestIdentifier
  location: class IssueExtensionExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:56: error: cannot find symbol
	public void reportingEntryPublished(TestIdentifier testIdentifier, ReportEntry entry) {
	                                                                   ^
  symbol:   class ReportEntry
  location: class IssueExtensionExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:70: error: cannot find symbol
	public void executionFinished(TestIdentifier testIdentifier, TestExecutionResult testExecutionResult) {
	                              ^
  symbol:   class TestIdentifier
  location: class IssueExtensionExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:70: error: cannot find symbol
	public void executionFinished(TestIdentifier testIdentifier, TestExecutionResult testExecutionResult) {
	                                                             ^
  symbol:   class TestExecutionResult
  location: class IssueExtensionExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:86: error: cannot find symbol
	public void testPlanExecutionFinished(TestPlan testPlan) {
	                                      ^
  symbol:   class TestPlan
  location: class IssueExtensionExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueTestCase.java:17: error: package org.junit.platform.engine.TestExecutionResult does not exist
import org.junit.platform.engine.TestExecutionResult.Status;
                                                    ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueTestCase.java:33: error: cannot find symbol
	private final Status result;
	              ^
  symbol:   class Status
  location: class IssueTestCase
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueTestCase.java:41: error: cannot find symbol
	public IssueTestCase(String testId, Status result) {
	                                    ^
  symbol:   class Status
  location: class IssueTestCase
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueTestCase.java:59: error: cannot find symbol
	public Status result() {
	       ^
  symbol:   class Status
  location: class IssueTestCase
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueTestCaseBuilder.java:20: error: cannot find symbol
	private Status result;
	        ^
  symbol:   class Status
  location: class IssueTestCaseBuilder
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueTestCaseBuilder.java:26: error: cannot find symbol
	public IssueTestCaseBuilder setResult(Status result) {
	                                      ^
  symbol:   class Status
  location: class IssueTestCaseBuilder
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:25: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:26: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.AnnotationSupport;
                                         ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:58: error: cannot find symbol
	public static boolean isAnyAnnotationPresent(ExtensionContext context,
	                                             ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:73: error: cannot find symbol
	public static boolean isAnyRepeatableAnnotationPresent(ExtensionContext context,
	                                                       ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:88: error: cannot find symbol
	public static <A extends Annotation> Optional<A> findClosestEnclosingAnnotation(ExtensionContext context,
	                                                                                ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:99: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findAllEnclosingAnnotations(ExtensionContext context,
	                                                                           ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:110: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findClosestEnclosingRepeatableAnnotations(ExtensionContext context,
	                                                                                         ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:121: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findAllEnclosingRepeatableAnnotations(ExtensionContext context,
	                                                                                     ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:173: error: cannot find symbol
	static <A extends Annotation> Stream<A> findAnnotations(ExtensionContext context, Class<A> annotationType,
	                                                        ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:55: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:69: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:79: error: cannot find symbol
				Status result = testExecutionResult.getStatus();
				^
  symbol:   class Status
  location: class IssueExtensionExecutionListener
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java:85: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/IssueExtension.java:26: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:64: error: incompatible types: invalid method reference
				.anyMatch(Optional::isPresent);
				          ^
    method isPresent in class Optional<T> cannot be applied to given types
      required: no arguments
      found: Object
      reason: actual and formal argument lists differ in length
  where T is a type-variable:
    T extends Object declared in class Optional
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:199: error: cannot find symbol
			return AnnotationSupport.findRepeatableAnnotations(element, annotationType);
			       ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:201: error: cannot find symbol
			return AnnotationSupport
			       ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
Note: sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
43 errors
