hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:15: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.AfterEachCallback;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:16: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.BeforeEachCallback;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:17: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionConfigurationException;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:18: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:19: error: package org.junit.jupiter.api.extension.ExtensionContext does not exist
import org.junit.jupiter.api.extension.ExtensionContext.Namespace;
                                                       ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:20: error: package org.junit.jupiter.api.extension.ExtensionContext does not exist
import org.junit.jupiter.api.extension.ExtensionContext.Store;
                                                       ^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:23: error: cannot find symbol
class DefaultTimeZoneExtension implements BeforeEachCallback, AfterEachCallback {
                                          ^
  symbol: class BeforeEachCallback
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:23: error: cannot find symbol
class DefaultTimeZoneExtension implements BeforeEachCallback, AfterEachCallback {
                                                              ^
  symbol: class AfterEachCallback
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:25: error: cannot find symbol
	private static final Namespace NAMESPACE = Namespace.create(DefaultTimeZoneExtension.class);
	                     ^
  symbol:   class Namespace
  location: class DefaultTimeZoneExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:30: error: cannot find symbol
	public void beforeEach(ExtensionContext context) {
	                       ^
  symbol:   class ExtensionContext
  location: class DefaultTimeZoneExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:36: error: cannot find symbol
	private void setDefaultTimeZone(Store store, DefaultTimeZone annotation) {
	                                ^
  symbol:   class Store
  location: class DefaultTimeZoneExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/DefaultTimeZone.java:18: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtendWith;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/WritesDefaultTimeZone.java:18: error: package org.junit.jupiter.api.parallel does not exist
import org.junit.jupiter.api.parallel.ResourceAccessMode;
                                     ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/WritesDefaultTimeZone.java:19: error: package org.junit.jupiter.api.parallel does not exist
import org.junit.jupiter.api.parallel.ResourceLock;
                                     ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/WritesDefaultTimeZone.java:20: error: package org.junit.jupiter.api.parallel does not exist
import org.junit.jupiter.api.parallel.Resources;
                                     ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/WritesDefaultTimeZone.java:37: error: cannot find symbol
@ResourceLock(value = Resources.TIME_ZONE, mode = ResourceAccessMode.READ_WRITE)
 ^
  symbol: class ResourceLock
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/DefaultTimeZone.java:52: error: cannot find symbol
@ExtendWith(DefaultTimeZoneExtension.class)
 ^
  symbol: class ExtendWith
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:58: error: cannot find symbol
	private void storeDefaultTimeZone(Store store) {
	                                  ^
  symbol:   class Store
  location: class DefaultTimeZoneExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:63: error: cannot find symbol
	public void afterEach(ExtensionContext context) {
	                      ^
  symbol:   class ExtensionContext
  location: class DefaultTimeZoneExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:69: error: cannot find symbol
	private void resetDefaultTimeZone(Store store) {
	                                  ^
  symbol:   class Store
  location: class DefaultTimeZoneExtension
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:25: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:26: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.AnnotationSupport;
                                         ^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:58: error: cannot find symbol
	public static boolean isAnyAnnotationPresent(ExtensionContext context,
	                                             ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:73: error: cannot find symbol
	public static boolean isAnyRepeatableAnnotationPresent(ExtensionContext context,
	                                                       ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:88: error: cannot find symbol
	public static <A extends Annotation> Optional<A> findClosestEnclosingAnnotation(ExtensionContext context,
	                                                                                ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:99: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findAllEnclosingAnnotations(ExtensionContext context,
	                                                                           ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:110: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findClosestEnclosingRepeatableAnnotations(ExtensionContext context,
	                                                                                         ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:121: error: cannot find symbol
	public static <A extends Annotation> Stream<A> findAllEnclosingRepeatableAnnotations(ExtensionContext context,
	                                                                                     ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:173: error: cannot find symbol
	static <A extends Annotation> Stream<A> findAnnotations(ExtensionContext context, Class<A> annotationType,
	                                                        ^
  symbol:   class ExtensionContext
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/WritesDefaultTimeZone.java:37: error: cannot find symbol
@ResourceLock(value = Resources.TIME_ZONE, mode = ResourceAccessMode.READ_WRITE)
                      ^
  symbol: variable Resources
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/jupiter/WritesDefaultTimeZone.java:37: error: cannot find symbol
@ResourceLock(value = Resources.TIME_ZONE, mode = ResourceAccessMode.READ_WRITE)
                                                  ^
  symbol: variable ResourceAccessMode
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:25: error: cannot find symbol
	private static final Namespace NAMESPACE = Namespace.create(DefaultTimeZoneExtension.class);
	                                           ^
  symbol:   variable Namespace
  location: class DefaultTimeZoneExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:29: error: method does not override or implement a method from a supertype
	@Override
	^
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:49: error: cannot find symbol
			throw new ExtensionConfigurationException(String
			          ^
  symbol:   class ExtensionConfigurationException
  location: class DefaultTimeZoneExtension
hybrids/org.junit-pioneer/junit-pioneer/1.3.0/DefaultTimeZoneExtension.java:62: error: method does not override or implement a method from a supertype
	@Override
	^
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:64: error: incompatible types: invalid method reference
				.anyMatch(Optional::isPresent);
				          ^
    method isPresent in class Optional<T> cannot be applied to given types
      required: no arguments
      found: Object
      reason: actual and formal argument lists differ in length
  where T is a type-variable:
    T extends Object declared in class Optional
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:199: error: cannot find symbol
			return AnnotationSupport.findRepeatableAnnotations(element, annotationType);
			       ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java:201: error: cannot find symbol
			return AnnotationSupport
			       ^
  symbol:   variable AnnotationSupport
  location: class PioneerAnnotationUtils
Note: sources/structure/org.junit-pioneer/junit-pioneer/1.3.0/extractedSources/org/junitpioneer/internal/PioneerAnnotationUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
38 errors
