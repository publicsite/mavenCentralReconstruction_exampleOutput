sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:10: error: package org.assertj.core.internal.bytebuddy.build does not exist
import org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin;
                                                ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:11: error: package org.assertj.core.internal.bytebuddy.description.type does not exist
import org.assertj.core.internal.bytebuddy.description.type.TypeDescription;
                                                           ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:20: error: cannot find symbol
    Map<TypeDescription, Class<?>> load(final T p0, final Map<TypeDescription, byte[]> p1);
                                                              ^
  symbol:   class TypeDescription
  location: interface ClassLoadingStrategy<T>
  where T is a type-variable:
    T extends ClassLoader declared in interface ClassLoadingStrategy
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:20: error: cannot find symbol
    Map<TypeDescription, Class<?>> load(final T p0, final Map<TypeDescription, byte[]> p1);
        ^
  symbol:   class TypeDescription
  location: interface ClassLoadingStrategy<T>
  where T is a type-variable:
    T extends ClassLoader declared in interface ClassLoadingStrategy
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:37: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                            ^
  symbol:   class TypeDescription
  location: class Default
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:37: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                   ^
  symbol:   class TypeDescription
  location: class Default
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:45: error: cannot find symbol
        public Configurable<ClassLoader> with(final PackageDefinitionStrategy packageDefinitionStrategy) {
                                                    ^
  symbol:   class PackageDefinitionStrategy
  location: class Default
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:369: error: cannot find symbol
        Configurable<S> with(final PackageDefinitionStrategy p0);
                                   ^
  symbol:   class PackageDefinitionStrategy
  location: interface Configurable<S>
  where S is a type-variable:
    S extends ClassLoader declared in interface Configurable
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:57: error: package HashCodeAndEqualsPlugin does not exist
        @HashCodeAndEqualsPlugin.Enhance
                                ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:62: error: cannot find symbol
            private final PackageDefinitionStrategy packageDefinitionStrategy;
                          ^
  symbol:   class PackageDefinitionStrategy
  location: class InjectionDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:69: error: cannot find symbol
            private InjectionDispatcher(final ProtectionDomain protectionDomain, final PackageDefinitionStrategy packageDefinitionStrategy, final boolean forbidExisting) {
                                                                                       ^
  symbol:   class PackageDefinitionStrategy
  location: class InjectionDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:75: error: cannot find symbol
            public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                                ^
  symbol:   class TypeDescription
  location: class InjectionDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:75: error: cannot find symbol
            public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                       ^
  symbol:   class TypeDescription
  location: class InjectionDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:83: error: cannot find symbol
            public Configurable<ClassLoader> with(final PackageDefinitionStrategy packageDefinitionStrategy) {
                                                        ^
  symbol:   class PackageDefinitionStrategy
  location: class InjectionDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:138: error: package HashCodeAndEqualsPlugin does not exist
        @HashCodeAndEqualsPlugin.Enhance
                                ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:145: error: package ByteArrayClassLoader does not exist
            private final ByteArrayClassLoader.PersistenceHandler persistenceHandler;
                                              ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:146: error: cannot find symbol
            private final PackageDefinitionStrategy packageDefinitionStrategy;
                          ^
  symbol:   class PackageDefinitionStrategy
  location: class WrappingDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:151: error: package ByteArrayClassLoader does not exist
            protected WrappingDispatcher(final ByteArrayClassLoader.PersistenceHandler persistenceHandler, final boolean childFirst) {
                                                                   ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:155: error: cannot find symbol
            private WrappingDispatcher(final ProtectionDomain protectionDomain, final PackageDefinitionStrategy packageDefinitionStrategy, final ByteArrayClassLoader.PersistenceHandler persistenceHandler, final boolean childFirst, final boolean forbidExisting, final boolean sealed) {
                                                                                      ^
  symbol:   class PackageDefinitionStrategy
  location: class WrappingDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:155: error: package ByteArrayClassLoader does not exist
            private WrappingDispatcher(final ProtectionDomain protectionDomain, final PackageDefinitionStrategy packageDefinitionStrategy, final ByteArrayClassLoader.PersistenceHandler persistenceHandler, final boolean childFirst, final boolean forbidExisting, final boolean sealed) {
                                                                                                                                                                     ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:164: error: cannot find symbol
            public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                                ^
  symbol:   class TypeDescription
  location: class WrappingDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:164: error: cannot find symbol
            public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                       ^
  symbol:   class TypeDescription
  location: class WrappingDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:172: error: cannot find symbol
            public Configurable<ClassLoader> with(final PackageDefinitionStrategy packageDefinitionStrategy) {
                                                        ^
  symbol:   class PackageDefinitionStrategy
  location: class WrappingDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:237: error: package HashCodeAndEqualsPlugin does not exist
    @HashCodeAndEqualsPlugin.Enhance
                            ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:240: error: cannot find symbol
        private final ClassInjector classInjector;
                      ^
  symbol:   class ClassInjector
  location: class UsingLookup
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:242: error: cannot find symbol
        protected UsingLookup(final ClassInjector classInjector) {
                                    ^
  symbol:   class ClassInjector
  location: class UsingLookup
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:265: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                            ^
  symbol:   class TypeDescription
  location: class UsingLookup
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:265: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                   ^
  symbol:   class TypeDescription
  location: class UsingLookup
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:280: error: package HashCodeAndEqualsPlugin does not exist
    @HashCodeAndEqualsPlugin.Enhance
                            ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:291: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                            ^
  symbol:   class TypeDescription
  location: class ForBootstrapInjection
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:291: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                   ^
  symbol:   class TypeDescription
  location: class ForBootstrapInjection
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:307: error: package HashCodeAndEqualsPlugin does not exist
    @HashCodeAndEqualsPlugin.Enhance
                            ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:321: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                            ^
  symbol:   class TypeDescription
  location: class ForUnsafeInjection
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:321: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                   ^
  symbol:   class TypeDescription
  location: class ForUnsafeInjection
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:60: error: package HashCodeAndEqualsPlugin does not exist
            @HashCodeAndEqualsPlugin.ValueHandling(HashCodeAndEqualsPlugin.ValueHandling.Sort.REVERSE_NULLABILITY)
                                    ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:60: error: package HashCodeAndEqualsPlugin.ValueHandling does not exist
            @HashCodeAndEqualsPlugin.ValueHandling(HashCodeAndEqualsPlugin.ValueHandling.Sort.REVERSE_NULLABILITY)
                                                                                        ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:143: error: package HashCodeAndEqualsPlugin does not exist
            @HashCodeAndEqualsPlugin.ValueHandling(HashCodeAndEqualsPlugin.ValueHandling.Sort.REVERSE_NULLABILITY)
                                    ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:143: error: package HashCodeAndEqualsPlugin.ValueHandling does not exist
            @HashCodeAndEqualsPlugin.ValueHandling(HashCodeAndEqualsPlugin.ValueHandling.Sort.REVERSE_NULLABILITY)
                                                                                        ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:310: error: package HashCodeAndEqualsPlugin does not exist
        @HashCodeAndEqualsPlugin.ValueHandling(HashCodeAndEqualsPlugin.ValueHandling.Sort.REVERSE_NULLABILITY)
                                ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:310: error: package HashCodeAndEqualsPlugin.ValueHandling does not exist
        @HashCodeAndEqualsPlugin.ValueHandling(HashCodeAndEqualsPlugin.ValueHandling.Sort.REVERSE_NULLABILITY)
                                                                                    ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:24: error: package ByteArrayClassLoader does not exist
        WRAPPER((Configurable<ClassLoader>)new WrappingDispatcher(ByteArrayClassLoader.PersistenceHandler.LATENT, false)), 
                                                                                      ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:25: error: package ByteArrayClassLoader does not exist
        WRAPPER_PERSISTENT((Configurable<ClassLoader>)new WrappingDispatcher(ByteArrayClassLoader.PersistenceHandler.MANIFEST, false)), 
                                                                                                 ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:26: error: package ByteArrayClassLoader does not exist
        CHILD_FIRST((Configurable<ClassLoader>)new WrappingDispatcher(ByteArrayClassLoader.PersistenceHandler.LATENT, true)), 
                                                                                          ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:27: error: package ByteArrayClassLoader does not exist
        CHILD_FIRST_PERSISTENT((Configurable<ClassLoader>)new WrappingDispatcher(ByteArrayClassLoader.PersistenceHandler.MANIFEST, true)), 
                                                                                                     ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:66: error: package PackageDefinitionStrategy does not exist
                this(InjectionDispatcher.NO_PROTECTION_DOMAIN, PackageDefinitionStrategy.NoOp.INSTANCE, true);
                                                                                        ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:76: error: package ClassInjector does not exist
                return new ClassInjector.UsingReflection(classLoader, this.protectionDomain, this.packageDefinitionStrategy, this.forbidExisting).inject(types);
                                        ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:152: error: package PackageDefinitionStrategy does not exist
                this(WrappingDispatcher.NO_PROTECTION_DOMAIN, PackageDefinitionStrategy.Trivial.INSTANCE, persistenceHandler, childFirst, true, true);
                                                                                       ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:165: error: package ByteArrayClassLoader does not exist
                return this.childFirst ? ByteArrayClassLoader.ChildFirst.load(classLoader, types, this.protectionDomain, this.persistenceHandler, this.packageDefinitionStrategy, this.forbidExisting, this.sealed) : ByteArrayClassLoader.load(classLoader, types, this.protectionDomain, this.persistenceHandler, this.packageDefinitionStrategy, this.forbidExisting, this.sealed);
                                                             ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:165: error: cannot find symbol
                return this.childFirst ? ByteArrayClassLoader.ChildFirst.load(classLoader, types, this.protectionDomain, this.persistenceHandler, this.packageDefinitionStrategy, this.forbidExisting, this.sealed) : ByteArrayClassLoader.load(classLoader, types, this.protectionDomain, this.persistenceHandler, this.packageDefinitionStrategy, this.forbidExisting, this.sealed);
                                                                                                                                                                                                                      ^
  symbol:   variable ByteArrayClassLoader
  location: class WrappingDispatcher
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:247: error: package ClassInjector does not exist
            return new UsingLookup(ClassInjector.UsingLookup.of(lookup));
                                                ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:251: error: package ClassInjector does not exist
            if (ClassInjector.UsingLookup.isAvailable()) {
                             ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:259: error: package ClassInjector does not exist
            if (ClassInjector.UsingUnsafe.isAvailable()) {
                             ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:292: error: cannot find symbol
            final ClassInjector classInjector = (classLoader == null) ? ClassInjector.UsingInstrumentation.of(this.folder, ClassInjector.UsingInstrumentation.Target.BOOTSTRAP, this.instrumentation) : new ClassInjector.UsingReflection(classLoader);
                  ^
  symbol:   class ClassInjector
  location: class ForBootstrapInjection
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:292: error: package ClassInjector.UsingInstrumentation does not exist
            final ClassInjector classInjector = (classLoader == null) ? ClassInjector.UsingInstrumentation.of(this.folder, ClassInjector.UsingInstrumentation.Target.BOOTSTRAP, this.instrumentation) : new ClassInjector.UsingReflection(classLoader);
                                                                                                                                                             ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:292: error: package ClassInjector does not exist
            final ClassInjector classInjector = (classLoader == null) ? ClassInjector.UsingInstrumentation.of(this.folder, ClassInjector.UsingInstrumentation.Target.BOOTSTRAP, this.instrumentation) : new ClassInjector.UsingReflection(classLoader);
                                                                                     ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:292: error: package ClassInjector does not exist
            final ClassInjector classInjector = (classLoader == null) ? ClassInjector.UsingInstrumentation.of(this.folder, ClassInjector.UsingInstrumentation.Target.BOOTSTRAP, this.instrumentation) : new ClassInjector.UsingReflection(classLoader);
                                                                                                                                                                                                                         ^
sources/structure/org.assertj/assertj-core/3.16.1/Decompiled/org/assertj/core/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy.java:322: error: package ClassInjector does not exist
            return new ClassInjector.UsingUnsafe(classLoader, this.protectionDomain).inject(types);
                                    ^
57 errors
