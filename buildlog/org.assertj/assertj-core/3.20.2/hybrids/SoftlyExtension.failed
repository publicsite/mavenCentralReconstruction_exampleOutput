hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:15: error: package org.junit.jupiter.api.TestInstance does not exist
import static org.junit.jupiter.api.TestInstance.Lifecycle.PER_CLASS;
                                                ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:15: error: static import only from classes and interfaces
import static org.junit.jupiter.api.TestInstance.Lifecycle.PER_CLASS;
^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:16: error: package org.junit.platform.commons.support does not exist
import static org.junit.platform.commons.support.ReflectionSupport.findFields;
                                                ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:16: error: static import only from classes and interfaces
import static org.junit.platform.commons.support.ReflectionSupport.findFields;
^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:23: error: package org.junit.jupiter.api.TestInstance does not exist
import org.junit.jupiter.api.TestInstance.Lifecycle;
                                         ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:24: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.AfterTestExecutionCallback;
                                      ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:25: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.ExtensionContext;
                                      ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:26: error: package org.junit.jupiter.api.extension.ExtensionContext does not exist
import org.junit.jupiter.api.extension.ExtensionContext.Namespace;
                                                       ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:27: error: package org.junit.jupiter.api.extension.ExtensionContext does not exist
import org.junit.jupiter.api.extension.ExtensionContext.Store;
                                                       ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:28: error: package org.junit.jupiter.api.extension does not exist
import org.junit.jupiter.api.extension.TestInstancePostProcessor;
                                      ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:29: error: package org.junit.platform.commons.support does not exist
import org.junit.platform.commons.support.HierarchyTraversalMode;
                                         ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:92: error: cannot find symbol
public class SoftlyExtension implements AfterTestExecutionCallback, TestInstancePostProcessor {
                                        ^
  symbol: class AfterTestExecutionCallback
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:92: error: cannot find symbol
public class SoftlyExtension implements AfterTestExecutionCallback, TestInstancePostProcessor {
                                                                    ^
  symbol: class TestInstancePostProcessor
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:94: error: cannot find symbol
  private static final Namespace SOFTLY_EXTENSION_NAMESPACE = Namespace.create(SoftlyExtension.class);
                       ^
  symbol:   class Namespace
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:97: error: cannot find symbol
  public void postProcessTestInstance(Object testInstance, ExtensionContext extensionContext) throws Exception {
                                                           ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:109: error: cannot find symbol
  public void afterTestExecution(ExtensionContext extensionContext) throws Exception {
                                 ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:123: error: cannot find symbol
  private static Optional<ExtensionContext> getParent(Optional<ExtensionContext> currentContext) {
                                                               ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:123: error: cannot find symbol
  private static Optional<ExtensionContext> getParent(Optional<ExtensionContext> currentContext) {
                          ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:127: error: cannot find symbol
  private static boolean isPerClassLifeCycle(ExtensionContext methodExtensionContext) {
                                             ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:154: error: cannot find symbol
  private static Store getStore(ExtensionContext extensionContext) {
                                ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:154: error: cannot find symbol
  private static Store getStore(ExtensionContext extensionContext) {
                 ^
  symbol:   class Store
  location: class SoftlyExtension
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:15: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.any;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:15: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.any;
^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:16: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.isProtected;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:16: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.isProtected;
^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:17: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.isPublic;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:17: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.isPublic;
^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:18: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.named;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:18: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.named;
^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:19: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.namedOneOf;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:19: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.namedOneOf;
^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:20: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.not;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:20: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.not;
^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:23: error: package net.bytebuddy.description.type does not exist
import net.bytebuddy.description.type.TypeDescription;
                                     ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:24: error: package net.bytebuddy.dynamic.loading does not exist
import net.bytebuddy.dynamic.loading.ClassInjector;
                                    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:25: error: package net.bytebuddy.dynamic.loading does not exist
import net.bytebuddy.dynamic.loading.ClassLoadingStrategy;
                                    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:30: error: package net.bytebuddy does not exist
import net.bytebuddy.ByteBuddy;
                    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:31: error: package net.bytebuddy does not exist
import net.bytebuddy.TypeCache;
                    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:32: error: package net.bytebuddy.TypeCache does not exist
import net.bytebuddy.TypeCache.SimpleKey;
                              ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:33: error: package net.bytebuddy.TypeCache does not exist
import net.bytebuddy.TypeCache.Sort;
                              ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:34: error: package net.bytebuddy.description.method does not exist
import net.bytebuddy.description.method.MethodDescription;
                                       ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:35: error: package net.bytebuddy.description.modifier does not exist
import net.bytebuddy.description.modifier.Visibility;
                                         ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:36: error: package net.bytebuddy.dynamic.scaffold does not exist
import net.bytebuddy.dynamic.scaffold.TypeValidation;
                                     ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:37: error: package net.bytebuddy.implementation does not exist
import net.bytebuddy.implementation.FieldAccessor;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:38: error: package net.bytebuddy.implementation does not exist
import net.bytebuddy.implementation.Implementation;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:39: error: package net.bytebuddy.implementation does not exist
import net.bytebuddy.implementation.MethodDelegation;
                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:40: error: package net.bytebuddy.implementation.auxiliary does not exist
import net.bytebuddy.implementation.auxiliary.AuxiliaryType;
                                             ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:41: error: package net.bytebuddy.matcher.ElementMatcher does not exist
import net.bytebuddy.matcher.ElementMatcher.Junction;
                                           ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:45: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST = methodsChangingTheObjectUnderTestNamed("asInstanceOf",
                       ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:45: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST = methodsChangingTheObjectUnderTestNamed("asInstanceOf",
                                ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:71: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_NOT_TO_PROXY = methodsNamed("as").or(named("clone"))
                       ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:71: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_NOT_TO_PROXY = methodsNamed("as").or(named("clone"))
                                ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:96: error: cannot find symbol
  private static final ByteBuddy BYTE_BUDDY = new ByteBuddy().with(new AuxiliaryType.NamingStrategy.SuffixingRandom("AssertJ$SoftProxies"))
                       ^
  symbol:   class ByteBuddy
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:99: error: cannot find symbol
  private static final Implementation PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST = MethodDelegation.to(ProxifyMethodChangingTheObjectUnderTest.class);
                       ^
  symbol:   class Implementation
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:100: error: cannot find symbol
  private static final Implementation ERROR_COLLECTOR = MethodDelegation.to(ErrorCollector.class);
                       ^
  symbol:   class Implementation
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:102: error: cannot find symbol
  private static final TypeCache<TypeCache.SimpleKey> CACHE = new TypeCache.WithInlineExpunction<>(Sort.SOFT);
                       ^
  symbol:   class TypeCache
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:102: error: package TypeCache does not exist
  private static final TypeCache<TypeCache.SimpleKey> CACHE = new TypeCache.WithInlineExpunction<>(Sort.SOFT);
                                          ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:19: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.FieldValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:20: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.RuntimeType;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:21: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.StubValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:22: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperCall;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:23: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperMethod;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:24: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.This;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:192: error: cannot find symbol
  private static Junction<MethodDescription> methodsNamed(String... names) {
                 ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:192: error: cannot find symbol
  private static Junction<MethodDescription> methodsNamed(String... names) {
                          ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:196: error: cannot find symbol
  private static Junction<MethodDescription> methodsChangingTheObjectUnderTestNamed(String... names) {
                 ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:196: error: cannot find symbol
  private static Junction<MethodDescription> methodsChangingTheObjectUnderTestNamed(String... names) {
                          ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:75: error: cannot find symbol
    private final ClassLoadingStrategy<ClassLoader> classLoadingStrategy;
                  ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:77: error: cannot find symbol
    ClassLoadingStrategyPair(ClassLoader classLoader, ClassLoadingStrategy<ClassLoader> classLoadingStrategy) {
                                                      ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:86: error: cannot find symbol
    ClassLoadingStrategy<ClassLoader> getClassLoadingStrategy() {
    ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:99: error: cannot find symbol
  static class CompositeClassLoader extends ClassLoader implements ClassLoadingStrategy<ClassLoader> {
                                                                   ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyFactory
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:120: error: cannot find symbol
    public Map<TypeDescription, Class<?>> load(ClassLoader classLoader, Map<TypeDescription, byte[]> types) {
                                                                            ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:120: error: cannot find symbol
    public Map<TypeDescription, Class<?>> load(ClassLoader classLoader, Map<TypeDescription, byte[]> types) {
               ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:50: error: cannot find symbol
  public static Object intercept(@FieldValue(FIELD_NAME) ErrorCollector errorCollector,
                                  ^
  symbol:   class FieldValue
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:51: error: cannot find symbol
                                 @This Object assertion,
                                  ^
  symbol:   class This
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:52: error: cannot find symbol
                                 @SuperCall Callable<?> proxy,
                                  ^
  symbol:   class SuperCall
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:53: error: cannot find symbol
                                 @SuperMethod(nullIfImpossible = true) Method method,
                                  ^
  symbol:   class SuperMethod
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:54: error: cannot find symbol
                                 @StubValue Object stub) throws Exception {
                                  ^
  symbol:   class StubValue
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:49: error: cannot find symbol
  @RuntimeType
   ^
  symbol:   class RuntimeType
  location: class ErrorCollector
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:94: error: cannot find symbol
  private static final Namespace SOFTLY_EXTENSION_NAMESPACE = Namespace.create(SoftlyExtension.class);
                                                              ^
  symbol:   variable Namespace
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:96: error: method does not override or implement a method from a supertype
  @Override
  ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:108: error: method does not override or implement a method from a supertype
  @Override
  ^
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:111: error: cannot find symbol
    Optional<ExtensionContext> currentContext = Optional.of(extensionContext);
             ^
  symbol:   class ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:124: error: cannot find symbol
    return currentContext.flatMap(ExtensionContext::getParent);
                                  ^
  symbol:   variable ExtensionContext
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:129: error: cannot find symbol
                                 .map(lifecycle -> lifecycle == PER_CLASS)
                                                                ^
  symbol:   variable PER_CLASS
  location: class SoftlyExtension
hybrids/org.assertj/assertj-core/3.20.2/SoftlyExtension.java:137: error: cannot find symbol
                                                        HierarchyTraversalMode.BOTTOM_UP);
                                                        ^
  symbol:   variable HierarchyTraversalMode
  location: class SoftlyExtension
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:57: error: package ClassInjector does not exist
    if (ClassInjector.UsingReflection.isAvailable()) {
                     ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:58: error: package ClassLoadingStrategy does not exist
      return new ClassLoadingStrategyPair(assertClassLoader, ClassLoadingStrategy.Default.INJECTION);
                                                                                 ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:59: error: package ClassInjector does not exist
    } else if (ClassInjector.UsingLookup.isAvailable()) {
                            ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:62: error: package ClassLoadingStrategy does not exist
            ClassLoadingStrategy.UsingLookup.of(PRIVATE_LOOKUP_IN.invoke(null, assertClass, LOOKUP)));
                                ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:119: error: method does not override or implement a method from a supertype
    @Override
    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:121: error: cannot find symbol
      Map<TypeDescription, Class<?>> result = new LinkedHashMap<>();
          ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:122: error: cannot find symbol
      for (Map.Entry<TypeDescription, byte[]> entry : types.entrySet()) {
                     ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:123: error: cannot find symbol
        TypeDescription typeDescription = entry.getKey();
        ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:71: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_NOT_TO_PROXY = methodsNamed("as").or(named("clone"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:72: error: cannot find symbol
                                                                                            .or(named("describedAs"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:73: error: cannot find symbol
                                                                                            .or(named("descriptionText"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:74: error: cannot find symbol
                                                                                            .or(named("getWritableAssertionInfo"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:75: error: cannot find symbol
                                                                                            .or(named("inBinary"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/SoftProxies.java:76: error: cannot find symbol
                                                                                            .or(named("inHexadecimal"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
100 errors
