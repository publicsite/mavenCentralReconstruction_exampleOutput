sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:7: error: package org.assertj.core.internal.bytebuddy.implementation does not exist
import org.assertj.core.internal.bytebuddy.implementation.MethodDelegation;
                                                         ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:9: error: package org.assertj.core.internal.bytebuddy.implementation.auxiliary does not exist
import org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType;
                                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:11: error: package org.assertj.core.internal.bytebuddy.dynamic.loading does not exist
import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy;
                                                          ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:12: error: package org.assertj.core.internal.bytebuddy.implementation does not exist
import org.assertj.core.internal.bytebuddy.implementation.FieldAccessor;
                                                         ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:13: error: package org.assertj.core.internal.bytebuddy.matcher does not exist
import org.assertj.core.internal.bytebuddy.matcher.ElementMatchers;
                                                  ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:15: error: package org.assertj.core.internal.bytebuddy.description.modifier does not exist
import org.assertj.core.internal.bytebuddy.description.modifier.Visibility;
                                                               ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:16: error: package org.assertj.core.internal.bytebuddy.description.modifier does not exist
import org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor;
                                                               ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:20: error: cannot find symbol
import org.assertj.core.internal.bytebuddy.TypeCache;
                                          ^
  symbol:   class TypeCache
  location: package org.assertj.core.internal.bytebuddy
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:21: error: package org.assertj.core.internal.bytebuddy.implementation does not exist
import org.assertj.core.internal.bytebuddy.implementation.Implementation;
                                                         ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:22: error: cannot find symbol
import org.assertj.core.internal.bytebuddy.ByteBuddy;
                                          ^
  symbol:   class ByteBuddy
  location: package org.assertj.core.internal.bytebuddy
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:23: error: package org.assertj.core.internal.bytebuddy.description.method does not exist
import org.assertj.core.internal.bytebuddy.description.method.MethodDescription;
                                                             ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:24: error: package org.assertj.core.internal.bytebuddy.matcher does not exist
import org.assertj.core.internal.bytebuddy.matcher.ElementMatcher;
                                                  ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:28: error: package ElementMatcher does not exist
    private static final ElementMatcher.Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST;
                                       ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:28: error: cannot find symbol
    private static final ElementMatcher.Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST;
                                                 ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:29: error: package ElementMatcher does not exist
    private static final ElementMatcher.Junction<MethodDescription> METHODS_NOT_TO_PROXY;
                                       ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:29: error: cannot find symbol
    private static final ElementMatcher.Junction<MethodDescription> METHODS_NOT_TO_PROXY;
                                                 ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:30: error: cannot find symbol
    private static final ByteBuddy BYTE_BUDDY;
                         ^
  symbol:   class ByteBuddy
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:31: error: cannot find symbol
    private static final Implementation PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST;
                         ^
  symbol:   class Implementation
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:32: error: cannot find symbol
    private static final Implementation ERROR_COLLECTOR;
                         ^
  symbol:   class Implementation
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:33: error: cannot find symbol
    private static final TypeCache<TypeCache.SimpleKey> CACHE;
                         ^
  symbol:   class TypeCache
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:33: error: package TypeCache does not exist
    private static final TypeCache<TypeCache.SimpleKey> CACHE;
                                            ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:19: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.FieldValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:20: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.RuntimeType;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:21: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.StubValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:22: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperCall;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:23: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperMethod;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:24: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.This;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:104: error: package ElementMatcher does not exist
    private static ElementMatcher.Junction<MethodDescription> methodsNamed(final String... names) {
                                 ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:104: error: cannot find symbol
    private static ElementMatcher.Junction<MethodDescription> methodsNamed(final String... names) {
                                           ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:108: error: package ElementMatcher does not exist
    private static ElementMatcher.Junction<MethodDescription> methodsChangingTheObjectUnderTestNamed(final String... names) {
                                 ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:108: error: cannot find symbol
    private static ElementMatcher.Junction<MethodDescription> methodsChangingTheObjectUnderTestNamed(final String... names) {
                                           ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:50: error: cannot find symbol
  public static Object intercept(@FieldValue(FIELD_NAME) ErrorCollector errorCollector,
                                  ^
  symbol:   class FieldValue
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:51: error: cannot find symbol
                                 @This Object assertion,
                                  ^
  symbol:   class This
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:52: error: cannot find symbol
                                 @SuperCall Callable<?> proxy,
                                  ^
  symbol:   class SuperCall
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:53: error: cannot find symbol
                                 @SuperMethod(nullIfImpossible = true) Method method,
                                  ^
  symbol:   class SuperMethod
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:54: error: cannot find symbol
                                 @StubValue Object stub) throws Exception {
                                  ^
  symbol:   class StubValue
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ErrorCollector.java:49: error: cannot find symbol
  @RuntimeType
   ^
  symbol:   class RuntimeType
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:59: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.FieldValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:60: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.RuntimeType;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:61: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperCall;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:62: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.This;
                                                   ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:75: error: cannot find symbol
  public static AbstractAssert<?, ?> intercept(@FieldValue(FIELD_NAME) ProxifyMethodChangingTheObjectUnderTest dispatcher,
                                                ^
  symbol:   class FieldValue
  location: class ProxifyMethodChangingTheObjectUnderTest
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:76: error: cannot find symbol
                                               @SuperCall Callable<AbstractAssert<?, ?>> assertionMethod,
                                                ^
  symbol:   class SuperCall
  location: class ProxifyMethodChangingTheObjectUnderTest
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:77: error: cannot find symbol
                                               @This AbstractAssert<?, ?> currentAssertInstance) throws Exception {
                                                ^
  symbol:   class This
  location: class ProxifyMethodChangingTheObjectUnderTest
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ProxifyMethodChangingTheObjectUnderTest.java:74: error: cannot find symbol
  @RuntimeType
   ^
  symbol:   class RuntimeType
  location: class ProxifyMethodChangingTheObjectUnderTest
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:56: error: package TypeCache does not exist
        final TypeCache.SimpleKey cacheKey = new TypeCache.SimpleKey(assertClass, (Class<?>[])new Class[0]);
                       ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:56: error: package TypeCache does not exist
        final TypeCache.SimpleKey cacheKey = new TypeCache.SimpleKey(assertClass, (Class<?>[])new Class[0]);
                                                          ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:61: error: method createSoftAssertionProxyClass in class SoftProxies cannot be applied to given types;
        final Class<?> proxyClass = createSoftAssertionProxyClass((Class<?>)IterableSizeAssert.class);
                                    ^
  required: Class<ASSERT>
  found: Class<CAP#1>
  reason: inference variable ASSERT has incompatible bounds
    equality constraints: CAP#1
    lower bounds: Assert<?,?>
  where ASSERT is a type-variable:
    ASSERT extends Assert<?,?> declared in method <ASSERT>createSoftAssertionProxyClass(Class<ASSERT>)
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:74: error: method createSoftAssertionProxyClass in class SoftProxies cannot be applied to given types;
        final Class<?> proxyClass = createSoftAssertionProxyClass((Class<?>)MapSizeAssert.class);
                                    ^
  required: Class<ASSERT>
  found: Class<CAP#1>
  reason: inference variable ASSERT has incompatible bounds
    equality constraints: CAP#1
    lower bounds: Assert<?,?>
  where ASSERT is a type-variable:
    ASSERT extends Assert<?,?> declared in method <ASSERT>createSoftAssertionProxyClass(Class<ASSERT>)
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:87: error: method createSoftAssertionProxyClass in class SoftProxies cannot be applied to given types;
        final Class<?> proxyClass = createSoftAssertionProxyClass((Class<?>)RecursiveComparisonAssert.class);
                                    ^
  required: Class<ASSERT>
  found: Class<CAP#1>
  reason: inference variable ASSERT has incompatible bounds
    equality constraints: CAP#1
    lower bounds: Assert<?,?>
  where ASSERT is a type-variable:
    ASSERT extends Assert<?,?> declared in method <ASSERT>createSoftAssertionProxyClass(Class<ASSERT>)
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:23: error: package net.bytebuddy.description.type does not exist
import net.bytebuddy.description.type.TypeDescription;
                                     ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:24: error: package net.bytebuddy.dynamic.loading does not exist
import net.bytebuddy.dynamic.loading.ClassInjector;
                                    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:25: error: package net.bytebuddy.dynamic.loading does not exist
import net.bytebuddy.dynamic.loading.ClassLoadingStrategy;
                                    ^
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:75: error: cannot find symbol
    private final ClassLoadingStrategy<ClassLoader> classLoadingStrategy;
                  ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:77: error: cannot find symbol
    ClassLoadingStrategyPair(ClassLoader classLoader, ClassLoadingStrategy<ClassLoader> classLoadingStrategy) {
                                                      ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:86: error: cannot find symbol
    ClassLoadingStrategy<ClassLoader> getClassLoadingStrategy() {
    ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:99: error: cannot find symbol
  static class CompositeClassLoader extends ClassLoader implements ClassLoadingStrategy<ClassLoader> {
                                                                   ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyFactory
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:120: error: cannot find symbol
    public Map<TypeDescription, Class<?>> load(ClassLoader classLoader, Map<TypeDescription, byte[]> types) {
                                                                            ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:120: error: cannot find symbol
    public Map<TypeDescription, Class<?>> load(ClassLoader classLoader, Map<TypeDescription, byte[]> types) {
               ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                                                                                                                                                                                                                                 ^
  symbol:   variable Visibility
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                         ^
  symbol:   variable Visibility
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                                                                                                                                                                                                                                                            ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                                                                                                                                                                                                                                                                                                           ^
  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                                                                                                                                                                                                                                                                                      ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^
  symbol:   variable FieldAccessor
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:101: error: cannot find symbol
        return (Class<? extends V>)SoftProxies.BYTE_BUDDY.subclass(assertClass).defineField("dispatcher", ProxifyMethodChangingTheObjectUnderTest.class, Visibility.PRIVATE).method(SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST).intercept(SoftProxies.PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST).defineField("errorCollector", ErrorCollector.class, Visibility.PRIVATE).method(ElementMatchers.any().and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_CHANGING_THE_OBJECT_UNDER_TEST)).and(ElementMatchers.not((ElementMatcher<? super Object>)SoftProxies.METHODS_NOT_TO_PROXY))).intercept(SoftProxies.ERROR_COLLECTOR).implement(AssertJProxySetup.class).intercept(FieldAccessor.ofField("dispatcher").setsArgumentAt(0).andThen(FieldAccessor.ofField("errorCollector").setsArgumentAt(1))).make().load(strategy.getClassLoader(), strategy.getClassLoadingStrategy()).getLoaded();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^
  symbol:   variable FieldAccessor
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:105: error: cannot find symbol
        return ElementMatchers.namedOneOf(names);
               ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:109: error: package ElementMatcher does not exist
        final ElementMatcher.Junction<MethodDescription> publicMethods = ElementMatchers.namedOneOf(names).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isPublic());
                            ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:109: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> publicMethods = ElementMatchers.namedOneOf(names).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isPublic());
                                      ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:109: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> publicMethods = ElementMatchers.namedOneOf(names).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isPublic());
                                                                                                                ^
  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:109: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> publicMethods = ElementMatchers.namedOneOf(names).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isPublic());
                                                                                                                                       ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:109: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> publicMethods = ElementMatchers.namedOneOf(names).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isPublic());
                                                                                                                                                          ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:109: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> publicMethods = ElementMatchers.namedOneOf(names).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isPublic());
                                                                         ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:111: error: package ElementMatcher does not exist
        final ElementMatcher.Junction<MethodDescription> forProxyProtectedMethods = ElementMatchers.namedOneOf(forProxyMethodNames).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isProtected());
                            ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:111: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> forProxyProtectedMethods = ElementMatchers.namedOneOf(forProxyMethodNames).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isProtected());
                                      ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:111: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> forProxyProtectedMethods = ElementMatchers.namedOneOf(forProxyMethodNames).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isProtected());
                                                                                                                                         ^
  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:111: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> forProxyProtectedMethods = ElementMatchers.namedOneOf(forProxyMethodNames).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isProtected());
                                                                                                                                                                ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:111: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> forProxyProtectedMethods = ElementMatchers.namedOneOf(forProxyMethodNames).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isProtected());
                                                                                                                                                                                   ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:111: error: cannot find symbol
        final ElementMatcher.Junction<MethodDescription> forProxyProtectedMethods = ElementMatchers.namedOneOf(forProxyMethodNames).and((ElementMatcher<? super MethodDescription>)ElementMatchers.isProtected());
                                                                                    ^
  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:112: error: cannot find symbol
        return publicMethods.or((ElementMatcher<? super MethodDescription>)forProxyProtectedMethods);
                                 ^
  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:112: error: cannot find symbol
        return publicMethods.or((ElementMatcher<? super MethodDescription>)forProxyProtectedMethods);
                                                        ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   class ElementMatcher
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/SoftProxies.java:117: error: cannot find symbol
        METHODS_NOT_TO_PROXY = methodsNamed("as").or((ElementMatcher<? super Object>)ElementMatchers.named("clone")).or((ElementMatcher<? super Object>)ElementMatchers.named("describedAs")).or((ElementMatcher<? super Object>)ElementMatchers.named("descriptionText")).or((ElementMatcher<? super Object>)ElementMatchers.named("getWritableAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("inBinary")).or((ElementMatcher<? super Object>)ElementMatchers.named("inHexadecimal")).or((ElementMatcher<? super Object>)ElementMatchers.named("newAbstractIterableAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("newObjectArrayAssert")).or((ElementMatcher<? super Object>)ElementMatchers.named("overridingErrorMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded")).or((ElementMatcher<? super Object>)ElementMatchers.named("succeedsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("failsWithin")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingDefaultComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("usingElementComparator")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionInfo")).or((ElementMatcher<? super Object>)ElementMatchers.named("withAssertionState")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldNames")).or((ElementMatcher<? super Object>)ElementMatchers.named("withComparatorsForElementPropertyOrFieldTypes")).or((ElementMatcher<? super Object>)ElementMatchers.named("withFailMessage")).or((ElementMatcher<? super Object>)ElementMatchers.named("withIterables")).or((ElementMatcher<? super Object>)ElementMatchers.named("withRepresentation")).or((ElementMatcher<? super Object>)ElementMatchers.named("withThreadDumpOnError")).or((ElementMatcher<? super MethodDescription>)ElementMatchers.named("withTypeComparators"));

  symbol:   variable ElementMatchers
  location: class SoftProxies
100 errors
