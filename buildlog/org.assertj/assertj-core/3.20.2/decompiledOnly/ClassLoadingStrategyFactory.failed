sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:9: error: package org.assertj.core.internal.bytebuddy.description.type does not exist
import org.assertj.core.internal.bytebuddy.description.type.TypeDescription;
                                                           ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:14: error: package org.assertj.core.internal.bytebuddy.dynamic.loading does not exist
import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector;
                                                          ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:15: error: package org.assertj.core.internal.bytebuddy.dynamic.loading does not exist
import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy;
                                                          ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:61: error: cannot find symbol
        private final ClassLoadingStrategy<ClassLoader> classLoadingStrategy;
                      ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:63: error: cannot find symbol
        ClassLoadingStrategyPair(final ClassLoader classLoader, final ClassLoadingStrategy<ClassLoader> classLoadingStrategy) {
                                                                      ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:72: error: cannot find symbol
        ClassLoadingStrategy<ClassLoader> getClassLoadingStrategy() {
        ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyPair
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:77: error: cannot find symbol
    static class CompositeClassLoader extends ClassLoader implements ClassLoadingStrategy<ClassLoader>
                                                                     ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyFactory
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:99: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                                                                                            ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:99: error: cannot find symbol
        public Map<TypeDescription, Class<?>> load(final ClassLoader classLoader, final Map<TypeDescription, byte[]> types) {
                   ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:31: error: package ClassInjector does not exist
        if (ClassInjector.UsingReflection.isAvailable()) {
                         ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:32: error: package ClassLoadingStrategy does not exist
            return new ClassLoadingStrategyPair(assertClassLoader, ClassLoadingStrategy.Default.INJECTION);
                                                                                       ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:34: error: package ClassInjector does not exist
        if (ClassInjector.UsingLookup.isAvailable()) {
                         ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:36: error: package ClassLoadingStrategy does not exist
                return new ClassLoadingStrategyPair(assertClassLoader, ClassLoadingStrategy.UsingLookup.of(ClassLoadingStrategyFactory.PRIVATE_LOOKUP_IN.invoke(null, assertClass, ClassLoadingStrategyFactory.LOOKUP)));
                                                                                           ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:98: error: method does not override or implement a method from a supertype
        @Override
        ^
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:100: error: cannot find symbol
            final Map<TypeDescription, Class<?>> result = new LinkedHashMap<TypeDescription, Class<?>>();
                      ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:100: error: cannot find symbol
            final Map<TypeDescription, Class<?>> result = new LinkedHashMap<TypeDescription, Class<?>>();
                                                                            ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:101: error: cannot find symbol
            for (final Map.Entry<TypeDescription, byte[]> entry : types.entrySet()) {
                                 ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
sources/structure/org.assertj/assertj-core/3.20.2/Decompiled/org/assertj/core/api/ClassLoadingStrategyFactory.java:102: error: cannot find symbol
                final TypeDescription typeDescription = entry.getKey();
                      ^
  symbol:   class TypeDescription
  location: class CompositeClassLoader
18 errors
