sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:15: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.any;
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:15: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.any;
^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:16: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.named;
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:16: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.named;
^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:17: error: package net.bytebuddy.matcher does not exist
import static net.bytebuddy.matcher.ElementMatchers.not;
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:17: error: static import only from classes and interfaces
import static net.bytebuddy.matcher.ElementMatchers.not;
^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:18: error: package net.bytebuddy.dynamic.loading does not exist
import net.bytebuddy.dynamic.loading.ClassInjector;
                                    ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:19: error: package net.bytebuddy.dynamic.loading does not exist
import net.bytebuddy.dynamic.loading.ClassLoadingStrategy;
                                    ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:26: error: package net.bytebuddy does not exist
import net.bytebuddy.ByteBuddy;
                    ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:27: error: package net.bytebuddy does not exist
import net.bytebuddy.TypeCache;
                    ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:28: error: package net.bytebuddy.TypeCache does not exist
import net.bytebuddy.TypeCache.SimpleKey;
                              ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:29: error: package net.bytebuddy.TypeCache does not exist
import net.bytebuddy.TypeCache.Sort;
                              ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:30: error: package net.bytebuddy.description.method does not exist
import net.bytebuddy.description.method.MethodDescription;
                                       ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:31: error: package net.bytebuddy.description.modifier does not exist
import net.bytebuddy.description.modifier.Visibility;
                                         ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:32: error: package net.bytebuddy.dynamic.scaffold does not exist
import net.bytebuddy.dynamic.scaffold.TypeValidation;
                                     ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:33: error: package net.bytebuddy.implementation does not exist
import net.bytebuddy.implementation.FieldAccessor;
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:34: error: package net.bytebuddy.implementation does not exist
import net.bytebuddy.implementation.Implementation;
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:35: error: package net.bytebuddy.implementation does not exist
import net.bytebuddy.implementation.MethodDelegation;
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:36: error: package net.bytebuddy.implementation.auxiliary does not exist
import net.bytebuddy.implementation.auxiliary.AuxiliaryType;
                                             ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:37: error: package net.bytebuddy.matcher.ElementMatcher does not exist
import net.bytebuddy.matcher.ElementMatcher.Junction;
                                           ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:38: error: package net.bytebuddy.matcher does not exist
import net.bytebuddy.matcher.ElementMatchers;
                            ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:42: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST = methodsNamed("extracting").or(named("filteredOn"))
                       ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:42: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST = methodsNamed("extracting").or(named("filteredOn"))
                                ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:60: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_NOT_TO_PROXY = methodsNamed("as").or(named("clone"))
                       ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:60: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_NOT_TO_PROXY = methodsNamed("as").or(named("clone"))
                                ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:83: error: cannot find symbol
  private static final ByteBuddy BYTE_BUDDY = new ByteBuddy().with(new AuxiliaryType.NamingStrategy.SuffixingRandom("AssertJ$SoftProxies"))
                       ^
  symbol:   class ByteBuddy
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:86: error: cannot find symbol
  private static final Implementation PROXIFY_METHOD_CHANGING_THE_OBJECT_UNDER_TEST = MethodDelegation.to(ProxifyMethodChangingTheObjectUnderTest.class);
                       ^
  symbol:   class Implementation
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:87: error: cannot find symbol
  private static final Implementation ERROR_COLLECTOR = MethodDelegation.to(ErrorCollector.class);
                       ^
  symbol:   class Implementation
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:89: error: cannot find symbol
  private static final TypeCache<TypeCache.SimpleKey> CACHE = new TypeCache.WithInlineExpunction<>(Sort.SOFT);
                       ^
  symbol:   class TypeCache
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:89: error: package TypeCache does not exist
  private static final TypeCache<TypeCache.SimpleKey> CACHE = new TypeCache.WithInlineExpunction<>(Sort.SOFT);
                                          ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:22: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.FieldValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:23: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.RuntimeType;
                                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:24: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.StubValue;
                                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:25: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperCall;
                                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:26: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.SuperMethod;
                                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:27: error: package net.bytebuddy.implementation.bind.annotation does not exist
import net.bytebuddy.implementation.bind.annotation.This;
                                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:186: error: cannot find symbol
  private static Junction<MethodDescription> methodsNamed(String name) {
                 ^
  symbol:   class Junction
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:186: error: cannot find symbol
  private static Junction<MethodDescription> methodsNamed(String name) {
                          ^
  symbol:   class MethodDescription
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:36: error: cannot find symbol
  static ClassLoadingStrategy<ClassLoader> classLoadingStrategy(Class<?> assertClass) {
         ^
  symbol:   class ClassLoadingStrategy
  location: class ClassLoadingStrategyFactory
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:52: error: cannot find symbol
  public static Object intercept(@FieldValue(FIELD_NAME) ErrorCollector errorCollector,
                                  ^
  symbol:   class FieldValue
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:53: error: cannot find symbol
                                 @This Object assertion,
                                  ^
  symbol:   class This
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:54: error: cannot find symbol
                                 @SuperCall Callable<?> proxy,
                                  ^
  symbol:   class SuperCall
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:55: error: cannot find symbol
                                 @SuperMethod(nullIfImpossible = true) Method method,
                                  ^
  symbol:   class SuperMethod
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:56: error: cannot find symbol
                                 @StubValue Object stub) throws Exception {
                                  ^
  symbol:   class StubValue
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ErrorCollector.java:51: error: cannot find symbol
  @RuntimeType
   ^
  symbol:   class RuntimeType
  location: class ErrorCollector
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:85: error: incompatible types: Class<GenericComparableAssert> cannot be converted to Class<AbstractComparableAssert<?,T>>
        return this.proxy((Class<AbstractComparableAssert<?, T>>)GenericComparableAssert.class, Comparable.class, actual);
                                                                                        ^
  where T is a type-variable:
    T extends Comparable<? super T> declared in method <T>assertThat(T)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:89: error: incompatible types: Class<ProxyableIterableAssert> cannot be converted to Class<ProxyableIterableAssert<T>>
        return this.proxy((Class<ProxyableIterableAssert<T>>)ProxyableIterableAssert.class, Iterable.class, actual);
                                                                                    ^
  where T is a type-variable:
    T extends Object declared in method <T>assertThat(Iterable<? extends T>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:93: error: incompatible types: Class<IteratorAssert> cannot be converted to Class<IteratorAssert<T>>
        return this.proxy((Class<IteratorAssert<T>>)IteratorAssert.class, Iterator.class, actual);
                                                                  ^
  where T is a type-variable:
    T extends Object declared in method <T>assertThat(Iterator<? extends T>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:113: error: incompatible types: Class<FutureAssert> cannot be converted to Class<FutureAssert<RESULT>>
        return this.proxy((Class<FutureAssert<RESULT>>)FutureAssert.class, Future.class, actual);
                                                                   ^
  where RESULT is a type-variable:
    RESULT extends Object declared in method <RESULT>assertThat(Future<RESULT>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:145: error: incompatible types: Class<ProxyableListAssert> cannot be converted to Class<ProxyableListAssert<T>>
        return this.proxy((Class<ProxyableListAssert<T>>)ProxyableListAssert.class, List.class, actual);
                                                                            ^
  where T is a type-variable:
    T extends Object declared in method <T>assertThat(List<? extends T>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:161: error: incompatible types: Class<ProxyableObjectAssert> cannot be converted to Class<ProxyableObjectAssert<T>>
        return this.proxy((Class<ProxyableObjectAssert<T>>)ProxyableObjectAssert.class, Object.class, actual);
                                                                                ^
  where T is a type-variable:
    T extends Object declared in method <T>assertThat(T)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:165: error: incompatible types: Class<ProxyableObjectArrayAssert> cannot be converted to Class<ProxyableObjectArrayAssert<T>>
        return this.proxy((Class<ProxyableObjectArrayAssert<T>>)ProxyableObjectArrayAssert.class, Object[].class, actual);
                                                                                          ^
  where T is a type-variable:
    T extends Object declared in method <T>assertThat(T[])
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:169: error: incompatible types: Class<ProxyableMapAssert> cannot be converted to Class<ProxyableMapAssert<K,V>>
        return this.proxy((Class<ProxyableMapAssert<K, V>>)ProxyableMapAssert.class, Map.class, actual);
                                                                             ^
  where K,V are type-variables:
    K extends Object declared in method <K,V>assertThat(Map<K,V>)
    V extends Object declared in method <K,V>assertThat(Map<K,V>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:217: error: incompatible types: Class<AtomicIntegerFieldUpdaterAssert> cannot be converted to Class<AtomicIntegerFieldUpdaterAssert<OBJECT>>
        return this.proxy((Class<AtomicIntegerFieldUpdaterAssert<OBJECT>>)AtomicIntegerFieldUpdaterAssert.class, AtomicIntegerFieldUpdater.class, actual);
                                                                                                         ^
  where OBJECT is a type-variable:
    OBJECT extends Object declared in method <OBJECT>assertThat(AtomicIntegerFieldUpdater<OBJECT>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:229: error: incompatible types: Class<AtomicLongFieldUpdaterAssert> cannot be converted to Class<AtomicLongFieldUpdaterAssert<OBJECT>>
        return this.proxy((Class<AtomicLongFieldUpdaterAssert<OBJECT>>)AtomicLongFieldUpdaterAssert.class, AtomicLongFieldUpdater.class, actual);
                                                                                                   ^
  where OBJECT is a type-variable:
    OBJECT extends Object declared in method <OBJECT>assertThat(AtomicLongFieldUpdater<OBJECT>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:233: error: incompatible types: Class<AtomicReferenceAssert> cannot be converted to Class<AtomicReferenceAssert<VALUE>>
        return this.proxy((Class<AtomicReferenceAssert<VALUE>>)AtomicReferenceAssert.class, AtomicReference.class, actual);
                                                                                    ^
  where VALUE is a type-variable:
    VALUE extends Object declared in method <VALUE>assertThat(AtomicReference<VALUE>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:237: error: incompatible types: Class<AtomicReferenceArrayAssert> cannot be converted to Class<AtomicReferenceArrayAssert<ELEMENT>>
        return this.proxy((Class<AtomicReferenceArrayAssert<ELEMENT>>)AtomicReferenceArrayAssert.class, AtomicReferenceArray.class, actual);
                                                                                                ^
  where ELEMENT is a type-variable:
    ELEMENT extends Object declared in method <ELEMENT>assertThat(AtomicReferenceArray<ELEMENT>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:241: error: incompatible types: Class<AtomicReferenceFieldUpdaterAssert> cannot be converted to Class<AtomicReferenceFieldUpdaterAssert<FIELD,OBJECT>>
        return this.proxy((Class<AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>>)AtomicReferenceFieldUpdaterAssert.class, AtomicReferenceFieldUpdater.class, actual);
                                                                                                                    ^
  where FIELD,OBJECT are type-variables:
    FIELD extends Object declared in method <FIELD,OBJECT>assertThat(AtomicReferenceFieldUpdater<OBJECT,FIELD>)
    OBJECT extends Object declared in method <FIELD,OBJECT>assertThat(AtomicReferenceFieldUpdater<OBJECT,FIELD>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:245: error: incompatible types: Class<AtomicMarkableReferenceAssert> cannot be converted to Class<AtomicMarkableReferenceAssert<VALUE>>
        return this.proxy((Class<AtomicMarkableReferenceAssert<VALUE>>)AtomicMarkableReferenceAssert.class, AtomicMarkableReference.class, actual);
                                                                                                    ^
  where VALUE is a type-variable:
    VALUE extends Object declared in method <VALUE>assertThat(AtomicMarkableReference<VALUE>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:249: error: incompatible types: Class<AtomicStampedReferenceAssert> cannot be converted to Class<AtomicStampedReferenceAssert<VALUE>>
        return this.proxy((Class<AtomicStampedReferenceAssert<VALUE>>)AtomicStampedReferenceAssert.class, AtomicStampedReference.class, actual);
                                                                                                  ^
  where VALUE is a type-variable:
    VALUE extends Object declared in method <VALUE>assertThat(AtomicStampedReference<VALUE>)
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:258: error: cannot find symbol
        return ((AbstractThrowableAssert<AbstractThrowableAssert<?, ? extends Throwable>, ACTUAL>)this.assertThat(Assertions.catchThrowable(shouldRaiseThrowable))).hasBeenThrown();
                                                                                          ^
  symbol:   class ACTUAL
  location: class Java6AbstractStandardSoftAssertions
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:258: error: incompatible types: ThrowableAssert cannot be converted to AbstractThrowableAssert<AbstractThrowableAssert<?,? extends Throwable>,ACTUAL>
        return ((AbstractThrowableAssert<AbstractThrowableAssert<?, ? extends Throwable>, ACTUAL>)this.assertThat(Assertions.catchThrowable(shouldRaiseThrowable))).hasBeenThrown();
                                                                                                                 ^
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:263: error: cannot find symbol
        return ((AbstractThrowableAssert<AbstractThrowableAssert<?, ? extends Throwable>, ACTUAL>)((AbstractObjectAssert<ThrowableAssert, ACTUAL>)this.assertThat(Assertions.catchThrowable(shouldRaiseThrowable))).as(description, args)).hasBeenThrown();
                                                                                          ^
  symbol:   class ACTUAL
  location: class Java6AbstractStandardSoftAssertions
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:263: error: cannot find symbol
        return ((AbstractThrowableAssert<AbstractThrowableAssert<?, ? extends Throwable>, ACTUAL>)((AbstractObjectAssert<ThrowableAssert, ACTUAL>)this.assertThat(Assertions.catchThrowable(shouldRaiseThrowable))).as(description, args)).hasBeenThrown();
                                                                                                                                          ^
  symbol:   class ACTUAL
  location: class Java6AbstractStandardSoftAssertions
sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java:263: error: incompatible types: ThrowableAssert cannot be converted to AbstractThrowableAssert<AbstractThrowableAssert<?,? extends Throwable>,ACTUAL>
        return ((AbstractThrowableAssert<AbstractThrowableAssert<?, ? extends Throwable>, ACTUAL>)((AbstractObjectAssert<ThrowableAssert, ACTUAL>)this.assertThat(Assertions.catchThrowable(shouldRaiseThrowable))).as(description, args)).hasBeenThrown();
                                                                                                                                                                                                                      ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:37: error: package ClassInjector does not exist
    if (ClassInjector.UsingReflection.isAvailable()) {
                     ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:38: error: package ClassLoadingStrategy does not exist
      return ClassLoadingStrategy.Default.INJECTION;
                                 ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:39: error: package ClassInjector does not exist
    } else if (ClassInjector.UsingLookup.isAvailable()) {
                            ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/ClassLoadingStrategyFactory.java:41: error: package ClassLoadingStrategy does not exist
        return ClassLoadingStrategy.UsingLookup.of(PRIVATE_LOOKUP_IN.invoke(null, assertClass, LOOKUP));
                                   ^
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:42: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_CHANGING_THE_OBJECT_UNDER_TEST = methodsNamed("extracting").or(named("filteredOn"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:43: error: cannot find symbol
                                                                                                                      .or(named("filteredOnNull"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:44: error: cannot find symbol
                                                                                                                      .or(named("filteredOnAssertions"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:45: error: cannot find symbol
                                                                                                                      .or(named("map"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:46: error: cannot find symbol
                                                                                                                      .or(named("asString"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:47: error: cannot find symbol
                                                                                                                      .or(named("asList"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:48: error: cannot find symbol
                                                                                                                      .or(named("size"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:49: error: cannot find symbol
                                                                                                                      .or(named("toAssert"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:50: error: cannot find symbol
                                                                                                                      .or(named("flatMap"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:51: error: cannot find symbol
                                                                                                                      .or(named("extractingResultOf"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:52: error: cannot find symbol
                                                                                                                      .or(named("flatExtracting"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:53: error: cannot find symbol
                                                                                                                      .or(named("usingRecursiveComparison"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:54: error: cannot find symbol
                                                                                                                      .or(named("extractingByKey"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:55: error: cannot find symbol
                                                                                                                      .or(named("extractingByKeys"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:56: error: cannot find symbol
                                                                                                                      .or(named("extractingFromEntries"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:57: error: cannot find symbol
                                                                                                                      .or(named("get"))
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:58: error: cannot find symbol
                                                                                                                      .or(named("asInstanceOf"));
                                                                                                                          ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:60: error: cannot find symbol
  private static final Junction<MethodDescription> METHODS_NOT_TO_PROXY = methodsNamed("as").or(named("clone"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:61: error: cannot find symbol
                                                                                            .or(named("describedAs"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:62: error: cannot find symbol
                                                                                            .or(named("descriptionText"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:63: error: cannot find symbol
                                                                                            .or(named("getWritableAssertionInfo"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:64: error: cannot find symbol
                                                                                            .or(named("inBinary"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:65: error: cannot find symbol
                                                                                            .or(named("inHexadecimal"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:66: error: cannot find symbol
                                                                                            .or(named("newAbstractIterableAssert"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:67: error: cannot find symbol
                                                                                            .or(named("newObjectArrayAssert"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:68: error: cannot find symbol
                                                                                            .or(named("removeCustomAssertRelatedElementsFromStackTraceIfNeeded"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:69: error: cannot find symbol
                                                                                            .or(named("overridingErrorMessage"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:70: error: cannot find symbol
                                                                                            .or(named("usingComparator"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:71: error: cannot find symbol
                                                                                            .or(named("usingDefaultComparator"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:72: error: cannot find symbol
                                                                                            .or(named("usingElementComparator"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
sources/structure/org.assertj/assertj-core/3.14.0/extractedSources/org/assertj/core/api/SoftProxies.java:73: error: cannot find symbol
                                                                                            .or(named("withComparatorsForElementPropertyOrFieldNames"))
                                                                                                ^
  symbol:   method named(String)
  location: class SoftProxies
Note: sources/structure/org.assertj/assertj-core/3.14.0/Decompiled/org/assertj/core/api/Java6AbstractStandardSoftAssertions.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
100 errors
