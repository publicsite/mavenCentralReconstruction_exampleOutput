sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/apache/bcel/ExceptionConstants.java:45: error: initializers not allowed in interfaces
    default static {
                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ModifiersPattern.java:78: error: incompatible types: Object cannot be converted to Integer
        final Integer flag2 = ModifiersPattern.modifierFlags.get(name);
                                                                ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:107: error: incompatible types: Object cannot be converted to String
                    for (final String k : keys) {
                                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:108: error: incompatible types: Object cannot be converted to String
                        final String v = this.annotationValues.get(k);
                                                                  ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:141: error: incompatible types: Object cannot be converted to String
                            for (final String j : keys2) {
                                                  ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:142: error: incompatible types: Object cannot be converted to String
                                final String v2 = this.annotationValues.get(j);
                                                                           ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:260: error: incompatible types: Object cannot be converted to UnresolvedType
                newAnnotationType = typeVariableMap.get(key);
                                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:310: error: incompatible types: Object cannot be converted to String
            for (final String k : key) {
                                  ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactAnnotationTypePattern.java:312: error: incompatible types: Object cannot be converted to String
                s.writeUTF(this.annotationValues.get(k));
                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/BindingAnnotationTypePattern.java:69: error: incompatible types: Object cannot be converted to UnresolvedType
                newAnnotationType = typeVariableMap.get(key);
                                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildAnnotationTypePattern.java:63: error: incompatible types: Object cannot be converted to String
        for (final String k : keys) {
                              ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildAnnotationTypePattern.java:64: error: incompatible types: Object cannot be converted to String
            String v = this.annotationValues.get(k);
                                                ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildAnnotationTypePattern.java:259: error: incompatible types: Object cannot be converted to String
            for (final String k : key) {
                                  ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildAnnotationTypePattern.java:261: error: incompatible types: Object cannot be converted to String
                s.writeUTF(this.annotationValues.get(k));
                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/AnnotationPatternList.java:44: error: no suitable constructor found for AnnotationPatternList(Object[])
        this(l.toArray(new AnnotationTypePattern[l.size()]));
        ^
    constructor AnnotationPatternList.AnnotationPatternList(AnnotationTypePattern[]) is not applicable
      (argument mismatch; Object[] cannot be converted to AnnotationTypePattern[])
    constructor AnnotationPatternList.AnnotationPatternList(List) is not applicable
      (argument mismatch; Object[] cannot be converted to List)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/TypePattern.java:141: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType superType = i.next();
                                                 ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/TypePattern.java:155: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType superSuperType = i.next();
                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ExactTypePattern.java:210: error: incompatible types: Object cannot be converted to UnresolvedType
                newType = typeVariableMap.get(key);
                                             ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:67: error: no suitable constructor found for WildTypePattern(Object[],boolean,int,boolean,TypePatternList)
        this(names.toArray(new NamePattern[names.size()]), includeSubtypes, dim, false, TypePatternList.EMPTY);
        ^
    constructor WildTypePattern.WildTypePattern(NamePattern[],boolean,int,boolean,TypePatternList) is not applicable
      (argument mismatch; Object[] cannot be converted to NamePattern[])
    constructor WildTypePattern.WildTypePattern(List,boolean,int,int,boolean) is not applicable
      (argument mismatch; Object[] cannot be converted to List)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:82: error: no suitable constructor found for WildTypePattern(Object[],boolean,int,boolean,TypePatternList)
        this(names.toArray(new NamePattern[names.size()]), includeSubtypes, dim, isVarArg, typeParams);
        ^
    constructor WildTypePattern.WildTypePattern(NamePattern[],boolean,int,boolean,TypePatternList) is not applicable
      (argument mismatch; Object[] cannot be converted to NamePattern[])
    constructor WildTypePattern.WildTypePattern(List,boolean,int,int,boolean) is not applicable
      (argument mismatch; Object[] cannot be converted to List)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:90: error: no suitable constructor found for WildTypePattern(Object[],boolean,int,boolean,TypePatternList)
        this(names.toArray(new NamePattern[names.size()]), includeSubtypes, dim, isVarArg, typeParams);
        ^
    constructor WildTypePattern.WildTypePattern(NamePattern[],boolean,int,boolean,TypePatternList) is not applicable
      (argument mismatch; Object[] cannot be converted to NamePattern[])
    constructor WildTypePattern.WildTypePattern(List,boolean,int,int,boolean) is not applicable
      (argument mismatch; Object[] cannot be converted to List)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:152: error: incompatible types: Object[] cannot be converted to char[][]
        return ret.toArray(new char[ret.size()][]);
                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:279: error: no suitable method found for matches(Object)
                if (!this.namePatterns[patternsIndex++].matches(ret.get(namesIndex++))) {
                                                       ^
    method NamePattern.matches(char[]) is not applicable
      (argument mismatch; Object cannot be converted to char[])
    method NamePattern.matches(String) is not applicable
      (argument mismatch; Object cannot be converted to String)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:287: error: incompatible types: Object[] cannot be converted to char[][]
                final boolean b = outOfStar(this.namePatterns, ret.toArray(new char[ret.size()][]), 0, 0, patternsLength - this.ellipsisCount, namesLength, this.ellipsisCount);
                                                                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:299: error: no suitable method found for matches(Object)
                    if (!p.matches(ret.get(namesIndex++))) {
                          ^
    method NamePattern.matches(char[]) is not applicable
      (argument mismatch; Object cannot be converted to char[])
    method NamePattern.matches(String) is not applicable
      (argument mismatch; Object cannot be converted to String)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:414: error: cannot find symbol
                final String newName = typeVariableMap.get(simpleName).getName().replace('$', '.');
                                                                      ^
  symbol:   method getName()
  location: class Object
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/WildTypePattern.java:799: error: incompatible types: Object[] cannot be converted to String[]
        return ret.toArray(new String[ret.size()]);
                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/TypePatternList.java:46: error: no suitable constructor found for TypePatternList(Object[])
        this(l.toArray(new TypePattern[l.size()]));
        ^
    constructor TypePatternList.TypePatternList(TypePattern[]) is not applicable
      (argument mismatch; Object[] cannot be converted to TypePattern[])
    constructor TypePatternList.TypePatternList(List) is not applicable
      (argument mismatch; Object[] cannot be converted to List)
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/HasMemberTypePattern.java:46: error: incompatible types: Object cannot be converted to Member
            final Member field = iter.next();
                                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/HasMemberTypePattern.java:65: error: incompatible types: Object cannot be converted to Member
            final Member method = iter.next();
                                           ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/HasMemberTypePattern.java:78: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
        for (final ConcreteTypeMunger munger : mungers) {
                                               ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ConcreteCflowPointcut.java:55: error: incompatible types: Object cannot be converted to Slot
            for (final Slot slot : this.slots) {
                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ConcreteCflowPointcut.java:74: error: cannot find symbol
            indices[i] = this.slots.get(i).formalIndex;
                                          ^
  symbol:   variable formalIndex
  location: class Object
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/ConcreteCflowPointcut.java:114: error: incompatible types: Object cannot be converted to Slot
            for (final Slot slot : this.slots) {
                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/IfPointcut.java:201: error: incompatible types: Object[] cannot be converted to Expr[]
            ret = Test.makeAnd(ret, Test.makeCall(this.testMethod, args.toArray(new Expr[args.size()])));
                                                                               ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/IfPointcut.java:229: error: incompatible types: Object cannot be converted to ResolvedMember
                    final ResolvedMember method = memberIter.next();
                                                                 ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/AnnotationPointcut.java:95: error: incompatible types: Object cannot be converted to BcelTypeMunger
                    for (final BcelTypeMunger typeMunger : mungers) {
                                                           ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/DeclareAnnotation.java:244: error: incompatible types: Object cannot be converted to ResolvedMember
            final ResolvedMember member = iter.next();
                                                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/DeclareParents.java:233: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType supertype = iter.next();
                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/SignaturePattern.java:116: error: incompatible types: Object cannot be converted to PatternNode
                for (final PatternNode node : keys) {
                                              ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/SignaturePattern.java:117: error: incompatible types: Object cannot be converted to AnnotationTargetKind[]
                    final AnnotationTargetKind[] targetKinds2 = visitor.getIncorrectTargetKinds().get(node);
                                                                                                     ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/SignaturePattern.java:172: error: incompatible types: Object cannot be converted to JoinPointSignature
            final JoinPointSignature aSig = candidateMatches.next();
                                                                 ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/SignaturePattern.java:315: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            for (final ConcreteTypeMunger typeMunger : mungers) {
                                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/patterns/SignaturePattern.java:351: error: incompatible types: Object cannot be converted to ResolvedType
        for (final ResolvedType type : declaringTypes) {
                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:183: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            for (final ConcreteTypeMunger tm : this.interTypeMungers) {
                                                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:201: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
                final ConcreteTypeMunger munger = rtx.interTypeMungers.get(k);
                                                                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:238: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            for (final ConcreteTypeMunger tm : this.interTypeMungers) {
                                                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:249: error: incompatible types: Object cannot be converted to ResolvedMember
            final ResolvedMember f = i.next();
                                           ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:283: error: incompatible types: Object cannot be converted to ResolvedMemberImpl
            final ResolvedMemberImpl candidate = toSearch.next();
                                                              ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:365: error: incompatible types: Object cannot be converted to ResolvedPointcutDefinition
            final ResolvedPointcutDefinition f = i.next();
                                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:401: error: incompatible types: Object cannot be converted to ResolvedType
                final ResolvedType ty = typeIterator.next();
                                                         ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:402: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
                for (final ConcreteTypeMunger dec : ty.getTypeMungers()) {
                                                                     ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:424: error: incompatible types: Object cannot be converted to ResolvedType
                final ResolvedType ty = typeIterator.next();
                                                         ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:425: error: incompatible types: Object cannot be converted to Declare
                for (final Declare dec : ty.getDeclares()) {
                                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:454: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType ty = typeIterator.next();
                                                     ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:576: error: incompatible types: Object cannot be converted to UnresolvedType
                                    newPTypes[j] = typeVariableMap.get(tvrt.getTypeVariable().getName());
                                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:611: error: incompatible types: Object[] cannot be converted to ShadowMunger[]
        return l.toArray(new ShadowMunger[l.size()]);
                        ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:621: error: incompatible types: Object[] cannot be converted to ResolvedMember[]
        return l.toArray(new ResolvedMember[l.size()]);
                        ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:649: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            for (final ConcreteTypeMunger tm : this.interTypeMungers) {
                                                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:712: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
        for (final ConcreteTypeMunger element : this.interTypeMungers) {
                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:735: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType superType = iter.next();
                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:744: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType superType = iter.next();
                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:753: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            final ConcreteTypeMunger superMunger = iter2.next();
                                                             ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:760: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            for (final ConcreteTypeMunger myMunger : this.getInterTypeMungers()) {
                                                                             ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:771: error: incompatible types: Object cannot be converted to ResolvedMember
                final ResolvedMember method = iter3.next();
                                                        ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:786: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
        for (final ConcreteTypeMunger munger : this.getInterTypeMungersIncludingSupers()) {
                                                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:792: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
        for (final ConcreteTypeMunger munger : this.getInterTypeMungersIncludingSupers()) {
                                                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:961: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
            final ConcreteTypeMunger existingMunger = i.next();
                                                            ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:992: error: incompatible types: Object cannot be converted to ResolvedMember
            final ResolvedMember existingMember = existingMembers.next();
                                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1020: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
                                final ConcreteTypeMunger ctMunger = iterator.next();
                                                                                 ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1162: error: incompatible types: Object cannot be converted to ConcreteTypeMunger
        for (final ConcreteTypeMunger m : this.interTypeMungers) {
                                              ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1206: error: incompatible types: Object cannot be converted to ResolvedType
            final ResolvedType rtx = i.next();
                                           ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1224: error: incompatible types: Object cannot be converted to ResolvedPointcutDefinition
        for (final ResolvedPointcutDefinition inherited : ret) {
                                                          ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1233: error: incompatible types: Object cannot be converted to ResolvedPointcutDefinition
        for (final ResolvedPointcutDefinition toAdd : added) {
                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1236: error: incompatible types: Object cannot be converted to ResolvedPointcutDefinition
                final ResolvedPointcutDefinition existing = j.next();
                                                                  ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1307: error: incompatible types: Object cannot be converted to UnresolvedType
                final UnresolvedType binding = typeBindings.get(tvrt.getTypeVariable().getName());
                                                               ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/ResolvedType.java:1342: error: incompatible types: Object[] cannot be converted to ResolvedType[]
        return this.parameterizedSuperTypes = accumulatedTypes.toArray(ret);
                                                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:620: error: incompatible types: Object cannot be converted to TypeVariable[]
        return this.workInProgress1.get(baseClass);
                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:842: error: incompatible types: Object cannot be converted to ResolvedType
            return this.tMap.put(key, type);
                                ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:865: error: incompatible types: Object cannot be converted to ResolvedType
            ResolvedType ret = this.tMap.get(key);
                                            ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:868: error: incompatible types: Object cannot be converted to WeakReference
                    final WeakReference ref = this.expendableMap.get(key);
                                                                    ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:875: error: incompatible types: Object cannot be converted to ResolvedType
                        return this.expendableMap.get(key);
                                                     ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:877: error: incompatible types: Object cannot be converted to SoftReference
                    final SoftReference ref2 = this.expendableMap.get(key);
                                                                     ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:879: error: incompatible types: Object cannot be converted to ResolvedType
                        ret = ref2.get();
                                      ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:887: error: incompatible types: Object cannot be converted to ResolvedType
            ResolvedType ret = this.tMap.remove(key);
                                               ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:890: error: incompatible types: Object cannot be converted to WeakReference
                    final WeakReference wref = this.expendableMap.remove(key);
                                                                        ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:896: error: incompatible types: Object cannot be converted to SoftReference
                    final SoftReference wref2 = this.expendableMap.remove(key);
                                                                         ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:898: error: incompatible types: Object cannot be converted to ResolvedType
                        ret = wref2.get();
                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:902: error: incompatible types: Object cannot be converted to ResolvedType
                    ret = this.expendableMap.remove(key);
                                                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:922: error: incompatible types: Object cannot be converted to Entry
            for (final Map.Entry entry : m.entrySet()) {
                                                   ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:963: error: incompatible types: Object[] cannot be converted to ResolvedType[]
            return results.toArray(new ResolvedType[results.size()]);
                                  ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:967: error: incompatible types: Object cannot be converted to String
            for (final String key : map.keySet()) {
                                              ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:1001: error: incompatible types: Object cannot be converted to int
                return this.cachedResults.get(key);
                                             ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:1005: error: incompatible types: Object cannot be converted to DeclarePrecedence
            for (final DeclarePrecedence d : this.world.getCrosscuttingMembersSet().getDeclareDominates()) {
                                                                                                       ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/World.java:1026: error: incompatible types: Object cannot be converted to Integer
            return this.cachedResults.get(new PrecedenceCacheKey(aspect1, aspect2));
                                         ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/Dump.java:192: error: incompatible types: Object cannot be converted to Kind
        for (final IMessage.Kind kind : IMessage.KINDS) {
                                                ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/Dump.java:304: error: incompatible types: Object cannot be converted to String
            for (final String fileName : Dump.savedFullClasspath) {
                                             ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/Dump.java:328: error: incompatible types: Object cannot be converted to IMessage
            for (final IMessage message : messageHolder.getUnmodifiableListView()) {
                                                                               ^
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/Dump.java:375: error: cannot find symbol
        for (final String key : ((Hashtable<Object, V>)props).keySet()) {
                                                    ^
  symbol:   class V
  location: class Dump
sources/structure/org.aspectj/aspectjweaver/1.6.1/Decompiled/org/aspectj/weaver/Dump.java:375: error: incompatible types: Object cannot be converted to String
        for (final String key : ((Hashtable<Object, V>)props).keySet()) {
                                                                    ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
