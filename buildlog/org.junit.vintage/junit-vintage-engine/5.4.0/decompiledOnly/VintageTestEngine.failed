sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/RunnerExecutor.java:17: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.BlacklistedExceptions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:20: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:21: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:16: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.CollectionUtils.getOnlyElement;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:16: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.CollectionUtils.getOnlyElement;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:17: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.FunctionUtils.where;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:17: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.FunctionUtils.where;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:18: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.findMethods;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:18: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.findMethods;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:19: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.StringUtils.isNotBlank;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:19: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.StringUtils.isNotBlank;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:31: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.ReflectionUtils;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/TestRun.java:17: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.CollectionUtils.getOnlyElement;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/TestRun.java:17: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.CollectionUtils.getOnlyElement;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/TestRun.java:37: error: package org.opentest4j does not exist
import org.opentest4j.MultipleFailuresError;
                     ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:37: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(RunnerTestDescriptor.class);
	                     ^
  symbol:   class Logger
  location: class RunnerTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/VintageDiscoverer.java:21: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.ClassFilter;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:13: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.isAbstract;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:13: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.isAbstract;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:14: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.isInnerClass;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:14: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.isInnerClass;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:15: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.isPublic;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:15: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.isPublic;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:24: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:25: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassCollector.java:14: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.FunctionUtils.where;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassCollector.java:14: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.FunctionUtils.where;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DiscoverySelectorResolver.java:21: error: cannot find symbol
	void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector);
	                                             ^
  symbol:   class ClassFilter
  location: interface DiscoverySelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:42: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(TestClassRequestResolver.class);
	                     ^
  symbol:   class Logger
  location: class TestClassRequestResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:15: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.tryToReadFieldValue;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:15: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.tryToReadFieldValue;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:21: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:22: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:31: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(UniqueIdReader.class);
	                     ^
  symbol:   class Logger
  location: class UniqueIdReader
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:20: error: package org.junit.platform.commons does not exist
import org.junit.platform.commons.JUnitException;
                                 ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:21: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.BlacklistedExceptions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/VintageTestEngine.java:59: error: incompatible types: invalid method reference
        map.forEach(runnerExecutor::execute);
                    ^
    incompatible types: Object cannot be converted to RunnerTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/RunnerExecutor.java:43: error: cannot find symbol
			BlacklistedExceptions.rethrowIfBlacklisted(t);
			^
  symbol:   variable BlacklistedExceptions
  location: class RunnerExecutor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:76: error: cannot find symbol
			if (isNotBlank(className)) {
			    ^
  symbol:   method isNotBlank(String)
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:136: error: cannot find symbol
					.map(ReflectionUtils::getAllAssignmentCompatibleClasses)
					     ^
  symbol:   variable ReflectionUtils
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:167: error: cannot find symbol
			List<Method> methods = findMethods(testClass, where(Method::getName, isEqual(methodName)));
			                                              ^
  symbol:   method where(Method::getName,Predicate<Object>)
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:168: error: cannot find symbol
			return (methods.size() == 1) ? MethodSource.from(testClass, getOnlyElement(methods)) : null;
			                                                            ^
  symbol:   method getOnlyElement(List<Method>)
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:37: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(RunnerTestDescriptor.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class RunnerTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/TestRun.java:95: error: cannot find symbol
			return Optional.of(getOnlyElement(descriptors));
			                   ^
  symbol:   method getOnlyElement(List<VintageTestDescriptor>)
  location: class TestRun
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/execution/TestRun.java:166: error: cannot find symbol
		return failed(new MultipleFailuresError("", failures));
		                  ^
  symbol:   class MultipleFailuresError
  location: class TestRun
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ClasspathRootSelectorResolver.java:13: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.findAllClassesInClasspathRoot;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ClasspathRootSelectorResolver.java:13: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.findAllClassesInClasspathRoot;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ClasspathRootSelectorResolver.java:27: error: cannot find symbol
	public void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector) {
	                                                    ^
  symbol:   class ClassFilter
  location: class ClasspathRootSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ModuleNameSelectorResolver.java:13: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.findAllClassesInModule;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ModuleNameSelectorResolver.java:13: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.findAllClassesInModule;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ModuleNameSelectorResolver.java:27: error: cannot find symbol
	public void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector) {
	                                                    ^
  symbol:   class ClassFilter
  location: class ModuleNameSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/PackageNameSelectorResolver.java:13: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.findAllClassesInPackage;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/PackageNameSelectorResolver.java:13: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.findAllClassesInPackage;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/PackageNameSelectorResolver.java:27: error: cannot find symbol
	public void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector) {
	                                                    ^
  symbol:   class ClassFilter
  location: class PackageNameSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ClassSelectorResolver.java:23: error: cannot find symbol
	public void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector) {
	                                                    ^
  symbol:   class ClassFilter
  location: class ClassSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/MethodSelectorResolver.java:29: error: cannot find symbol
	public void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector) {
	                                                    ^
  symbol:   class ClassFilter
  location: class MethodSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/MethodSelectorResolver.java:33: error: cannot find symbol
	private void resolve(MethodSelector selector, ClassFilter classFilter, TestClassCollector collector) {
	                                              ^
  symbol:   class ClassFilter
  location: class MethodSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:19: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:20: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:22: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.ReflectionUtils;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:33: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(UniqueIdSelectorResolver.class);
	                     ^
  symbol:   class Logger
  location: class UniqueIdSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:36: error: cannot find symbol
	public void resolve(EngineDiscoveryRequest request, ClassFilter classFilter, TestClassCollector collector) {
	                                                    ^
  symbol:   class ClassFilter
  location: class UniqueIdSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:63: error: cannot find symbol
	private void resolveIntoFilteredTestClass(UniqueId uniqueId, ClassFilter classFilter,
	                                                             ^
  symbol:   class ClassFilter
  location: class UniqueIdSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/VintageDiscoverer.java:61: error: cannot find symbol
		ClassFilter classFilter = ClassFilter.of(buildClassNamePredicate(discoveryRequest), isPotentialJUnit4TestClass);
		^
  symbol:   class ClassFilter
  location: class VintageDiscoverer
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/VintageDiscoverer.java:61: error: cannot find symbol
		ClassFilter classFilter = ClassFilter.of(buildClassNamePredicate(discoveryRequest), isPotentialJUnit4TestClass);
		                          ^
  symbol:   variable ClassFilter
  location: class VintageDiscoverer
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:27: error: cannot find symbol
		if (!isPublic(candidate)) {
		     ^
  symbol:   method isPublic(Class<CAP#1>)
  location: class IsPotentialJUnit4TestClass
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:30: error: cannot find symbol
		if (isAbstract(candidate)) {
		    ^
  symbol:   method isAbstract(Class<CAP#1>)
  location: class IsPotentialJUnit4TestClass
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IsPotentialJUnit4TestClass.java:33: error: cannot find symbol
		if (isInnerClass(candidate)) {
		    ^
  symbol:   method isInnerClass(Class<CAP#1>)
  location: class IsPotentialJUnit4TestClass
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:42: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(TestClassRequestResolver.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class TestClassRequestResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:22: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:23: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:24: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.ReflectionUtils;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:41: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(DefensiveAllDefaultPossibilitiesBuilder.class);
	                     ^
  symbol:   class Logger
  location: class DefensiveAllDefaultPossibilitiesBuilder
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/OrFilter.java:17: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.Preconditions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/TestClassCollector.java:53: error: cannot find symbol
				.filter(where(Entry::getKey, testClass -> !completeTestClasses.contains(testClass)))
				        ^
  symbol:   method where(Entry::getKey,(testClass[...]lass))
  location: class TestClassCollector
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:31: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(UniqueIdReader.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class UniqueIdReader
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:47: error: cannot find symbol
		return tryToReadFieldValue(Description.class, fieldName, description)
		       ^
  symbol:   method tryToReadFieldValue(Class<Description>,String,Description)
  location: class UniqueIdReader
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:39: error: cannot find symbol
			throw new JUnitException("Unsupported version of junit:junit: " + versionString
			          ^
  symbol:   class JUnitException
  location: class JUnit4VersionCheck
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:52: error: cannot find symbol
			throw new JUnitException("Failed to parse version of junit:junit: " + versionString, e);
			          ^
  symbol:   class JUnitException
  location: class JUnit4VersionCheck
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:54: error: cannot find symbol
		throw new JUnitException("Failed to parse version of junit:junit: " + versionString);
		          ^
  symbol:   class JUnitException
  location: class JUnit4VersionCheck
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:62: error: cannot find symbol
			BlacklistedExceptions.rethrowIfBlacklisted(t);
			^
  symbol:   variable BlacklistedExceptions
  location: class JUnit4VersionCheck
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/JUnit4VersionCheck.java:63: error: cannot find symbol
			throw new JUnitException("Failed to read version of junit:junit", t);
			          ^
  symbol:   class JUnitException
  location: class JUnit4VersionCheck
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ClasspathRootSelectorResolver.java:33: error: incompatible types: cannot infer type-variable(s) R
			.flatMap(Collection::stream)
			        ^
    (argument mismatch; invalid method reference
      method stream in interface Collection<E> cannot be applied to given types
        required: no arguments
        found: Object
        reason: actual and formal argument lists differ in length)
  where R,T,E are type-variables:
    R extends Object declared in method <R>flatMap(Function<? super T,? extends Stream<? extends R>>)
    T extends Object declared in interface Stream
    E extends Object declared in interface Collection
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/ModuleNameSelectorResolver.java:33: error: incompatible types: cannot infer type-variable(s) R
			.flatMap(Collection::stream)
			        ^
    (argument mismatch; invalid method reference
      method stream in interface Collection<E> cannot be applied to given types
        required: no arguments
        found: Object
        reason: actual and formal argument lists differ in length)
  where R,T,E are type-variables:
    R extends Object declared in method <R>flatMap(Function<? super T,? extends Stream<? extends R>>)
    T extends Object declared in interface Stream
    E extends Object declared in interface Collection
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/PackageNameSelectorResolver.java:33: error: incompatible types: cannot infer type-variable(s) R
			.flatMap(Collection::stream)
			        ^
    (argument mismatch; invalid method reference
      method stream in interface Collection<E> cannot be applied to given types
        required: no arguments
        found: Object
        reason: actual and formal argument lists differ in length)
  where R,T,E are type-variables:
    R extends Object declared in method <R>flatMap(Function<? super T,? extends Stream<? extends R>>)
    T extends Object declared in interface Stream
    E extends Object declared in interface Collection
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:33: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(UniqueIdSelectorResolver.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class UniqueIdSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/UniqueIdSelectorResolver.java:75: error: cannot find symbol
		return ReflectionUtils.tryToLoadClass(className)
		       ^
  symbol:   variable ReflectionUtils
  location: class UniqueIdSelectorResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:41: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(DefensiveAllDefaultPossibilitiesBuilder.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class DefensiveAllDefaultPossibilitiesBuilder
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/FilterableIgnoringRunnerDecorator.java:13: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.Preconditions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IgnoringRunnerDecorator.java:13: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.Preconditions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:134: error: cannot find symbol
			return ReflectionUtils.isMethodPresent(testClass, isPotentialJUnit4TestMethod);
			       ^
  symbol:   variable ReflectionUtils
  location: class DefensiveJUnit4Builder
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/OrFilter.java:29: error: cannot find symbol
		this.filters = Preconditions.notEmpty(filters, "filters must not be empty");
		               ^
  symbol:   variable Preconditions
  location: class OrFilter
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IgnoringRunnerDecorator.java:31: error: cannot find symbol
		this.runner = Preconditions.notNull(runner, "Runner must not be null");
		              ^
  symbol:   variable Preconditions
  location: class IgnoringRunnerDecorator
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/FilterableIgnoringRunnerDecorator.java:28: error: cannot find symbol
		Preconditions.condition(runner instanceof Filterable,
		^
  symbol:   variable Preconditions
  location: class FilterableIgnoringRunnerDecorator
Note: sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/VintageTestEngine.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
94 errors
