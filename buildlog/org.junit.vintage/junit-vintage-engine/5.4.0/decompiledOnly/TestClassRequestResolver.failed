sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:7: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:30: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:34: error: cannot find symbol
    private static final Logger logger;
                         ^
  symbol:   class Logger
  location: class TestClassRequestResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:15: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.tryToReadFieldValue;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:15: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.tryToReadFieldValue;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:21: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:22: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:20: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:21: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:16: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.CollectionUtils.getOnlyElement;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:16: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.CollectionUtils.getOnlyElement;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:17: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.FunctionUtils.where;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:17: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.FunctionUtils.where;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:18: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.ReflectionUtils.findMethods;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:18: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.ReflectionUtils.findMethods;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:19: error: package org.junit.platform.commons.util does not exist
import static org.junit.platform.commons.util.StringUtils.isNotBlank;
                                             ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:19: error: static import only from classes and interfaces
import static org.junit.platform.commons.util.StringUtils.isNotBlank;
^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:31: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.ReflectionUtils;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:37: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(RunnerTestDescriptor.class);
	                     ^
  symbol:   class Logger
  location: class RunnerTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:31: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(UniqueIdReader.class);
	                     ^
  symbol:   class Logger
  location: class UniqueIdReader
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/OrFilter.java:17: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.Preconditions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:83: error: cannot find symbol
        final Map<String, List<Description>> childrenByUniqueId = children.stream().collect((Collector<? super Object, ?, Map<String, List<Description>>>)Collectors.groupingBy(((Function<? super Object, Object>)this.uniqueIdReader).andThen((Function<? super Object, ?>)this.uniqueIdStringifier), (Supplier<R>)LinkedHashMap::new, (Collector<? super Object, ?, Object>)Collectors.toCollection((Supplier<D>)ArrayList::new)));
                                                                                                                                                                                                                                                                                                                  ^
  symbol:   class R
  location: class TestClassRequestResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:83: error: cannot find symbol
        final Map<String, List<Description>> childrenByUniqueId = children.stream().collect((Collector<? super Object, ?, Map<String, List<Description>>>)Collectors.groupingBy(((Function<? super Object, Object>)this.uniqueIdReader).andThen((Function<? super Object, ?>)this.uniqueIdStringifier), (Supplier<R>)LinkedHashMap::new, (Collector<? super Object, ?, Object>)Collectors.toCollection((Supplier<D>)ArrayList::new)));
                                                                                                                                                                                                                                                                                                                                                                                                                 ^
  symbol:   class D
  location: class TestClassRequestResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:83: error: incompatible types: UniqueIdStringifier cannot be converted to Function<? super Object,?>
        final Map<String, List<Description>> childrenByUniqueId = children.stream().collect((Collector<? super Object, ?, Map<String, List<Description>>>)Collectors.groupingBy(((Function<? super Object, Object>)this.uniqueIdReader).andThen((Function<? super Object, ?>)this.uniqueIdStringifier), (Supplier<R>)LinkedHashMap::new, (Collector<? super Object, ?, Object>)Collectors.toCollection((Supplier<D>)ArrayList::new)));
                                                                                                                                                                                                                                                                                 ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:83: error: incompatible types: UniqueIdReader cannot be converted to Function<? super Object,Object>
        final Map<String, List<Description>> childrenByUniqueId = children.stream().collect((Collector<? super Object, ?, Map<String, List<Description>>>)Collectors.groupingBy(((Function<? super Object, Object>)this.uniqueIdReader).andThen((Function<? super Object, ?>)this.uniqueIdStringifier), (Supplier<R>)LinkedHashMap::new, (Collector<? super Object, ?, Object>)Collectors.toCollection((Supplier<D>)ArrayList::new)));
                                                                                                                                                                                                                       ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/Decompiled/org/junit/vintage/engine/discovery/TestClassRequestResolver.java:107: error: cannot find symbol
        logger = LoggerFactory.getLogger((Class)TestClassRequestResolver.class);
                 ^
  symbol:   variable LoggerFactory
  location: class TestClassRequestResolver
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:22: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.Logger;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:23: error: package org.junit.platform.commons.logging does not exist
import org.junit.platform.commons.logging.LoggerFactory;
                                         ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:24: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.ReflectionUtils;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:41: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(DefensiveAllDefaultPossibilitiesBuilder.class);
	                     ^
  symbol:   class Logger
  location: class DefensiveAllDefaultPossibilitiesBuilder
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:31: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(UniqueIdReader.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class UniqueIdReader
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/support/UniqueIdReader.java:47: error: cannot find symbol
		return tryToReadFieldValue(Description.class, fieldName, description)
		       ^
  symbol:   method tryToReadFieldValue(Class<Description>,String,Description)
  location: class UniqueIdReader
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:76: error: cannot find symbol
			if (isNotBlank(className)) {
			    ^
  symbol:   method isNotBlank(String)
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:136: error: cannot find symbol
					.map(ReflectionUtils::getAllAssignmentCompatibleClasses)
					     ^
  symbol:   variable ReflectionUtils
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:167: error: cannot find symbol
			List<Method> methods = findMethods(testClass, where(Method::getName, isEqual(methodName)));
			                                              ^
  symbol:   method where(Method::getName,Predicate<Object>)
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/VintageTestDescriptor.java:168: error: cannot find symbol
			return (methods.size() == 1) ? MethodSource.from(testClass, getOnlyElement(methods)) : null;
			                                                            ^
  symbol:   method getOnlyElement(List<Method>)
  location: class VintageTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/descriptor/RunnerTestDescriptor.java:37: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(RunnerTestDescriptor.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class RunnerTestDescriptor
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/OrFilter.java:29: error: cannot find symbol
		this.filters = Preconditions.notEmpty(filters, "filters must not be empty");
		               ^
  symbol:   variable Preconditions
  location: class OrFilter
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:41: error: cannot find symbol
	private static final Logger logger = LoggerFactory.getLogger(DefensiveAllDefaultPossibilitiesBuilder.class);
	                                     ^
  symbol:   variable LoggerFactory
  location: class DefensiveAllDefaultPossibilitiesBuilder
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/FilterableIgnoringRunnerDecorator.java:13: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.Preconditions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IgnoringRunnerDecorator.java:13: error: package org.junit.platform.commons.util does not exist
import org.junit.platform.commons.util.Preconditions;
                                      ^
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/DefensiveAllDefaultPossibilitiesBuilder.java:134: error: cannot find symbol
			return ReflectionUtils.isMethodPresent(testClass, isPotentialJUnit4TestMethod);
			       ^
  symbol:   variable ReflectionUtils
  location: class DefensiveJUnit4Builder
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/IgnoringRunnerDecorator.java:31: error: cannot find symbol
		this.runner = Preconditions.notNull(runner, "Runner must not be null");
		              ^
  symbol:   variable Preconditions
  location: class IgnoringRunnerDecorator
sources/structure/org.junit.vintage/junit-vintage-engine/5.4.0/extractedSources/org/junit/vintage/engine/discovery/FilterableIgnoringRunnerDecorator.java:28: error: cannot find symbol
		Preconditions.condition(runner instanceof Filterable,
		^
  symbol:   variable Preconditions
  location: class FilterableIgnoringRunnerDecorator
44 errors
