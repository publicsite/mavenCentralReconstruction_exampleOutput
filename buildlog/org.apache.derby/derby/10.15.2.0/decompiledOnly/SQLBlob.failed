sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBlob.java:11: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: ')' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:619: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.getTypeName(), this.getStream().toString());
                                                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:621: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, this.getTypeName(), this.getLength());
                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:14: error: cannot find symbol
import org.apache.derby.shared.common.i18n.MessageService;
                                          ^
  symbol:   class MessageService
  location: package org.apache.derby.shared.common.i18n
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: ')' expected
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: not a statement
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: not a statement
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: illegal start of expression
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: not a statement
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: illegal start of expression
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: ';' expected
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:148: error: ';' expected
            s3 = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s3.substring(0, i + 1), s3.substring(i + 2));
                                                                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:177: error: ')' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sb.toString());
                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:177: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sb.toString());
                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:177: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sb.toString());
                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:177: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sb.toString());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:177: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sb.toString());
                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/StringUtil.java:177: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sb.toString());
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBinary.java:22: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataType.java:21: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:20: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/BitDataValue.java:8: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/ConcatableDataValue.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/VariableSizeDataValue.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/io/StreamStorable.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/SQLBlob.java:80: error: cannot find symbol
    public Object getObject() throws StandardException {
                                     ^
  symbol:   class StandardException
  location: class SQLBlob
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:330: error: <identifier> expected
        final DataValueDescriptor null = this.typeId.getNull();
                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ')' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ')' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                      ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
