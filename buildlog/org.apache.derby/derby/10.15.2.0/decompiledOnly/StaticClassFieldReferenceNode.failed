sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: ')' expected
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: not a statement
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: not a statement
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: illegal start of expression
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: not a statement
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: illegal start of expression
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: not a statement
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: ';' expected
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: not a statement
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: ';' expected
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:34: error: illegal start of expression
            throw StandardException.newException("42X01", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, this.javaClassName, this.fieldName) });
                                                                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:36: error: illegal start of type
        this.verifyClassExist(this.javaClassName);
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:36: error: ';' expected
        this.verifyClassExist(this.javaClassName);
            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:36: error: invalid method declaration; return type required
        this.verifyClassExist(this.javaClassName);
             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:36: error: illegal start of type
        this.verifyClassExist(this.javaClassName);
                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:36: error: wrong receiver parameter name
        this.verifyClassExist(this.javaClassName);
                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:37: error: illegal start of type
        this.field = classInspector.findPublicField(this.javaClassName, this.fieldName, true);
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:37: error: ';' expected
        this.field = classInspector.findPublicField(this.javaClassName, this.fieldName, true);
            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:37: error: <identifier> expected
        this.field = classInspector.findPublicField(this.javaClassName, this.fieldName, true);
                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:38: error: illegal start of type
        this.setJavaTypeName(classInspector.getType(this.field));
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:38: error: ';' expected
        this.setJavaTypeName(classInspector.getType(this.field));
            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:38: error: invalid method declaration; return type required
        this.setJavaTypeName(classInspector.getType(this.field));
             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:38: error: <identifier> expected
        this.setJavaTypeName(classInspector.getType(this.field));
                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:39: error: illegal start of type
        return this;
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:43: error: class, interface, or enum expected
    void preprocess(final int n, final FromList list, final SubqueryList list2, final PredicateList list3) throws StandardException {
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:43: error: class, interface, or enum expected
    void preprocess(final int n, final FromList list, final SubqueryList list2, final PredicateList list3) throws StandardException {
                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:43: error: class, interface, or enum expected
    void preprocess(final int n, final FromList list, final SubqueryList list2, final PredicateList list3) throws StandardException {
                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:43: error: class, interface, or enum expected
    void preprocess(final int n, final FromList list, final SubqueryList list2, final PredicateList list3) throws StandardException {
                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:43: error: class, interface, or enum expected
    void preprocess(final int n, final FromList list, final SubqueryList list2, final PredicateList list3) throws StandardException {
                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:47: error: class, interface, or enum expected
    boolean categorize(final JBitSet set, final boolean b) {
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:47: error: class, interface, or enum expected
    boolean categorize(final JBitSet set, final boolean b) {
                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:47: error: class, interface, or enum expected
    boolean categorize(final JBitSet set, final boolean b) {
                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:49: error: class, interface, or enum expected
    }
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:52: error: class, interface, or enum expected
    JavaValueNode remapColumnReferencesToExpressions() throws StandardException {
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:54: error: class, interface, or enum expected
    }
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:57: error: class, interface, or enum expected
    int getOrderableVariantType() {
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:60: error: class, interface, or enum expected
        }
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:62: error: class, interface, or enum expected
    }
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:65: error: class, interface, or enum expected
    void generateExpression(final ExpressionClassBuilder expressionClassBuilder, final MethodBuilder methodBuilder) throws StandardException {
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:65: error: class, interface, or enum expected
    void generateExpression(final ExpressionClassBuilder expressionClassBuilder, final MethodBuilder methodBuilder) throws StandardException {
                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:65: error: class, interface, or enum expected
    void generateExpression(final ExpressionClassBuilder expressionClassBuilder, final MethodBuilder methodBuilder) throws StandardException {
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/StaticClassFieldReferenceNode.java:67: error: class, interface, or enum expected
    }
    ^
42 errors
