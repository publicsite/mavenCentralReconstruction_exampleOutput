sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/UserDefinedTypeIdImpl.java:10: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:28: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, normalToDelimited(s), normalToDelimited(s2));
                                                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:399: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, s2, normalToDelimited);
                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:10: error: cannot find symbol
import org.apache.derby.shared.common.i18n.MessageService;
                                          ^
  symbol:   class MessageService
  location: package org.apache.derby.shared.common.i18n
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/UserDefinedTypeIdImpl.java:20: error: cannot find symbol
    public UserDefinedTypeIdImpl(final String s) throws StandardException {
                                                        ^
  symbol:   class StandardException
  location: class UserDefinedTypeIdImpl
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:330: error: <identifier> expected
        final DataValueDescriptor null = this.typeId.getNull();
                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ')' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:11: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:42: error: cannot find symbol
    public static String[] parseMultiPartSQLIdentifier(final String s) throws StandardException {
                                                                              ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:49: error: cannot find symbol
    private static String[] parseMultiPartSQLIdentifier(final StringReader stringReader) throws StandardException {
                                                                                                ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:73: error: cannot find symbol
    public static String parseSQLIdentifier(final String s) throws StandardException {
                                                                   ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:80: error: cannot find symbol
    private static String parseId(final StringReader stringReader, final boolean b) throws StandardException {
                                                                                           ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:117: error: cannot find symbol
    private static String parseUnQId(final StringReader stringReader, final boolean b) throws IOException, StandardException {
                                                                                                           ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:143: error: cannot find symbol
    private static String parseQId(final StringReader stringReader, final boolean b) throws IOException, StandardException {
                                                                                                         ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:173: error: cannot find symbol
    private static void verifyEmpty(final Reader reader) throws StandardException {
                                                                ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:184: error: cannot find symbol
    public static String[][] parseDbClassPath(final String s) throws StandardException {
                                                                     ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:221: error: cannot find symbol
    public static String[] parseIdList(final String s) throws StandardException {
                                                              ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:231: error: cannot find symbol
    private static String[] parseIdList(final StringReader stringReader, final boolean b) throws StandardException {
                                                                                                 ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:290: error: cannot find symbol
    public static String getUserAuthorizationId(final String s) throws StandardException {
                                                                       ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:325: error: cannot find symbol
    public static String pruneDups(final String s) throws StandardException {
                                                          ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:364: error: cannot find symbol
    public static boolean idOnList(final String s, final String s2) throws StandardException {
                                                                           ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:377: error: cannot find symbol
    public static String deleteId(final String s, final String s2) throws StandardException {
                                                                          ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:394: error: cannot find symbol
    public static String appendNormalToList(final String s, final String s2) throws StandardException {
                                                                                    ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:402: error: cannot find symbol
    public static String parseRoleId(String s) throws StandardException {
                                                      ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/util/IdUtil.java:412: error: cannot find symbol
    public static void checkIdentifierLengthLimit(final String s, final int i) throws StandardException {
                                                                                      ^
  symbol:   class StandardException
  location: class IdUtil
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ')' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                        ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
