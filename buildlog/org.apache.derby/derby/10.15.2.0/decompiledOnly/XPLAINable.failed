sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/execute/xplain/XPLAINVisitor.java:8: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: ')' expected
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: not a statement
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: ';' expected
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: not a statement
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: illegal start of expression
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: not a statement
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:462: error: ';' expected
            this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(J)Ljava/lang/String;, n);
                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: ')' expected
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: not a statement
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: ';' expected
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: not a statement
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: illegal start of expression
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: not a statement
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: ';' expected
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: not a statement
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: ';' expected
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: not a statement
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java:472: error: ';' expected
                    this.indexStatsUpdateReason = invokedynamic(makeConcatWithConstants:(JJD)Ljava/lang/String;, n, rowEstimate, abs);
                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:330: error: <identifier> expected
        final DataValueDescriptor null = this.typeId.getNull();
                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ')' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/Activation.java:27: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/depend/Dependent.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/execute/xplain/XPLAINVisitor.java:16: error: cannot find symbol
    void doXPLAIN(final RunTimeStatistics p0, final Activation p1) throws StandardException;
                                                                          ^
  symbol:   class StandardException
  location: interface XPLAINVisitor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/Activation.java:32: error: cannot find symbol
    void reset() throws StandardException;
                        ^
  symbol:   class StandardException
  location: interface Activation
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/ParameterValueSet.java:8: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ')' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ';' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ';' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:16: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: ')' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/Activation.java:40: error: cannot find symbol
    void setParameters(final ParameterValueSet p0, final DataTypeDescriptor[] p1) throws StandardException;
                                                                                         ^
  symbol:   class StandardException
  location: interface Activation
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/ResultSet.java:12: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/Activation.java:42: error: cannot find symbol
    ResultSet execute() throws StandardException;
                               ^
  symbol:   class StandardException
  location: interface Activation
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/Activation.java:44: error: cannot find symbol
    void close() throws StandardException;
                        ^
  symbol:   class StandardException
  location: interface Activation
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
