sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:330: error: <identifier> expected
        final DataValueDescriptor null = this.typeId.getNull();
                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ')' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/AggregateDefinition.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ')' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ';' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ';' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:16: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: ')' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/TypeId.java:11: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:101: error: cannot find symbol
    public static DataTypeDescriptor getSQLDataTypeDescriptor(final String s) throws StandardException {
                                                                                     ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:105: error: cannot find symbol
    public static DataTypeDescriptor getSQLDataTypeDescriptor(final String s, final boolean b) throws StandardException {
                                                                                                      ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:113: error: cannot find symbol
    public static DataTypeDescriptor getSQLDataTypeDescriptor(final String s, final int n, final int n2, final boolean b, final int n3) throws StandardException {
                                                                                                                                               ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:20: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:188: error: cannot find symbol
    public DataValueDescriptor normalize(final DataValueDescriptor dataValueDescriptor, final DataValueDescriptor dataValueDescriptor2) throws StandardException {
                                                                                                                                               ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassFactory.java:8: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:329: error: cannot find symbol
    public DataValueDescriptor getNull() throws StandardException {
                                                ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:711: error: cannot find symbol
    public boolean isUserCreatableType() throws StandardException {
                                                ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:750: error: cannot find symbol
    public long[] getNumericBounds() throws StandardException {
                                            ^
  symbol:   class StandardException
  location: class DataTypeDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/GeneratedClass.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassFactory.java:13: error: cannot find symbol
    GeneratedClass loadGeneratedClass(final String p0, final ByteArray p1) throws StandardException;
                                                                                  ^
  symbol:   class StandardException
  location: interface ClassFactory
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:14: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassFactory.java:23: error: cannot find symbol
    void notifyModifyJar(final boolean p0) throws StandardException;
                                                  ^
  symbol:   class StandardException
  location: interface ClassFactory
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassFactory.java:25: error: cannot find symbol
    void notifyModifyClasspath(final String p0) throws StandardException;
                                                       ^
  symbol:   class StandardException
  location: interface ClassFactory
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:78: error: cannot find symbol
    public Member findPublicMethod(final String s, final String name, final String[] array, final String[] array2, final boolean[] array3, final boolean b, final boolean b2, final boolean b3) throws ClassNotFoundException, StandardException {
                                                                                                                                                                                                                               ^
  symbol:   class StandardException
  location: class ClassInspector
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:145: error: cannot find symbol
    public Member findPublicField(final String s, final String s2, final boolean b) throws StandardException {
                                                                                           ^
  symbol:   class StandardException
  location: class ClassInspector
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:181: error: cannot find symbol
    public Member findPublicConstructor(final String s, final String[] array, final String[] array2, final boolean[] array3) throws ClassNotFoundException, StandardException {
                                                                                                                                                            ^
  symbol:   class StandardException
  location: class ClassInspector
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:222: error: cannot find symbol
    public Class[][] getTypeBounds(final Class clazz, final Class clazz2) throws StandardException {
                                                                                 ^
  symbol:   class StandardException
  location: class ClassInspector
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:244: error: cannot find symbol
    public Class<?>[] getGenericParameterTypes(final Class clazz, final Class clazz2) throws StandardException {
                                                                                             ^
  symbol:   class StandardException
  location: class ClassInspector
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassInspector.java:276: error: cannot find symbol
    private Member resolveMethod(final Class clazz, final String s, final Class[] array, final Class[] array2, final boolean[] array3, final boolean b, final boolean b2, final Member[] array4, final boolean b3) throws StandardException {
                                                                                                                                                                                                                          ^
  symbol:   class StandardException
  location: class ClassInspector
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/context/Context.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/GeneratedClass.java:14: error: cannot find symbol
    Object newInstance(final Context p0) throws StandardException;
                                                ^
  symbol:   class StandardException
  location: interface GeneratedClass
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/GeneratedMethod.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/GeneratedClass.java:16: error: cannot find symbol
    GeneratedMethod getMethod(final String p0) throws StandardException;
                                                      ^
  symbol:   class StandardException
  location: interface GeneratedClass
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/GeneratedMethod.java:11: error: cannot find symbol
    Object invoke(final Object p0) throws StandardException;
                                          ^
  symbol:   class StandardException
  location: interface GeneratedMethod
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/context/ContextManager.java:148: error: ')' expected
                            this.errorStream.println(invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, cause.getMessage()));
                                                                                          ^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
