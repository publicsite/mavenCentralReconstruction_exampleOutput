sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/CountAggregator.java:12: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:330: error: <identifier> expected
        final DataValueDescriptor null = this.typeId.getNull();
                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ')' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: illegal start of expression
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: not a statement
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:745: error: ';' expected
            sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, sqlTypeName, this.getCollationName());
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: ')' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:47: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, super.toString(), this.getResult().getString());
                                                                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/SystemAggregator.java:10: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/sql/execute/ExecAggregator.java:7: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/services/loader/ClassFactory.java:8: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:69: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;, sqlTypeName.substring(0, index), typeDescriptor.getMaximumWidth(), sqlTypeName.substring(index));
                                                                                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:76: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;, sqlTypeName, typeDescriptor.getMaximumWidth());
                                                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ')' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: illegal start of expression
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: not a statement
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:80: error: ';' expected
                sqlTypeName = invokedynamic(makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;, sqlTypeName, typeDescriptor.getPrecision(), typeDescriptor.getScale());
                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:93: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, MessageService.getTextMessage("44X00.U", new Object[0]), this.getSQLTypeName());
                                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ')' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: illegal start of expression
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: not a statement
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/BaseTypeIdImpl.java:338: error: ';' expected
        return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, s);
                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ')' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                         ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: illegal start of expression
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                      ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ';' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: not a statement
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/RowMultiSetImpl.java:25: error: ';' expected
            throw new IllegalArgumentException(invokedynamic(makeConcatWithConstants:([Ljava/lang/String;[Lorg/apache/derby/catalog/TypeDescriptor;)Ljava/lang/String;, array, types));
                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataTypeDescriptor.java:16: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: ')' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                            ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: illegal start of expression
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                               ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: not a statement
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/catalog/types/TypeDescriptorImpl.java:206: error: ';' expected
            return invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, sqLstring);
                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/CountAggregator.java:28: error: cannot find symbol
    public void merge(final ExecAggregator execAggregator) throws StandardException {
                                                                  ^
  symbol:   class StandardException
  location: class CountAggregator
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:20: error: cannot find symbol
import org.apache.derby.shared.common.error.StandardException;
                                           ^
  symbol:   class StandardException
  location: package org.apache.derby.shared.common.error
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/execute/CountAggregator.java:38: error: cannot find symbol
    public void accumulate(final DataValueDescriptor dataValueDescriptor, final Object o) throws StandardException {
                                                                                                 ^
  symbol:   class StandardException
  location: class CountAggregator
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:27: error: cannot find symbol
    int getLength() throws StandardException;
                           ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:29: error: cannot find symbol
    String getString() throws StandardException;
                              ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:31: error: cannot find symbol
    String getTraceString() throws StandardException;
                                   ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:33: error: cannot find symbol
    boolean getBoolean() throws StandardException;
                                ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:35: error: cannot find symbol
    byte getByte() throws StandardException;
                          ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:37: error: cannot find symbol
    short getShort() throws StandardException;
                            ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:39: error: cannot find symbol
    int getInt() throws StandardException;
                        ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:41: error: cannot find symbol
    long getLong() throws StandardException;
                          ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:43: error: cannot find symbol
    float getFloat() throws StandardException;
                            ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:45: error: cannot find symbol
    double getDouble() throws StandardException;
                              ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:47: error: cannot find symbol
    int typeToBigDecimal() throws StandardException;
                                  ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:49: error: cannot find symbol
    byte[] getBytes() throws StandardException;
                             ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/iapi/types/DataValueDescriptor.java:51: error: cannot find symbol
    Date getDate(final Calendar p0) throws StandardException;
                                           ^
  symbol:   class StandardException
  location: interface DataValueDescriptor
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
