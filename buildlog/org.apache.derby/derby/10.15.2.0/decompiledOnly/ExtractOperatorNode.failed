sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: ')' expected
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: not a statement
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: illegal start of expression
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: not a statement
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: illegal start of expression
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: not a statement
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: ';' expected
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: not a statement
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: ';' expected
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: not a statement
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:20: error: ';' expected
        super(valueNode, invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[extractField]), ExtractOperatorNode.fieldMethod[extractField], contextManager);
                                                                                                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: ')' expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: not a statement
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: illegal start of expression
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: not a statement
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: illegal start of expression
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: not a statement
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: ';' expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: ';' expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:36: error: illegal start of expression
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:38: error: illegal start of type
        if (n == 91 && this.extractField > 2) {
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:38: error: <identifier> expected
        if (n == 91 && this.extractField > 2) {
             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:38: error: <identifier> expected
        if (n == 91 && this.extractField > 2) {
                                        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: ')' expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                              ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: not a statement
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                          ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: illegal start of expression
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: not a statement
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                             ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: illegal start of expression
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: not a statement
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: ';' expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                                       ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: ';' expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                                                                 ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:39: error: illegal start of type
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                                                                                                   ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:41: error: class, interface, or enum expected
        if (n == 92 && this.extractField < 3) {
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:42: error: class, interface, or enum expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                  ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:42: error: class, interface, or enum expected
            throw StandardException.newException("42X25", new Object[] { invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, ExtractOperatorNode.fieldName[this.extractField]), typeId.getSQLTypeName() });
                                                                                                                                                     ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:43: error: class, interface, or enum expected
        }
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:46: error: class, interface, or enum expected
        }
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:49: error: class, interface, or enum expected
        }
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:51: error: class, interface, or enum expected
    }
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:54: error: class, interface, or enum expected
    public String toString() {
           ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:56: error: class, interface, or enum expected
    }
    ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:60: error: class, interface, or enum expected
        fieldMethod = new String[] { "getYear", "getMonth", "getDate", "getHours", "getMinutes", "getSeconds" };
        ^
sources/structure/org.apache.derby/derby/10.15.2.0/Decompiled/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java:61: error: class, interface, or enum expected
    }
    ^
43 errors
