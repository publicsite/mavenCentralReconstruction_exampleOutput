sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:65: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:69: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:73: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:77: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:81: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:85: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:89: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:93: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:97: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:101: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:105: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:109: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:113: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:117: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:121: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:125: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:129: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:133: error: incompatible types: Set<Object> cannot be converted to Collection<Method>
        return (Collection<Method>)Collections.emptySet();
                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:19: error: package com.google.common.base does not exist
import static com.google.common.base.Preconditions.checkNotNull;
                                    ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:19: error: static import only from classes and interfaces
import static com.google.common.base.Preconditions.checkNotNull;
^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:24: error: package com.google.common.base does not exist
import com.google.common.base.Equivalence;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:25: error: cannot find symbol
import com.google.common.collect.ImmutableList;
                                ^
  symbol:   class ImmutableList
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:26: error: cannot find symbol
import com.google.common.collect.Iterables;
                                ^
  symbol:   class Iterables
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:27: error: cannot find symbol
import com.google.common.collect.Lists;
                                ^
  symbol:   class Lists
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:19: error: package com.google.common.base does not exist
import static com.google.common.base.Preconditions.checkNotNull;
                                    ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:19: error: static import only from classes and interfaces
import static com.google.common.base.Preconditions.checkNotNull;
^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:22: error: package com.google.common.base does not exist
import com.google.common.base.Equivalence;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:23: error: cannot find symbol
import com.google.common.collect.ImmutableList;
                                ^
  symbol:   class ImmutableList
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:24: error: cannot find symbol
import com.google.common.collect.Lists;
                                ^
  symbol:   class Lists
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:50: error: cannot find symbol
  private final Equivalence<? super T> equivalence;
                ^
  symbol:   class Equivalence
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:55: error: cannot find symbol
  private final List<ImmutableList<T>> groups = Lists.newArrayList();
                     ^
  symbol:   class ImmutableList
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:58: error: cannot find symbol
      Equivalence<? super T> equivalence,
      ^
  symbol:   class Equivalence
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:19: error: package com.google.common.base does not exist
import static com.google.common.base.Preconditions.checkNotNull;
                                    ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:19: error: static import only from classes and interfaces
import static com.google.common.base.Preconditions.checkNotNull;
^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:30: error: cannot find symbol
import com.google.common.collect.ImmutableSet;
                                ^
  symbol:   class ImmutableSet
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:31: error: cannot find symbol
import com.google.common.collect.Ordering;
                                ^
  symbol:   class Ordering
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:32: error: package com.google.common.primitives does not exist
import com.google.common.primitives.Ints;
                                   ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:271: error: cannot find symbol
  private final ImmutableSet<Supplier<GeneralSpliterator<E>>> spliteratorSuppliers;
                ^
  symbol:   class ImmutableSet
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:273: error: cannot find symbol
  private SpliteratorTester(ImmutableSet<Supplier<GeneralSpliterator<E>>> spliteratorSuppliers) {
                            ^
  symbol:   class ImmutableSet
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:141: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:144: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                final Map<String, String> map = (Map<String, String>)populate(new HashMap(), (Map.Entry<Object, String>[])entries);
                                                                                                                          ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:151: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)SortedMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                         ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:154: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                final NavigableMap<String, String> map = (NavigableMap<String, String>)populate(new TreeMap(), (Map.Entry<Object, String>[])entries);
                                                                                                                                            ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:161: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)SortedMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                         ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:164: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                final SortedMap<String, String> map = (SortedMap<String, String>)populate(new TreeMap(), (Map.Entry<Object, String>[])entries);
                                                                                                                                      ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:171: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:180: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:189: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:198: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:207: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:216: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:219: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (Map<String, String>)populate(new Hashtable(), (Map.Entry<Object, String>[])entries);
                                                                                                   ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:225: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:228: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (Map<String, String>)populate(new LinkedHashMap(), (Map.Entry<Object, String>[])entries);
                                                                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:234: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)NavigableMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                            ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:237: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                final NavigableMap<String, String> delegate = (NavigableMap<String, String>)populate(new TreeMap(), (Map.Entry<Object, String>[])entries);
                                                                                                                                                 ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:244: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)NavigableMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                            ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:247: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (SortedMap<String, String>)populate(new TreeMap(), (Map.Entry<Object, String>[])entries);
                                                                                                       ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:253: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)NavigableMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                            ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:256: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (SortedMap<String, String>)populate(new TreeMap(TestsForMapsInJavaUtil.arbitraryNullFriendlyComparator()), (Map.Entry<Object, String>[])entries);
                                                                                                                                                               ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:262: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:271: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:274: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return Collections.unmodifiableNavigableMap((NavigableMap<String, ? extends String>)populate(new TreeMap(), (Map.Entry<Object, String>[])entries));
                                                                                                                                                         ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:280: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:283: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                final SortedMap<String, String> map = (SortedMap<String, String>)populate(new TreeMap(), (Map.Entry<Object, String>[])entries);
                                                                                                                                      ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:290: error: constructor TestEnumMapGenerator in class TestEnumMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestEnumMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:293: error: incompatible types: Entry<AnEnum,String>[] cannot be converted to Entry<Object,String>[]
                return (Map<AnEnum, String>)populate(new EnumMap(AnEnum.class), (Map.Entry<Object, String>[])entries);
                                                                                                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:299: error: constructor TestStringMapGenerator in class TestStringMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)MapTestSuiteBuilder.using((TestMapGenerator<Object, Object>)new TestStringMapGenerator(this) {
                                                                                                                             ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:302: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (Map<String, String>)populate(new ConcurrentHashMap(), (Map.Entry<Object, String>[])entries);
                                                                                                           ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:308: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)NavigableMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                            ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:311: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (SortedMap<String, String>)populate(new ConcurrentSkipListMap(), (Map.Entry<Object, String>[])entries);
                                                                                                                     ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:317: error: constructor TestStringSortedMapGenerator in class TestStringSortedMapGenerator cannot be applied to given types;
        return (Test)((MapTestSuiteBuilder)((MapTestSuiteBuilder)NavigableMapTestSuiteBuilder.using((TestSortedMapGenerator<Object, Object>)new TestStringSortedMapGenerator(this) {
                                                                                                                                            ^
  required: no arguments
  found: TestsForMapsInJavaUtil
  reason: actual and formal argument lists differ in length
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/collect/testing/TestsForMapsInJavaUtil.java:320: error: incompatible types: Entry<String,String>[] cannot be converted to Entry<Object,String>[]
                return (SortedMap<String, String>)populate(new ConcurrentSkipListMap(TestsForMapsInJavaUtil.arbitraryNullFriendlyComparator()), (Map.Entry<Object, String>[])entries);
                                                                                                                                                                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/Platform.java:19: error: package com.google.common.base does not exist
import static com.google.common.base.Preconditions.checkNotNull;
                                    ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/Platform.java:19: error: static import only from classes and interfaces
import static com.google.common.base.Preconditions.checkNotNull;
^
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:80: error: cannot find symbol
  private final List<List<Object>> equalityGroups = Lists.newArrayList();
                                                    ^
  symbol:   variable Lists
  location: class EqualsTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:89: error: cannot find symbol
    this.itemReporter = checkNotNull(itemReporter);
                        ^
  symbol:   method checkNotNull(ItemReporter)
  location: class EqualsTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:97: error: cannot find symbol
    checkNotNull(equalityGroup);
    ^
  symbol:   method checkNotNull(Object[])
  location: class EqualsTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:98: error: cannot find symbol
    equalityGroups.add(ImmutableList.copyOf(equalityGroup));
                       ^
  symbol:   variable ImmutableList
  location: class EqualsTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:106: error: cannot find symbol
            Equivalence.equals(), "Object#equals", "Object#hashCode", itemReporter);
            ^
  symbol:   variable Equivalence
  location: class EqualsTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/EqualsTester.java:118: error: cannot find symbol
    for (Object item : Iterables.concat(equalityGroups)) {
                       ^
  symbol:   variable Iterables
  location: class EqualsTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:55: error: cannot find symbol
  private final List<ImmutableList<T>> groups = Lists.newArrayList();
                                                ^
  symbol:   variable Lists
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:63: error: cannot find symbol
    this.relationshipName = checkNotNull(relationshipName);
                            ^
  symbol:   method checkNotNull(String)
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:64: error: cannot find symbol
    this.hashName = checkNotNull(hashName);
                    ^
  symbol:   method checkNotNull(String)
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:65: error: cannot find symbol
    this.itemReporter = checkNotNull(itemReporter);
                        ^
  symbol:   method checkNotNull(ItemReporter)
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:70: error: cannot find symbol
    groups.add(ImmutableList.copyOf(group));
               ^
  symbol:   variable ImmutableList
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:76: error: cannot find symbol
      ImmutableList<T> group = groups.get(groupNumber);
      ^
  symbol:   class ImmutableList
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/RelationshipTester.java:89: error: cannot find symbol
            ImmutableList<T> unrelatedGroup = groups.get(unrelatedGroupNumber);
            ^
  symbol:   class ImmutableList
  location: class RelationshipTester<T>
  where T is a type-variable:
    T extends Object declared in class RelationshipTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:60: error: cannot find symbol
      this.spliterator = checkNotNull(spliterator);
                         ^
  symbol:   method checkNotNull(Spliterator<E>)
  location: class GeneralSpliterator<E>
  where E is a type-variable:
    E extends Object declared in class GeneralSpliterator
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:240: error: cannot find symbol
        ImmutableSet.of(() -> new GeneralSpliteratorOfObject<>(spliteratorSupplier.get())));
        ^
  symbol:   variable ImmutableSet
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:247: error: cannot find symbol
        ImmutableSet.of(
        ^
  symbol:   variable ImmutableSet
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:256: error: cannot find symbol
        ImmutableSet.of(
        ^
  symbol:   variable ImmutableSet
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:266: error: cannot find symbol
        ImmutableSet.of(
        ^
  symbol:   variable ImmutableSet
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:302: error: cannot find symbol
          assertTrue(Ordering.from(comparator).isOrdered(resultsForStrategy));
                     ^
  symbol:   variable Ordering
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/collect/testing/SpliteratorTester.java:305: error: cannot find symbol
          assertEquals(Ints.checkedCast(estimatedSize), resultsForStrategy.size());
                       ^
  symbol:   variable Ints
  location: class SpliteratorTester<E>
  where E is a type-variable:
    E extends Object declared in class SpliteratorTester
sources/structure/com.google.guava/guava-testlib/31.1-jre/extractedSources/com/google/common/testing/Platform.java:38: error: cannot find symbol
    checkNotNull(object);
    ^
  symbol:   method checkNotNull(T)
  location: class Platform
  where T is a type-variable:
    T extends Object declared in method <T>reserialize(T)
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
96 errors
