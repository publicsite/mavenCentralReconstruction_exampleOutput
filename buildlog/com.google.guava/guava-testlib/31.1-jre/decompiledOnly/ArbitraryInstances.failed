sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:7: error: package com.google.common.io does not exist
import com.google.common.io.ByteStreams;
                           ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:34: error: cannot find symbol
import com.google.common.collect.SortedMapDifference;
                                ^
  symbol:   class SortedMapDifference
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:35: error: cannot find symbol
import com.google.common.collect.MapDifference;
                                ^
  symbol:   class MapDifference
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:36: error: cannot find symbol
import com.google.common.collect.Range;
                                ^
  symbol:   class Range
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:37: error: cannot find symbol
import com.google.common.collect.Tables;
                                ^
  symbol:   class Tables
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:38: error: cannot find symbol
import com.google.common.collect.TreeBasedTable;
                                ^
  symbol:   class TreeBasedTable
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:39: error: cannot find symbol
import com.google.common.collect.RowSortedTable;
                                ^
  symbol:   class RowSortedTable
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:40: error: cannot find symbol
import com.google.common.collect.ImmutableTable;
                                ^
  symbol:   class ImmutableTable
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:41: error: cannot find symbol
import com.google.common.collect.Table;
                                ^
  symbol:   class Table
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:42: error: cannot find symbol
import com.google.common.collect.ImmutableBiMap;
                                ^
  symbol:   class ImmutableBiMap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:43: error: cannot find symbol
import com.google.common.collect.BiMap;
                                ^
  symbol:   class BiMap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:44: error: cannot find symbol
import com.google.common.collect.ImmutableSortedMultiset;
                                ^
  symbol:   class ImmutableSortedMultiset
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:45: error: cannot find symbol
import com.google.common.collect.SortedMultiset;
                                ^
  symbol:   class SortedMultiset
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:46: error: cannot find symbol
import com.google.common.collect.ImmutableMultiset;
                                ^
  symbol:   class ImmutableMultiset
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:47: error: cannot find symbol
import com.google.common.collect.Multiset;
                                ^
  symbol:   class Multiset
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:48: error: cannot find symbol
import com.google.common.collect.Multimaps;
                                ^
  symbol:   class Multimaps
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:49: error: cannot find symbol
import com.google.common.collect.TreeMultimap;
                                ^
  symbol:   class TreeMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:50: error: cannot find symbol
import com.google.common.collect.SortedSetMultimap;
                                ^
  symbol:   class SortedSetMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:51: error: cannot find symbol
import com.google.common.collect.ImmutableSetMultimap;
                                ^
  symbol:   class ImmutableSetMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:52: error: cannot find symbol
import com.google.common.collect.SetMultimap;
                                ^
  symbol:   class SetMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:53: error: cannot find symbol
import com.google.common.collect.ImmutableListMultimap;
                                ^
  symbol:   class ImmutableListMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:54: error: cannot find symbol
import com.google.common.collect.ListMultimap;
                                ^
  symbol:   class ListMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:55: error: cannot find symbol
import com.google.common.collect.ImmutableMultimap;
                                ^
  symbol:   class ImmutableMultimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:56: error: cannot find symbol
import com.google.common.collect.Multimap;
                                ^
  symbol:   class Multimap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:57: error: cannot find symbol
import com.google.common.collect.Maps;
                                ^
  symbol:   class Maps
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:59: error: cannot find symbol
import com.google.common.collect.ImmutableSortedMap;
                                ^
  symbol:   class ImmutableSortedMap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:61: error: cannot find symbol
import com.google.common.collect.ImmutableMap;
                                ^
  symbol:   class ImmutableMap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:63: error: cannot find symbol
import com.google.common.collect.Sets;
                                ^
  symbol:   class Sets
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:65: error: cannot find symbol
import com.google.common.collect.ImmutableSortedSet;
                                ^
  symbol:   class ImmutableSortedSet
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:69: error: cannot find symbol
import com.google.common.collect.ImmutableCollection;
                                ^
  symbol:   class ImmutableCollection
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:71: error: cannot find symbol
import com.google.common.collect.ImmutableList;
                                ^
  symbol:   class ImmutableList
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:73: error: cannot find symbol
import com.google.common.collect.Iterators;
                                ^
  symbol:   class Iterators
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:74: error: cannot find symbol
import com.google.common.collect.PeekingIterator;
                                ^
  symbol:   class PeekingIterator
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:75: error: cannot find symbol
import com.google.common.collect.ImmutableSet;
                                ^
  symbol:   class ImmutableSet
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:77: error: package com.google.common.io does not exist
import com.google.common.io.CharSink;
                           ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:78: error: package com.google.common.io does not exist
import com.google.common.io.ByteSink;
                           ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:79: error: package com.google.common.io does not exist
import com.google.common.io.CharSource;
                           ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:80: error: package com.google.common.io does not exist
import com.google.common.io.ByteSource;
                           ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:94: error: package com.google.common.base does not exist
import com.google.common.base.Stopwatch;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:95: error: package com.google.common.base does not exist
import com.google.common.base.Ticker;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:96: error: package com.google.common.base does not exist
import com.google.common.base.Equivalence;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:97: error: package com.google.common.base does not exist
import com.google.common.base.Predicates;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:98: error: package com.google.common.base does not exist
import com.google.common.base.Predicate;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:99: error: package com.google.common.base does not exist
import com.google.common.base.Splitter;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:100: error: package com.google.common.base does not exist
import com.google.common.base.Joiner;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:101: error: package com.google.common.base does not exist
import com.google.common.base.CharMatcher;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:109: error: package com.google.common.base does not exist
import com.google.common.base.Charsets;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:114: error: package com.google.common.primitives does not exist
import com.google.common.primitives.UnsignedLong;
                                   ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:115: error: package com.google.common.primitives does not exist
import com.google.common.primitives.UnsignedInteger;
                                   ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:116: error: cannot find symbol
import com.google.common.collect.ImmutableClassToInstanceMap;
                                ^
  symbol:   class ImmutableClassToInstanceMap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:124: error: package com.google.common.base does not exist
import com.google.common.base.Defaults;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:125: error: package com.google.common.primitives does not exist
import com.google.common.primitives.Primitives;
                                   ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:127: error: package com.google.common.base does not exist
import com.google.common.base.Preconditions;
                             ^
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:133: error: cannot find symbol
import com.google.common.collect.ClassToInstanceMap;
                                ^
  symbol:   class ClassToInstanceMap
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:135: error: cannot find symbol
import com.google.common.collect.Ordering;
                                ^
  symbol:   class Ordering
  location: package com.google.common.collect
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:141: error: cannot find symbol
    private static final Ordering<Field> BY_FIELD_NAME;
                         ^
  symbol:   class Ordering
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:142: error: cannot find symbol
    private static final ClassToInstanceMap<Object> DEFAULTS;
                         ^
  symbol:   class ClassToInstanceMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:328: error: cannot find symbol
    private static final class NullByteSink extends ByteSink implements Serializable
                                                    ^
  symbol:   class ByteSink
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:364: error: cannot find symbol
    private static final class AlwaysEqual extends Ordering<Object> implements Serializable
                                                   ^
  symbol:   class Ordering
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:153: error: cannot find symbol
        Preconditions.checkArgument(type != implementation, "Don't register %s to itself!", (Object)type);
        ^
  symbol:   variable Preconditions
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:154: error: cannot find symbol
        Preconditions.checkArgument(!ArbitraryInstances.DEFAULTS.containsKey((Object)type), "A default value was already registered for %s", (Object)type);
        ^
  symbol:   variable Preconditions
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:155: error: cannot find symbol
        Preconditions.checkArgument(ArbitraryInstances.implementations.put(type, implementation) == null, "Implementation for %s was already registered", (Object)type);
        ^
  symbol:   variable Preconditions
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:159: error: incompatible types: Class<CAP#1> cannot be converted to Class<? extends T>
        return ArbitraryInstances.implementations.get(type);
                                                     ^
  where T is a type-variable:
    T extends Object declared in method <T>getImplementation(Class<T>)
  where CAP#1 is a fresh type-variable:
    CAP#1 extends Object from capture of ?
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:181: error: cannot find symbol
        final T jvmDefault = (T)Defaults.defaultValue(Primitives.unwrap((Class)type));
                                ^
  symbol:   variable Defaults
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:181: error: cannot find symbol
        final T jvmDefault = (T)Defaults.defaultValue(Primitives.unwrap((Class)type));
                                                      ^
  symbol:   variable Primitives
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:239: error: cannot find symbol
        BY_FIELD_NAME = new Ordering<Field>() {
                            ^
  symbol:   class Ordering
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();
                    ^
  symbol:   class ClassToInstanceMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class SortedMapDifference
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
  symbol:   variable ImmutableSortedMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableSortedMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable Maps
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class MapDifference
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable Maps
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class Range
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable Range
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class Ordering
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class ImmutableClassToInstanceMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableClassToInstanceMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class ClassToInstanceMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableClassToInstanceMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class RowSortedTable
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
  symbol:   class RowSortedTable
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable TreeBasedTable
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable Tables
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class ImmutableTable
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableTable
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class Table
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
  symbol:   variable ImmutableTable
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
  symbol:   class ImmutableBiMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableBiMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class BiMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableBiMap
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class ImmutableSortedMultiset
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableSortedMultiset
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class SortedMultiset
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableSortedMultiset
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   class ImmutableMultiset
  location: class ArbitraryInstances
sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java:244: error: cannot find symbol
        DEFAULTS = (ClassToInstanceMap)ImmutableClassToInstanceMap.builder().put((Class)Object.class, (Object)"").put((Class)Number.class, (Object)0).put((Class)UnsignedInteger.class, (Object)UnsignedInteger.ZERO).put((Class)UnsignedLong.class, (Object)UnsignedLong.ZERO).put((Class)BigInteger.class, (Object)BigInteger.ZERO).put((Class)BigDecimal.class, (Object)BigDecimal.ZERO).put((Class)CharSequence.class, (Object)"").put((Class)String.class, (Object)"").put((Class)Pattern.class, (Object)Pattern.compile("")).put((Class)MatchResult.class, (Object)newMatchResult()).put((Class)TimeUnit.class, (Object)TimeUnit.SECONDS).put((Class)Charset.class, (Object)Charsets.UTF_8).put((Class)Currency.class, (Object)Currency.getInstance(Locale.US)).put((Class)Locale.class, (Object)Locale.US).put((Class)Optional.class, (Object)Optional.empty()).put((Class)OptionalInt.class, (Object)OptionalInt.empty()).put((Class)OptionalLong.class, (Object)OptionalLong.empty()).put((Class)OptionalDouble.class, (Object)OptionalDouble.empty()).put((Class)UUID.class, (Object)UUID.randomUUID()).put((Class)CharMatcher.class, (Object)CharMatcher.none()).put((Class)Joiner.class, (Object)Joiner.on(',')).put((Class)Splitter.class, (Object)Splitter.on(',')).put((Class)com.google.common.base.Optional.class, (Object)com.google.common.base.Optional.absent()).put((Class)Predicate.class, (Object)Predicates.alwaysTrue()).put((Class)Equivalence.class, (Object)Equivalence.equals()).put((Class)Ticker.class, (Object)Ticker.systemTicker()).put((Class)Stopwatch.class, (Object)Stopwatch.createUnstarted()).put((Class)InputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)ByteArrayInputStream.class, (Object)new ByteArrayInputStream(new byte[0])).put((Class)Readable.class, (Object)new StringReader("")).put((Class)Reader.class, (Object)new StringReader("")).put((Class)StringReader.class, (Object)new StringReader("")).put((Class)Buffer.class, (Object)ByteBuffer.allocate(0)).put((Class)CharBuffer.class, (Object)CharBuffer.allocate(0)).put((Class)ByteBuffer.class, (Object)ByteBuffer.allocate(0)).put((Class)ShortBuffer.class, (Object)ShortBuffer.allocate(0)).put((Class)IntBuffer.class, (Object)IntBuffer.allocate(0)).put((Class)LongBuffer.class, (Object)LongBuffer.allocate(0)).put((Class)FloatBuffer.class, (Object)FloatBuffer.allocate(0)).put((Class)DoubleBuffer.class, (Object)DoubleBuffer.allocate(0)).put((Class)File.class, (Object)new File("")).put((Class)ByteSource.class, (Object)ByteSource.empty()).put((Class)CharSource.class, (Object)CharSource.empty()).put((Class)ByteSink.class, (Object)NullByteSink.INSTANCE).put((Class)CharSink.class, (Object)NullByteSink.INSTANCE.asCharSink(Charsets.UTF_8)).put((Class)Iterator.class, (Object)ImmutableSet.of().iterator()).put((Class)PeekingIterator.class, (Object)Iterators.peekingIterator((Iterator)ImmutableSet.of().iterator())).put((Class)ListIterator.class, (Object)ImmutableList.of().listIterator()).put((Class)Iterable.class, (Object)ImmutableSet.of()).put((Class)Collection.class, (Object)ImmutableList.of()).put((Class)ImmutableCollection.class, (Object)ImmutableList.of()).put((Class)List.class, (Object)ImmutableList.of()).put((Class)ImmutableList.class, (Object)ImmutableList.of()).put((Class)Set.class, (Object)ImmutableSet.of()).put((Class)ImmutableSet.class, (Object)ImmutableSet.of()).put((Class)SortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)ImmutableSortedSet.class, (Object)ImmutableSortedSet.of()).put((Class)NavigableSet.class, (Object)Sets.unmodifiableNavigableSet((NavigableSet)Sets.newTreeSet())).put((Class)Map.class, (Object)ImmutableMap.of()).put((Class)ImmutableMap.class, (Object)ImmutableMap.of()).put((Class)SortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)ImmutableSortedMap.class, (Object)ImmutableSortedMap.of()).put((Class)NavigableMap.class, (Object)Maps.unmodifiableNavigableMap((NavigableMap)Maps.newTreeMap())).put((Class)Multimap.class, (Object)ImmutableMultimap.of()).put((Class)ImmutableMultimap.class, (Object)ImmutableMultimap.of()).put((Class)ListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)ImmutableListMultimap.class, (Object)ImmutableListMultimap.of()).put((Class)SetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)ImmutableSetMultimap.class, (Object)ImmutableSetMultimap.of()).put((Class)SortedSetMultimap.class, (Object)Multimaps.unmodifiableSortedSetMultimap((SortedSetMultimap)TreeMultimap.create())).put((Class)Multiset.class, (Object)ImmutableMultiset.of()).put((Class)ImmutableMultiset.class, (Object)ImmutableMultiset.of()).put((Class)SortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)ImmutableSortedMultiset.class, (Object)ImmutableSortedMultiset.of()).put((Class)BiMap.class, (Object)ImmutableBiMap.of()).put((Class)ImmutableBiMap.class, (Object)ImmutableBiMap.of()).put((Class)Table.class, (Object)ImmutableTable.of()).put((Class)ImmutableTable.class, (Object)ImmutableTable.of()).put((Class)RowSortedTable.class, (Object)Tables.unmodifiableRowSortedTable((RowSortedTable)TreeBasedTable.create())).put((Class)ClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)ImmutableClassToInstanceMap.class, (Object)ImmutableClassToInstanceMap.builder().build()).put((Class)Comparable.class, (Object)ByToString.INSTANCE).put((Class)Comparator.class, (Object)AlwaysEqual.INSTANCE).put((Class)Ordering.class, (Object)AlwaysEqual.INSTANCE).put((Class)Range.class, (Object)Range.all()).put((Class)MapDifference.class, (Object)Maps.difference((Map)ImmutableMap.of(), (Map)ImmutableMap.of())).put((Class)SortedMapDifference.class, (Object)Maps.difference((SortedMap)ImmutableSortedMap.of(), (Map)ImmutableSortedMap.of())).put((Class)AnnotatedElement.class, (Object)Object.class).put((Class)GenericDeclaration.class, (Object)Object.class).put((Class)Type.class, (Object)Object.class).build();

  symbol:   variable ImmutableMultiset
  location: class ArbitraryInstances
Note: sources/structure/com.google.guava/guava-testlib/31.1-jre/Decompiled/com/google/common/testing/ArbitraryInstances.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
100 errors
