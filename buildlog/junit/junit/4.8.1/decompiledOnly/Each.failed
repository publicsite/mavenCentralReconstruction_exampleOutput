sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:7: error: cannot find symbol
import org.hamcrest.Description;
                   ^
  symbol:   class Description
  location: package org.hamcrest
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:8: error: cannot find symbol
import org.hamcrest.BaseMatcher;
                   ^
  symbol:   class BaseMatcher
  location: package org.hamcrest
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:9: error: cannot find symbol
import org.hamcrest.CoreMatchers;
                   ^
  symbol:   class CoreMatchers
  location: package org.hamcrest
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:10: error: cannot find symbol
import org.hamcrest.Matcher;
                   ^
  symbol:   class Matcher
  location: package org.hamcrest
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:14: error: cannot find symbol
    public static <T> Matcher<Iterable<T>> each(final Matcher<T> individual) {
                                                      ^
  symbol:   class Matcher
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:14: error: cannot find symbol
    public static <T> Matcher<Iterable<T>> each(final Matcher<T> individual) {
                      ^
  symbol:   class Matcher
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:15: error: cannot find symbol
        final Matcher<Iterable<T>> allItemsAre = CoreMatchers.not(IsCollectionContaining.hasItem((Matcher<? extends T>)CoreMatchers.not((Matcher<? extends T>)individual)));
              ^
  symbol:   class Matcher
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:15: error: cannot find symbol
        final Matcher<Iterable<T>> allItemsAre = CoreMatchers.not(IsCollectionContaining.hasItem((Matcher<? extends T>)CoreMatchers.not((Matcher<? extends T>)individual)));
                                                 ^
  symbol:   variable CoreMatchers
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:15: error: cannot find symbol
        final Matcher<Iterable<T>> allItemsAre = CoreMatchers.not(IsCollectionContaining.hasItem((Matcher<? extends T>)CoreMatchers.not((Matcher<? extends T>)individual)));
                                                                                                  ^
  symbol:   class Matcher
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:15: error: cannot find symbol
        final Matcher<Iterable<T>> allItemsAre = CoreMatchers.not(IsCollectionContaining.hasItem((Matcher<? extends T>)CoreMatchers.not((Matcher<? extends T>)individual)));
                                                                                                                                         ^
  symbol:   class Matcher
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:15: error: cannot find symbol
        final Matcher<Iterable<T>> allItemsAre = CoreMatchers.not(IsCollectionContaining.hasItem((Matcher<? extends T>)CoreMatchers.not((Matcher<? extends T>)individual)));
                                                                                                                       ^
  symbol:   variable CoreMatchers
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:16: error: cannot find symbol
        return new BaseMatcher<Iterable<T>>() {
                   ^
  symbol:   class BaseMatcher
  location: class Each
sources/structure/junit/junit/4.8.1/Decompiled/org/junit/internal/matchers/Each.java:21: error: cannot find symbol
            public void describeTo(final Description description) {
                                         ^
  symbol: class Description
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/TypeSafeMatcher.java:24: error: cannot find symbol
        expectedType = findExpectedType(getClass());
                                        ^
  symbol:   method getClass()
  location: class TypeSafeMatcher<T>
  where T is a type-variable:
    T extends Object declared in class TypeSafeMatcher
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:44: error: cannot find symbol
        return hasItem(equalTo(element));
                       ^
  symbol:   method equalTo(T#1)
  location: class IsCollectionContaining<T#2>
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in method <T#1>hasItem(T#1)
    T#2 extends Object declared in class IsCollectionContaining
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:49: error: cannot find symbol
        Collection<Matcher<? extends Iterable<T>>> all
                   ^
  symbol:   class Matcher
  location: class IsCollectionContaining<T>
  where T is a type-variable:
    T extends Object declared in class IsCollectionContaining
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:50: error: cannot find symbol
                = new ArrayList<Matcher<? extends Iterable<T>>>(elementMatchers.length);
                                ^
  symbol:   class Matcher
  location: class IsCollectionContaining<T>
  where T is a type-variable:
    T extends Object declared in class IsCollectionContaining
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:51: error: cannot find symbol
        for (Matcher<? extends T> elementMatcher : elementMatchers) {
             ^
  symbol:   class Matcher
  location: class IsCollectionContaining<T>
  where T is a type-variable:
    T extends Object declared in class IsCollectionContaining
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:59: error: cannot find symbol
        Collection<Matcher<? extends Iterable<T>>> all
                   ^
  symbol:   class Matcher
  location: class IsCollectionContaining<T>
  where T is a type-variable:
    T extends Object declared in class IsCollectionContaining
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:60: error: cannot find symbol
                = new ArrayList<Matcher<? extends Iterable<T>>>(elements.length);
                                ^
  symbol:   class Matcher
  location: class IsCollectionContaining<T>
  where T is a type-variable:
    T extends Object declared in class IsCollectionContaining
sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java:62: error: reference to hasItem is ambiguous
            all.add(hasItem(element));
                    ^
  both method <T#1>hasItem(<any>) in IsCollectionContaining and method <T#2>hasItem(T#2) in IsCollectionContaining match
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in method <T#1>hasItem(<any>)
    T#2 extends Object declared in method <T#2>hasItem(T#2)
Note: sources/structure/junit/junit/4.8.1/extractedSources/org/junit/internal/matchers/IsCollectionContaining.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
21 errors
